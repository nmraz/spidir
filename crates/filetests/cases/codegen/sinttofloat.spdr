# run: codegen

func @sint32tofloat64:f64(i32) {
    # check: function `sint32tofloat64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: f2 0f 2a c7                     cvtsi2sd xmm0, edi
    # nextln: 000008: 5d                              pop rbp
    # nextln: 000009: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:f64 = sinttofloat %1
    return %0, %2
}

func @sint64tofloat64:f64(i64) {
    # check: function `sint64tofloat64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: f2 48 0f 2a c7                  cvtsi2sd xmm0, rdi
    # nextln: 000009: 5d                              pop rbp
    # nextln: 00000a: c3                              ret

    %0:ctrl, %1:i64 = entry
    %2:f64 = sinttofloat %1
    return %0, %2
}

func @sint32tofloat32:f32(i32) {
    # check: function `sint32tofloat32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: f3 0f 2a c7                     cvtsi2ss xmm0, edi
    # nextln: 000008: 5d                              pop rbp
    # nextln: 000009: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:f32 = sinttofloat %1
    return %0, %2
}

func @sint64tofloat32:f32(i64) {
    # check: function `sint64tofloat32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: f3 48 0f 2a c7                  cvtsi2ss xmm0, rdi
    # nextln: 000009: 5d                              pop rbp
    # nextln: 00000a: c3                              ret

    %0:ctrl, %1:i64 = entry
    %2:f32 = sinttofloat %1
    return %0, %2
}
