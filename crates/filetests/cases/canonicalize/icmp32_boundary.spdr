# run: canonicalize

func @icmp_slt_smin_val:i32(i32) {
    # check:   func @icmp_slt_smin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483648
    # dag:         $(icmp0=$val):i32 = icmp ne $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483648
    %r:i32 = icmp slt %a, %b
    return %c, %r
}

func @icmp_slt_smax_val:i32(i32) {
    # check:   func @icmp_slt_smax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483647
    %r:i32 = icmp slt %a, %b
    return %c, %r
}

func @icmp_slt_umin_val:i32(i32) {
    # check:   func @icmp_slt_umin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         $(icmp0=$val):i32 = icmp slt $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 0
    %r:i32 = icmp slt %a, %b
    return %c, %r
}

func @icmp_slt_umax_val:i32(i32) {
    # check:   func @icmp_slt_umax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 4294967295
    # dag:         $(icmp0=$val):i32 = icmp slt $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 4294967295
    %r:i32 = icmp slt %a, %b
    return %c, %r
}


func @icmp_sle_smin_val:i32(i32) {
    # check:   func @icmp_sle_smin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 1
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483648
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_sle_smax_val:i32(i32) {
    # check:   func @icmp_sle_smax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483647
    # dag:         $(icmp0=$val):i32 = icmp eq $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483647
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_sle_umin_val:i32(i32) {
    # check:   func @icmp_sle_umin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 4294967295
    # dag:         $(icmp0=$val):i32 = icmp slt $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 0
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_sle_umax_val:i32(i32) {
    # check:   func @icmp_sle_umax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 4294967294
    # dag:         $(icmp0=$val):i32 = icmp slt $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 4294967295
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_ult_umin_val:i32(i32) {
    # check:   func @icmp_ult_umin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         $(icmp0=$val):i32 = icmp ne $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 0
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ult_umax_val:i32(i32) {
    # check:   func @icmp_ult_umax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 4294967295
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ult_smin_val:i32(i32) {
    # check:   func @icmp_ult_smin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483648
    # dag:         $(icmp0=$val):i32 = icmp ult $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483648
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ult_smax_val:i32(i32) {
    # check:   func @icmp_ult_smax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483647
    # dag:         $(icmp0=$val):i32 = icmp ult $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483647
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ule_umin_val:i32(i32) {
    # check:   func @icmp_ule_umin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 1
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 0
    %r:i32 = icmp ule %a, %b
    return %c, %r
}

func @icmp_ule_umax_val:i32(i32) {
    # check:   func @icmp_ule_umax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 4294967295
    # dag:         $(icmp0=$val):i32 = icmp eq $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 4294967295
    %r:i32 = icmp ule %a, %b
    return %c, %r
}

func @icmp_ule_smin_val:i32(i32) {
    # check:   func @icmp_ule_smin_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483647
    # dag:         $(icmp0=$val):i32 = icmp ult $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483648
    %r:i32 = icmp ule %a, %b
    return %c, %r
}

func @icmp_ule_smax_val:i32(i32) {
    # check:   func @icmp_ule_smax_val:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483646
    # dag:         $(icmp0=$val):i32 = icmp ult $iconst0, $entry1
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %b:i32 = entry
    %a:i32 = iconst 2147483647
    %r:i32 = icmp ule %a, %b
    return %c, %r
}

func @icmp_slt_val_smin:i32(i32) {
    # check:   func @icmp_slt_val_smin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483648
    %r:i32 = icmp slt %a, %b
    return %c, %r
}

func @icmp_slt_val_smax:i32(i32) {
    # check:   func @icmp_slt_val_smax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483647
    # dag:         $(icmp0=$val):i32 = icmp ne $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483647
    %r:i32 = icmp slt %a, %b
    return %c, %r
}

func @icmp_slt_val_umin:i32(i32) {
    # check:   func @icmp_slt_val_umin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         $(icmp0=$val):i32 = icmp slt $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 0
    %r:i32 = icmp slt %a, %b
    return %c, %r
}

func @icmp_slt_val_umax:i32(i32) {
    # check:   func @icmp_slt_val_umax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 4294967295
    # dag:         $(icmp0=$val):i32 = icmp slt $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 4294967295
    %r:i32 = icmp slt %a, %b
    return %c, %r
}

func @icmp_sle_val_smin:i32(i32) {
    # check:   func @icmp_sle_val_smin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483648
    # dag:         $(icmp0=$val):i32 = icmp eq $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483648
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_sle_val_smax:i32(i32) {
    # check:   func @icmp_sle_val_smax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 1
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483647
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_sle_val_umin:i32(i32) {
    # check:   func @icmp_sle_val_umin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 1
    # dag:         $(icmp0=$val):i32 = icmp slt $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 0
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_sle_val_umax:i32(i32) {
    # check:   func @icmp_sle_val_umax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         $(icmp0=$val):i32 = icmp slt $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 4294967295
    %r:i32 = icmp sle %a, %b
    return %c, %r
}

func @icmp_ult_val_umin:i32(i32) {
    # check:   func @icmp_ult_val_umin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 0
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ult_val_umax:i32(i32) {
    # check:   func @icmp_ult_val_umax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 4294967295
    # dag:         $(icmp0=$val):i32 = icmp ne $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 4294967295
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ult_val_smin:i32(i32) {
    # check:   func @icmp_ult_val_smin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483648
    # dag:         $(icmp0=$val):i32 = icmp ult $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483648
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ult_val_smax:i32(i32) {
    # check:   func @icmp_ult_val_smax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483647
    # dag:         $(icmp0=$val):i32 = icmp ult $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483647
    %r:i32 = icmp ult %a, %b
    return %c, %r
}

func @icmp_ule_val_umin:i32(i32) {
    # check:   func @icmp_ule_val_umin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 0
    # dag:         $(icmp0=$val):i32 = icmp eq $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 0
    %r:i32 = icmp ule %a, %b
    return %c, %r
}

func @icmp_ule_val_umax:i32(i32) {
    # check:   func @icmp_ule_val_umax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 1
    # dag:         return $entry0, $iconst0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 4294967295
    %r:i32 = icmp ule %a, %b
    return %c, %r
}

func @icmp_ule_val_smin:i32(i32) {
    # check:   func @icmp_ule_val_smin:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483649
    # dag:         $(icmp0=$val):i32 = icmp ult $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483648
    %r:i32 = icmp ule %a, %b
    return %c, %r
}

func @icmp_ule_val_smax:i32(i32) {
    # check:   func @icmp_ule_val_smax:i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # dag:         $(iconst0=$val):i32 = iconst 2147483648
    # dag:         $(icmp0=$val):i32 = icmp ult $entry1, $iconst0
    # dag:         return $entry0, $icmp0
    # nextln:  }

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483647
    %r:i32 = icmp ule %a, %b
    return %c, %r
}
