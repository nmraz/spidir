# run: codegen[small-pic]

extfunc @f:i32()

func @func:i32() {
    # check: function `func`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 53                              push rbx
    # nextln: 000005: 50                              push rax
    # nextln: 000006: e8 00 00 00 00                  call 0xb  # RELOC_PC32 -> @f + -4
    # nextln: 00000b: 89 c3                           mov ebx, eax
    # nextln: 00000d: e8 00 00 00 00                  call 0x12  # RELOC_PC32 -> @f + -4
    # nextln: 000012: 23 d8                           and ebx, eax
    # nextln: 000014: e8 00 00 00 00                  call 0x19  # RELOC_PC32 -> @f + -4
    # nextln: 000019: 23 d8                           and ebx, eax
    # nextln: 00001b: e8 00 00 00 00                  call 0x20  # RELOC_PC32 -> @f + -4
    # nextln: 000020: 23 d8                           and ebx, eax
    # nextln: 000022: e8 00 00 00 00                  call 0x27  # RELOC_PC32 -> @f + -4
    # nextln: 000027: 23 d8                           and ebx, eax
    # nextln: 000029: e8 00 00 00 00                  call 0x2e  # RELOC_PC32 -> @f + -4
    # nextln: 00002e: 23 d8                           and ebx, eax
    # nextln: 000030: e8 00 00 00 00                  call 0x35  # RELOC_PC32 -> @f + -4
    # nextln: 000035: 23 d8                           and ebx, eax
    # nextln: 000037: e8 00 00 00 00                  call 0x3c  # RELOC_PC32 -> @f + -4
    # nextln: 00003c: 23 d8                           and ebx, eax
    # nextln: 00003e: e8 00 00 00 00                  call 0x43  # RELOC_PC32 -> @f + -4
    # nextln: 000043: 23 d8                           and ebx, eax
    # nextln: 000045: e8 00 00 00 00                  call 0x4a  # RELOC_PC32 -> @f + -4
    # nextln: 00004a: 23 c3                           and eax, ebx
    # nextln: 00004c: 48 83 c4 08                     add rsp, 8
    # nextln: 000050: 5b                              pop rbx
    # nextln: 000051: 5d                              pop rbp
    # nextln: 000052: c3                              ret

    %ent:ctrl = entry
    %c0:ctrl, %v0:i32 = call @f %ent
    %c1:ctrl, %v1:i32 = call @f %c0
    %c2:ctrl, %v2:i32 = call @f %c1
    %c3:ctrl, %v3:i32 = call @f %c2
    %c4:ctrl, %v4:i32 = call @f %c3
    %c5:ctrl, %v5:i32 = call @f %c4
    %c6:ctrl, %v6:i32 = call @f %c5
    %c7:ctrl, %v7:i32 = call @f %c6
    %c8:ctrl, %v8:i32 = call @f %c7
    %c9:ctrl, %v9:i32 = call @f %c8
    %a1:i32 = and %v0, %v1
    %a2:i32 = and %a1, %v2
    %a3:i32 = and %a2, %v3
    %a4:i32 = and %a3, %v4
    %a5:i32 = and %a4, %v5
    %a6:i32 = and %a5, %v6
    %a7:i32 = and %a6, %v7
    %a8:i32 = and %a7, %v8
    %a9:i32 = and %a8, %v9
    return %c9, %a9
}
