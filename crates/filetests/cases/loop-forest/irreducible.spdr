# run: loop-forest

func @irreducible(i32, i32, i32) {
    # check: function `irreducible`:
    # nextln: %0:ctrl, %1:i32, %2:i32, %3:i32 = entry         # x
    # nextln: %4:ctrl, %5:ctrl = brcond %0, %1        # x
    # nextln: %12:ctrl, %13:ctrl = brcond %10, %3     # x
    # nextln: %6:ctrl, %7:phisel = region %4, %13     # x
    # nextln: %8:ctrl, %9:ctrl = brcond %6, %1        # x
    # nextln: %14:ctrl, %15:phisel = region %8, %12   # x
    # nextln: return %14                              # x
    # nextln: %10:ctrl, %11:phisel = region %5, %9    # x

    %ent:ctrl, %p1:i32, %p2:i32, %p3:i32 = entry
    %to_cycle1:ctrl, %to_cycle2:ctrl = brcond %ent, %p1
    %cycle1:ctrl, %c1p:phisel = region %to_cycle1, %c2_to_c1
    %c1_to_exit:ctrl, %c1_to_c2:ctrl = brcond %cycle1, %p1
    %cycle2:ctrl, %c2p:phisel = region %to_cycle2, %c1_to_c2
    %c2_to_exit:ctrl, %c2_to_c1:ctrl = brcond %cycle2, %p3
    %exit:ctrl, %ep:phisel = region %c1_to_exit, %c2_to_exit
    return %exit
}

func @header_in_irreducible_cycle(i32, i32, i32, i32) {
    # check: function `header_in_irreducible_cycle`:
    # nextln: %0:ctrl, %1:i32, %2:i32, %3:i32, %4:i32 = entry         # x
    # nextln: %5:ctrl, %6:ctrl = brcond %0, %1        # x
    # nextln: %11:ctrl, %12:ctrl = brcond %10, %3     # loop 0; x
    # nextln: %7:ctrl, %8:phisel = region %11, %5, %13        # loop 0; header; root 0; x
    # nextln: %9:ctrl, %10:ctrl = brcond %7, %2       # loop 0; x
    # nextln: %13:ctrl, %14:phisel = region %6, %9    # x
    # nextln: return %12                              # x

    %ent:ctrl, %p1:i32, %p2:i32, %p3:i32, %p4:i32 = entry
    %to_header:ctrl, %to_cycle2:ctrl = brcond %ent, %p1
    %header:ctrl, %hp:phisel = region %backedge, %to_header, %cycle2_to_header
    %header_to_cycle2:ctrl, %to_body:ctrl = brcond %header, %p2
    %backedge:ctrl, %exit:ctrl = brcond %to_body, %p3
    %cycle2_to_header:ctrl, %c2p:phisel = region %to_cycle2, %header_to_cycle2
    return %exit
}

func @irreducible_cycle_in_body(i32, i32, i32) {
    # check: function `irreducible_cycle_in_body`:
    # nextln: %0:ctrl, %1:i32, %2:i32, %3:i32 = entry         # x
    # nextln: %14:ctrl, %15:ctrl = brcond %12, %3     # loop 0; x
    # nextln: %8:ctrl, %9:phisel = region %6, %14     # loop 0; x
    # nextln: %10:ctrl, %11:ctrl = brcond %8, %2      # loop 0; x
    # nextln: %4:ctrl, %5:phisel = region %0, %10     # loop 0; header; root 0; x
    # nextln: %6:ctrl, %7:ctrl = brcond %4, %1        # loop 0; x
    # nextln: %12:ctrl, %13:phisel = region %11, %7   # loop 0; x
    # nextln: return %15                              # x

    %ent:ctrl, %p1:i32, %p2:i32, %p3:i32 = entry
    %header:ctrl, %hp:phisel = region %ent, %backedge
    %to_latch:ctrl, %to_other:ctrl = brcond %header, %p1
    %latch:ctrl, %lp:phisel = region %to_latch, %other_to_latch
    %backedge:ctrl, %latch_to_other:ctrl = brcond %latch, %p2
    %other:ctrl, %op:phisel = region %latch_to_other, %to_other
    %other_to_latch:ctrl, %exit:ctrl = brcond %other, %p3
    return %exit
}
