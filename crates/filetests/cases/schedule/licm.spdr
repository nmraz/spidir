# run: schedule

extfunc @f(i32)

func @licm_chain(ptr, i64) {
    # check: function `licm_chain`:
    # nextln: block0:
    # nextln:     $(entry0=$val):ctrl, $(entry1=$val):ptr, $(entry2=$val):i64 = entry
    # nextln:     $(load0=$val):ctrl, $(load1=$val):i64 = load.8 $entry0, $entry1
    # nextln:     $(iconst0=$val):i64 = iconst 2
    # nextln:     $(iconst1=$val):i64 = iconst 1
    # nextln:     $(iconst2=$val):i64 = iconst 0
    # nextln:     $(iconst3=$val):i64 = iconst 8
    # nextln:     $(ptroff0=$val):ptr = ptroff $entry1, $iconst3
    # nextln: => block1
    # nextln: block1:
    # nextln:     $(region0=$val):ctrl, $(region1=$val):phisel = region $load0, $(call0=$val)
    # nextln:     $(phi0=$val):i64 = phi $region1, $iconst2, $(iadd0=$val)
    # nextln:     $(icmp0=$val):i32 = icmp eq $phi0, $load1
    # nextln:     $(brcond0=$val):ctrl, $(brcond1=$val):ctrl = brcond $region0, $icmp0
    # nextln: => block2, block3
    # nextln: block3:
    # nextln:     return $brcond1
    # nextln: block2:
    # nextln:     $iadd0:i64 = iadd $phi0, $iconst1
    # nextln:     $(shl0=$val):i64 = shl $phi0, $iconst0
    # nextln:     $(ptroff1=$val):ptr = ptroff $ptroff0, $shl0
    # nextln:     $(load2=$val):ctrl, $(load3=$val):i32 = load.4 $brcond0, $ptroff1
    # nextln:     $call0:ctrl = call @f $load2, $load3
    # nextln: => block1

    %ent:ctrl, %p1:ptr, %p2:i64 = entry
    %preheader:ctrl, %len:i64 = load.8 %ent, %p1
    %header:ctrl, %hp:phisel = region %preheader, %postcall
    %0:i64 = iconst 0
    %i:i64 = phi %hp, %0, %inext
    %done:i32 = icmp eq %i, %len
    %body:ctrl, %exit:ctrl = brcond %header, %done
    %startoff:i64 = iconst 8
    %start:ptr = ptroff %p1, %startoff
    %2:i64 = iconst 2
    %off:i64 = shl %i, %2
    %p:ptr = ptroff %start, %off
    %postload:ctrl, %val:i32 = load.4 %body, %p
    %postcall:ctrl = call @f %postload, %val
    %1:i64 = iconst 1
    %inext:i64 = iadd %i, %1
    return %exit
}
