# run: isel-regalloc[small-pic]

# The goal of this test is to make sure that physical register hints are propagated correctly when
# creating small "connector" ranges for individual instructions during spilling. We do this by
# keeping a large number of values live and repeatedly passing them to function calls (which require
# them in fixed registers).

# Note that in order to force a "proper" reload to take place (instead of just a pre-copy into the
# fixed register), we need the operands to be marked as requiring registers. This actually isn't the
# case for simple fixed register operands, but it becomes the case whenever the value is used by
# more than one operand of the instruction (to avoid additional stack accesses). For that reason,
# `sink` is passed the value in two different parameters.

extfunc @source:i32()
extfunc @sink(i32, i32)

func @spill_connector_hint() {
    # check: function `spill_connector_hint`:
    # nextln: clobbers: rax, rbx, rcx, rdx, rdi, rsi, r8, r9, r10, r11, r12, r13, r14, r15
    # nextln: frame: size 128, align 8
    # nextln:     spill0: 0
    # nextln:     spill1: 8
    # nextln:     spill2: 16
    # nextln:     spill3: 24
    # nextln:     spill4: 32
    # nextln:     spill5: 40
    # nextln:     spill6: 48
    # nextln:     spill7: 56
    # nextln:     spill8: 64
    # nextln:     spill9: 72
    # nextln:     spill10: 80
    # nextln:     spill11: 88
    # nextln:     spill12: 96
    # nextln:     spill13: 104
    # nextln:     spill14: 112
    # nextln:     spill15: 120
    # nextln:       block0:
    # nextln: 0000:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$rbx = $$rax
    # nextln: 0001:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$r12 = $$rbx
    # nextln:           $$rbx = $$rax
    # nextln: 0002:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$r13 = $$r12
    # nextln:           $$r12 = $$rbx
    # nextln:           $$rbx = $$rax
    # nextln: 0003:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$rcx = $$r13
    # nextln:           $$r13 = $$r12
    # nextln:           $$r12 = $$rcx
    # nextln:           $$r14 = $$rbx
    # nextln:           $$rbx = $$rax
    # nextln: 0004:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$r15 = $$rbx
    # nextln:           $$rbx = $$r13
    # nextln:           $$r13 = $$rax
    # nextln: 0005:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill15 = $$r12
    # nextln:           $$r12 = $$r15
    # nextln:           $$r15 = $$rbx
    # nextln:           $$rbx = $$r14
    # nextln:           $$r14 = $$rax
    # nextln: 0006:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill14 = $$r15
    # nextln:           $$spill13 = $$rbx
    # nextln:           $$rbx = $$r12
    # nextln:           $$r15 = $$rax
    # nextln:           $$r12 = $$spill15
    # nextln: 0007:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill12 = $$rbx
    # nextln:           $$rbx = $$rax
    # nextln: 0008:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill15 = $$r12
    # nextln:           $$r12 = $$rax
    # nextln: 0009:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill11 = $$r13
    # nextln:           $$spill10 = $$r14
    # nextln:           $$r14 = $$spill13
    # nextln:           $$r13 = $$rbx
    # nextln:           $$rbx = $$r12
    # nextln:           $$r12 = $$rax
    # nextln: 0010:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill8 = $$r13
    # nextln:           $$r13 = $$rax
    # nextln:           $$spill7 = $$rbx
    # nextln:           $$rbx = $$spill15
    # nextln: 0011:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill15 = $$rbx
    # nextln:           $$rbx = $$r14
    # nextln:           $$r14 = $$rax
    # nextln: 0012:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill13 = $$rbx
    # nextln:           $$rbx = $$rax
    # nextln: 0013:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill9 = $$r15
    # nextln:           $$r15 = $$spill13
    # nextln:           $$spill6 = $$r12
    # nextln:           $$r12 = $$rax
    # nextln:           $$spill5 = $$r13
    # nextln:           $$r13 = $$spill15
    # nextln:           $$spill4 = $$r14
    # nextln:           $$r14 = $$spill10
    # nextln:           $$spill3 = $$rbx
    # nextln:           $$rbx = $$spill14
    # nextln: 0014:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill10 = $$r14
    # nextln:           $$r14 = $$rax
    # nextln: 0015:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$spill2 = $$r12
    # nextln:           $$spill1 = $$r14
    # nextln:           $$r14 = $$spill12
    # nextln:           $$r12 = $$rax
    # nextln:           $$rsi = $$r13
    # nextln:           $$rdi = $$r13
    # nextln: 0016:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rsi = $$rbx
    # nextln:           $$rdi = $$rbx
    # nextln: 0017:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rsi = $$r15
    # nextln:           $$rdi = $$r15
    # nextln: 0018:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rsi = $$r14
    # nextln:           $$rdi = $$r14
    # nextln: 0019:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill11
    # nextln:           $$rsi = $$rdi
    # nextln: 0020:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill10
    # nextln:           $$rsi = $$rdi
    # nextln: 0021:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill9
    # nextln:           $$rsi = $$rdi
    # nextln: 0022:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill8
    # nextln:           $$rsi = $$rdi
    # nextln: 0023:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill7
    # nextln:           $$rsi = $$rdi
    # nextln: 0024:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill6
    # nextln:           $$rsi = $$rdi
    # nextln: 0025:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill5
    # nextln:           $$rsi = $$rdi
    # nextln: 0026:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill4
    # nextln:           $$rsi = $$rdi
    # nextln: 0027:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill3
    # nextln:           $$rsi = $$rdi
    # nextln: 0028:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill2
    # nextln:           $$rsi = $$rdi
    # nextln: 0029:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$spill1
    # nextln:           $$rsi = $$rdi
    # nextln: 0030:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$r12
    # nextln:           $$rsi = $$r12
    # nextln: 0031:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rsi = $$r13
    # nextln:           $$rdi = $$r13
    # nextln: 0032:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rax = $$r15
    # nextln:           $$r15 = $$r14
    # nextln:           $$r14 = $$rax
    # nextln:           $$r13 = $$spill11
    # nextln:           $$rsi = $$rbx
    # nextln:           $$rdi = $$rbx
    # nextln: 0033:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$spill0 = $$r12
    # nextln:           $$r12 = $$spill10
    # nextln:           $$rbx = $$spill9
    # nextln:           $$rsi = $$r14
    # nextln:           $$rdi = $$r14
    # nextln: 0034:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$r14 = $$spill6
    # nextln:           $$rsi = $$r15
    # nextln:           $$rdi = $$r15
    # nextln: 0035:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$r15 = $$spill8
    # nextln:           $$rsi = $$r13
    # nextln:           $$rdi = $$r13
    # nextln: 0036:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$r13 = $$spill2
    # nextln:           $$spill6 = $$r14
    # nextln:           $$r14 = $$spill7
    # nextln:           $$rsi = $$r12
    # nextln:           $$rdi = $$r12
    # nextln: 0037:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$r12 = $$spill3
    # nextln:           $$rsi = $$rbx
    # nextln:           $$rdi = $$rbx
    # nextln: 0038:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rbx = $$spill6
    # nextln:           $$rdi = $$r15
    # nextln:           $$rsi = $$r15
    # nextln: 0039:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$r15 = $$spill5
    # nextln:           $$spill3 = $$r12
    # nextln:           $$r12 = $$spill4
    # nextln:           $$rsi = $$r14
    # nextln:           $$rdi = $$r14
    # nextln: 0040:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$r14 = $$r13
    # nextln:           $$r13 = $$spill3
    # nextln:           $$rsi = $$rbx
    # nextln:           $$rdi = $$rbx
    # nextln: 0041:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rbx = $$spill1
    # nextln:           $$rsi = $$r15
    # nextln:           $$rdi = $$r15
    # nextln: 0042:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$r15 = $$spill0
    # nextln:           $$rdi = $$r12
    # nextln:           $$rsi = $$r12
    # nextln: 0043:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$r13
    # nextln:           $$rsi = $$r13
    # nextln: 0044:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$r14
    # nextln:           $$rsi = $$r14
    # nextln: 0045:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rsi = $$rbx
    # nextln:           $$rdi = $$rbx
    # nextln: 0046:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln:           $$rdi = $$r15
    # nextln:           $$rsi = $$r15
    # nextln: 0047:     CallRel(External(extfunc1)) $$rdi, $$rsi
    # nextln: 0048:     Ret

    %ent:ctrl = entry

    %s1:ctrl, %a1:i32 = call @source %ent
    %s2:ctrl, %a2:i32 = call @source %s1
    %s3:ctrl, %a3:i32 = call @source %s2
    %s4:ctrl, %a4:i32 = call @source %s3
    %s5:ctrl, %a5:i32 = call @source %s4
    %s6:ctrl, %a6:i32 = call @source %s5
    %s7:ctrl, %a7:i32 = call @source %s6
    %s8:ctrl, %a8:i32 = call @source %s7
    %s9:ctrl, %a9:i32 = call @source %s8
    %s10:ctrl, %a10:i32 = call @source %s9
    %s11:ctrl, %a11:i32 = call @source %s10
    %s12:ctrl, %a12:i32 = call @source %s11
    %s13:ctrl, %a13:i32 = call @source %s12
    %s14:ctrl, %a14:i32 = call @source %s13
    %s15:ctrl, %a15:i32 = call @source %s14
    %s16:ctrl, %a16:i32 = call @source %s15

    %c2:ctrl = call @sink %s16, %a1, %a1
    %c3:ctrl = call @sink %c2, %a2, %a2
    %c4:ctrl = call @sink %c3, %a3, %a3
    %c5:ctrl = call @sink %c4, %a4, %a4
    %c6:ctrl = call @sink %c5, %a5, %a5
    %c7:ctrl = call @sink %c6, %a6, %a6
    %c8:ctrl = call @sink %c7, %a7, %a7
    %c9:ctrl = call @sink %c8, %a8, %a8
    %c10:ctrl = call @sink %c9, %a9, %a9
    %c11:ctrl = call @sink %c10, %a10, %a10
    %c12:ctrl = call @sink %c11, %a11, %a11
    %c13:ctrl = call @sink %c12, %a12, %a12
    %c14:ctrl = call @sink %c13, %a13, %a13
    %c15:ctrl = call @sink %c14, %a14, %a14
    %c16:ctrl = call @sink %c15, %a15, %a15
    %c17:ctrl = call @sink %c16, %a16, %a16

    %c18:ctrl = call @sink %c17, %a1, %a1
    %c19:ctrl = call @sink %c18, %a2, %a2
    %c20:ctrl = call @sink %c19, %a3, %a3
    %c21:ctrl = call @sink %c20, %a4, %a4
    %c22:ctrl = call @sink %c21, %a5, %a5
    %c23:ctrl = call @sink %c22, %a6, %a6
    %c24:ctrl = call @sink %c23, %a7, %a7
    %c25:ctrl = call @sink %c24, %a8, %a8
    %c26:ctrl = call @sink %c25, %a9, %a9
    %c27:ctrl = call @sink %c26, %a10, %a10
    %c28:ctrl = call @sink %c27, %a11, %a11
    %c29:ctrl = call @sink %c28, %a12, %a12
    %c30:ctrl = call @sink %c29, %a13, %a13
    %c31:ctrl = call @sink %c30, %a14, %a14
    %c32:ctrl = call @sink %c31, %a15, %a15
    %c33:ctrl = call @sink %c32, %a16, %a16

    return %c33
}
