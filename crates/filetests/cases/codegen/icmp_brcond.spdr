# run: codegen

func @select_eq:i32(i32, i32, i32, i32) {
    # check: function `select_eq`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 d0                        mov rax, rdx
    # nextln: 000007: 3b fe                           cmp edi, esi
    # nextln: 000009: 0f 84 03 00 00 00               je 0x12
    # nextln: 00000f: 48 89 c8                        mov rax, rcx
    # nextln: 000012: 5d                              pop rbp
    # nextln: 000013: c3                              ret

    %0:ctrl, %a:i32, %b:i32, %2:i32, %3:i32 = entry
    %1:i32 = icmp eq %a, %b
    %8:ctrl, %9:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %8, %9
    %10:i32 = phi %7, %2, %3
    return %6, %10
}

func @select_ne:i32(i32, i32, i32, i32) {
    # check: function `select_ne`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 d0                        mov rax, rdx
    # nextln: 000007: 3b fe                           cmp edi, esi
    # nextln: 000009: 0f 85 03 00 00 00               jne 0x12
    # nextln: 00000f: 48 89 c8                        mov rax, rcx
    # nextln: 000012: 5d                              pop rbp
    # nextln: 000013: c3                              ret

    %0:ctrl, %a:i32, %b:i32, %2:i32, %3:i32 = entry
    %1:i32 = icmp ne %a, %b
    %8:ctrl, %9:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %8, %9
    %10:i32 = phi %7, %2, %3
    return %6, %10
}

func @select_slt:i32(i32, i32, i32, i32) {
    # check: function `select_slt`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 d0                        mov rax, rdx
    # nextln: 000007: 3b fe                           cmp edi, esi
    # nextln: 000009: 0f 8c 03 00 00 00               jl 0x12
    # nextln: 00000f: 48 89 c8                        mov rax, rcx
    # nextln: 000012: 5d                              pop rbp
    # nextln: 000013: c3                              ret

    %0:ctrl, %a:i32, %b:i32, %2:i32, %3:i32 = entry
    %1:i32 = icmp slt %a, %b
    %8:ctrl, %9:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %8, %9
    %10:i32 = phi %7, %2, %3
    return %6, %10
}

func @select_sle:i32(i32, i32, i32, i32) {
    # check: function `select_sle`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 d0                        mov rax, rdx
    # nextln: 000007: 3b fe                           cmp edi, esi
    # nextln: 000009: 0f 8e 03 00 00 00               jle 0x12
    # nextln: 00000f: 48 89 c8                        mov rax, rcx
    # nextln: 000012: 5d                              pop rbp
    # nextln: 000013: c3                              ret

    %0:ctrl, %a:i32, %b:i32, %2:i32, %3:i32 = entry
    %1:i32 = icmp sle %a, %b
    %8:ctrl, %9:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %8, %9
    %10:i32 = phi %7, %2, %3
    return %6, %10
}

func @select_ult:i32(i32, i32, i32, i32) {
    # check: function `select_ult`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 d0                        mov rax, rdx
    # nextln: 000007: 3b fe                           cmp edi, esi
    # nextln: 000009: 0f 82 03 00 00 00               jb 0x12
    # nextln: 00000f: 48 89 c8                        mov rax, rcx
    # nextln: 000012: 5d                              pop rbp
    # nextln: 000013: c3                              ret

    %0:ctrl, %a:i32, %b:i32, %2:i32, %3:i32 = entry
    %1:i32 = icmp ult %a, %b
    %8:ctrl, %9:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %8, %9
    %10:i32 = phi %7, %2, %3
    return %6, %10
}

func @select_ule:i32(i32, i32, i32, i32) {
    # check: function `select_ule`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 d0                        mov rax, rdx
    # nextln: 000007: 3b fe                           cmp edi, esi
    # nextln: 000009: 0f 86 03 00 00 00               jbe 0x12
    # nextln: 00000f: 48 89 c8                        mov rax, rcx
    # nextln: 000012: 5d                              pop rbp
    # nextln: 000013: c3                              ret

    %0:ctrl, %a:i32, %b:i32, %2:i32, %3:i32 = entry
    %1:i32 = icmp ule %a, %b
    %8:ctrl, %9:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %8, %9
    %10:i32 = phi %7, %2, %3
    return %6, %10
}

func @select_slt_cond_reused:i32(i32, i32, i32, i32) {
    # check: function `select_slt_cond_reused`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 d0                        mov rax, rdx
    # nextln: 000007: 33 d2                           xor edx, edx
    # nextln: 000009: 3b fe                           cmp edi, esi
    # nextln: 00000b: 0f 9c c2                        setl dl
    # nextln: 00000e: 85 d2                           test edx, edx
    # nextln: 000010: 0f 85 03 00 00 00               jne 0x19
    # nextln: 000016: 48 89 c8                        mov rax, rcx
    # nextln: 000019: b9 05 00 00 00                  mov ecx, 5
    # nextln: 00001e: 33 d1                           xor edx, ecx
    # nextln: 000020: 03 c2                           add eax, edx
    # nextln: 000022: 5d                              pop rbp
    # nextln: 000023: c3                              ret

    %0:ctrl, %a:i32, %b:i32, %2:i32, %3:i32 = entry
    %1:i32 = icmp slt %a, %b
    %five:i32 = iconst 5
    %thing:i32 = xor %1, %five
    %8:ctrl, %9:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %8, %9
    %10:i32 = phi %7, %2, %3
    %retval:i32 = iadd %10, %thing
    return %6, %retval
}
