# run: codegen

extfunc @g(ptr)

func @aligned_stack(i32) {
    # check: function `aligned_stack`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 83 ec 20                     sub rsp, 0x20
    # nextln: 000008: 48 83 e4 e0                     and rsp, 0xffffffffffffffe0
    # nextln: 00000c: 89 3c 24                        mov dword ptr [rsp], edi
    # nextln: 00000f: 48 89 ec                        mov rsp, rbp
    # nextln: 000012: 5d                              pop rbp
    # nextln: 000013: c3                              ret

    %0:ctrl, %1:i32 = entry
    %s:ptr = stackslot 32:32
    %2:ctrl = store.4 %0, %1, %s
    return %2
}

func @aligned_stack_with_saved_regs:i32(i32) {
    # check: function `aligned_stack_with_saved_regs`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 53                              push rbx
    # nextln: 000005: 48 83 ec 20                     sub rsp, 0x20
    # nextln: 000009: 48 83 e4 e0                     and rsp, 0xffffffffffffffe0
    # nextln: 00000d: 89 fb                           mov ebx, edi
    # nextln: 00000f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @g + 0
    # nextln: 000019: 48 89 e7                        mov rdi, rsp
    # nextln: 00001c: ff d0                           call rax
    # nextln: 00001e: 89 d8                           mov eax, ebx
    # nextln: 000020: 48 8d 65 f8                     lea rsp, [rbp - 8]
    # nextln: 000024: 5b                              pop rbx
    # nextln: 000025: 5d                              pop rbp
    # nextln: 000026: c3                              ret

    %0:ctrl, %1:i32 = entry
    %s:ptr = stackslot 32:32
    %2:ctrl = call @g %0, %s
    return %2, %1
}
