# run: isel-regalloc

func @many_params:i64(i64, i64, i64, i64, i64, i64, i64, i64) {
    # check: function `many_params`:
    # nextln: clobbers: rax, rcx, rdx, rdi, r8, r10
    # nextln: frame: size 0, align 0
    # nextln:       block0:
    # nextln: 0000:     $$rax = MovRRbp { op_size: S64, offset: 24 }
    # nextln: 0001:     $$r10 = MovRRbp { op_size: S64, offset: 16 }
    # nextln: 0002:     $$rdi = AddRR(S64) $$rdi, $$rsi
    # nextln: 0003:     $$rdx = AddRR(S64) $$rdi, $$rdx
    # nextln: 0004:     $$rcx = AddRR(S64) $$rdx, $$rcx
    # nextln: 0005:     $$r8 = AddRR(S64) $$rcx, $$r8
    # nextln: 0006:     $$r8 = AddRR(S64) $$r8, $$r9
    # nextln: 0007:     $$r10 = AddRR(S64) $$r8, $$r10
    # nextln: 0008:     $$rax = AddRR(S64) $$r10, $$rax
    # nextln: 0009:     Ret $$rax

    %c:ctrl, %1:i64, %2:i64, %3:i64, %4:i64, %5:i64, %6:i64, %7:i64, %8:i64 = entry
    %val:i64 = iadd %1, %2
    %val2:i64 = iadd %val, %3
    %val3:i64 = iadd %val2, %4
    %val4:i64 = iadd %val3, %5
    %val5:i64 = iadd %val4, %6
    %val6:i64 = iadd %val5, %7
    %val7:i64 = iadd %val6, %8
    return %c, %val7
}

func @unused_param:i64(ptr, i64, i64) {
    # check: function `unused_param`:
    # nextln: clobbers: rax
    # nextln: frame: size 0, align 0
    # nextln:       block0:
    # nextln: 0000:     $$rax = AddRR(S64) $$rsi, $$rdx
    # nextln: 0001:     Ret $$rax

    %c:ctrl, %p:ptr, %a:i64, %b:i64 = entry
    %val:i64 = iadd %a, %b
    return %c, %val
}
