# run: codegen

extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)":i32(ptr, i32)
extfunc @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)":i32(i64, i32)

func @"System.Boolean Tests.BitTest::Run()":i32() {
    # check: function `System.Boolean Tests.BitTest::Run()`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 41 57                           push r15
    # nextln: 000006: 41 56                           push r14
    # nextln: 000008: 41 55                           push r13
    # nextln: 00000a: 41 54                           push r12
    # nextln: 00000c: 53                              push rbx
    # nextln: 00000d: 48 81 ec a8 00 00 00            sub rsp, 0xa8
    # nextln: 000014: 33 c0                           xor eax, eax
    # nextln: 000016: 48 8d 8c 24 96 00 00 00         lea rcx, [rsp + 0x96]
    # nextln: 00001e: 48 8d 94 24 90 00 00 00         lea rdx, [rsp + 0x90]
    # nextln: 000026: 48 89 54 24 50                  mov qword ptr [rsp + 0x50], rdx
    # nextln: 00002b: 33 db                           xor ebx, ebx
    # nextln: 00002d: 48 89 e2                        mov rdx, rsp
    # nextln: 000030: 48 89 54 24 18                  mov qword ptr [rsp + 0x18], rdx
    # nextln: 000035: 48 8d 54 24 08                  lea rdx, [rsp + 8]
    # nextln: 00003a: 48 89 54 24 20                  mov qword ptr [rsp + 0x20], rdx
    # nextln: 00003f: 48 8d 94 24 88 00 00 00         lea rdx, [rsp + 0x88]
    # nextln: 000047: 48 89 54 24 38                  mov qword ptr [rsp + 0x38], rdx
    # nextln: 00004c: 48 8d 94 24 92 00 00 00         lea rdx, [rsp + 0x92]
    # nextln: 000054: 48 89 54 24 58                  mov qword ptr [rsp + 0x58], rdx
    # nextln: 000059: 48 8d 94 24 8c 00 00 00         lea rdx, [rsp + 0x8c]
    # nextln: 000061: 48 89 54 24 40                  mov qword ptr [rsp + 0x40], rdx
    # nextln: 000066: 48 8d 94 24 94 00 00 00         lea rdx, [rsp + 0x94]
    # nextln: 00006e: 48 89 54 24 68                  mov qword ptr [rsp + 0x68], rdx
    # nextln: 000073: 48 8d 94 24 97 00 00 00         lea rdx, [rsp + 0x97]
    # nextln: 00007b: 88 9c 24 97 00 00 00            mov byte ptr [rsp + 0x97], bl
    # nextln: 000082: 88 9c 24 96 00 00 00            mov byte ptr [rsp + 0x96], bl
    # nextln: 000089: 48 8d bc 24 98 00 00 00         lea rdi, [rsp + 0x98]
    # nextln: 000091: 48 89 7c 24 78                  mov qword ptr [rsp + 0x78], rdi
    # nextln: 000096: 88 9c 24 98 00 00 00            mov byte ptr [rsp + 0x98], bl
    # nextln: 00009d: 66 89 9c 24 94 00 00 00         mov word ptr [rsp + 0x94], bx
    # nextln: 0000a5: 66 89 9c 24 92 00 00 00         mov word ptr [rsp + 0x92], bx
    # nextln: 0000ad: 66 89 9c 24 90 00 00 00         mov word ptr [rsp + 0x90], bx
    # nextln: 0000b5: 89 9c 24 8c 00 00 00            mov dword ptr [rsp + 0x8c], ebx
    # nextln: 0000bc: 89 9c 24 88 00 00 00            mov dword ptr [rsp + 0x88], ebx
    # nextln: 0000c3: 48 89 44 24 08                  mov qword ptr [rsp + 8], rax
    # nextln: 0000c8: 48 89 04 24                     mov qword ptr [rsp], rax
    # nextln: 0000cc: 41 bd 07 00 00 00               mov r13d, 7
    # nextln: 0000d2: 48 89 d0                        mov rax, rdx
    # nextln: 0000d5: 49 89 cc                        mov r12, rcx
    # nextln: 0000d8: 41 be 08 00 00 00               mov r14d, 8
    # nextln: 0000de: b9 01 00 00 00                  mov ecx, 1
    # nextln: 0000e3: 48 c7 44 24 30 20 00 00 00      mov qword ptr [rsp + 0x30], 0x20
    # nextln: 0000ec: 48 c7 44 24 70 0f 00 00 00      mov qword ptr [rsp + 0x70], 0xf
    # nextln: 0000f5: 48 c7 44 24 60 10 00 00 00      mov qword ptr [rsp + 0x60], 0x10
    # nextln: 0000fe: 48 c7 44 24 48 03 00 00 00      mov qword ptr [rsp + 0x48], 3
    # nextln: 000107: 48 c7 44 24 28 40 00 00 00      mov qword ptr [rsp + 0x28], 0x40
    # nextln: 000110: ba 02 00 00 00                  mov edx, 2
    # nextln: 000115: 48 63 f1                        movsxd rsi, ecx
    # nextln: 000118: 48 63 fa                        movsxd rdi, edx
    # nextln: 00011b: 41 b8 80 ff ff ff               mov r8d, 0xffffff80
    # nextln: 000121: 44 88 84 24 97 00 00 00         mov byte ptr [rsp + 0x97], r8b
    # nextln: 000129: 41 b8 00 80 ff ff               mov r8d, 0xffff8000
    # nextln: 00012f: 88 8c 24 96 00 00 00            mov byte ptr [rsp + 0x96], cl
    # nextln: 000136: 88 94 24 98 00 00 00            mov byte ptr [rsp + 0x98], dl
    # nextln: 00013d: 66 44 89 84 24 94 00 00 00      mov word ptr [rsp + 0x94], r8w
    # nextln: 000146: 66 89 8c 24 92 00 00 00         mov word ptr [rsp + 0x92], cx
    # nextln: 00014e: 66 89 94 24 90 00 00 00         mov word ptr [rsp + 0x90], dx
    # nextln: 000156: 89 8c 24 8c 00 00 00            mov dword ptr [rsp + 0x8c], ecx
    # nextln: 00015d: 48 89 4c 24 10                  mov qword ptr [rsp + 0x10], rcx
    # nextln: 000162: 89 94 24 88 00 00 00            mov dword ptr [rsp + 0x88], edx
    # nextln: 000169: 48 89 74 24 08                  mov qword ptr [rsp + 8], rsi
    # nextln: 00016e: 48 89 3c 24                     mov qword ptr [rsp], rdi
    # nextln: 000172: 0f b6 8c 24 97 00 00 00         movzx ecx, byte ptr [rsp + 0x97]
    # nextln: 00017a: 0f be f9                        movsx edi, cl
    # nextln: 00017d: 48 b9 00 00 00 00 00 00 00 00   movabs rcx, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000187: 49 89 c7                        mov r15, rax
    # nextln: 00018a: 4c 89 ee                        mov rsi, r13
    # nextln: 00018d: ff d1                           call rcx
    # nextln: 00018f: 4c 89 ac 24 80 00 00 00         mov qword ptr [rsp + 0x80], r13
    # nextln: 000197: 4d 89 fd                        mov r13, r15
    # nextln: 00019a: 48 8b 4c 24 10                  mov rcx, qword ptr [rsp + 0x10]
    # nextln: 00019f: 49 89 cf                        mov r15, rcx
    # nextln: 0001a2: 44 23 f8                        and r15d, eax
    # nextln: 0001a5: 0f b6 84 24 97 00 00 00         movzx eax, byte ptr [rsp + 0x97]
    # nextln: 0001ad: 0f be f8                        movsx edi, al
    # nextln: 0001b0: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001ba: 4c 89 f6                        mov rsi, r14
    # nextln: 0001bd: ff d0                           call rax
    # nextln: 0001bf: 44 23 f8                        and r15d, eax
    # nextln: 0001c2: 0f b6 84 24 96 00 00 00         movzx eax, byte ptr [rsp + 0x96]
    # nextln: 0001ca: 0f be f8                        movsx edi, al
    # nextln: 0001cd: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001d7: 48 89 de                        mov rsi, rbx
    # nextln: 0001da: ff d0                           call rax
    # nextln: 0001dc: 44 23 f8                        and r15d, eax
    # nextln: 0001df: 0f b6 84 24 96 00 00 00         movzx eax, byte ptr [rsp + 0x96]
    # nextln: 0001e7: 0f be f8                        movsx edi, al
    # nextln: 0001ea: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001f4: 4c 89 f6                        mov rsi, r14
    # nextln: 0001f7: ff d0                           call rax
    # nextln: 0001f9: 33 c9                           xor ecx, ecx
    # nextln: 0001fb: 85 c0                           test eax, eax
    # nextln: 0001fd: 0f 94 c1                        sete cl
    # nextln: 000200: 44 23 f9                        and r15d, ecx
    # nextln: 000203: 0f b6 84 24 96 00 00 00         movzx eax, byte ptr [rsp + 0x96]
    # nextln: 00020b: 0f be f8                        movsx edi, al
    # nextln: 00020e: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000218: 48 8b 74 24 30                  mov rsi, qword ptr [rsp + 0x30]
    # nextln: 00021d: ff d0                           call rax
    # nextln: 00021f: 44 23 f8                        and r15d, eax
    # nextln: 000222: 0f b6 84 24 98 00 00 00         movzx eax, byte ptr [rsp + 0x98]
    # nextln: 00022a: 0f be f8                        movsx edi, al
    # nextln: 00022d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000237: 48 89 de                        mov rsi, rbx
    # nextln: 00023a: ff d0                           call rax
    # nextln: 00023c: 33 c9                           xor ecx, ecx
    # nextln: 00023e: 85 c0                           test eax, eax
    # nextln: 000240: 0f 94 c1                        sete cl
    # nextln: 000243: 44 23 f9                        and r15d, ecx
    # nextln: 000246: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000250: 48 8b b4 24 80 00 00 00         mov rsi, qword ptr [rsp + 0x80]
    # nextln: 000258: 4c 89 ef                        mov rdi, r13
    # nextln: 00025b: ff d0                           call rax
    # nextln: 00025d: 44 23 f8                        and r15d, eax
    # nextln: 000260: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00026a: 4c 89 f6                        mov rsi, r14
    # nextln: 00026d: 4c 89 ef                        mov rdi, r13
    # nextln: 000270: ff d0                           call rax
    # nextln: 000272: 44 23 f8                        and r15d, eax
    # nextln: 000275: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00027f: 4c 89 e7                        mov rdi, r12
    # nextln: 000282: 48 89 de                        mov rsi, rbx
    # nextln: 000285: ff d0                           call rax
    # nextln: 000287: 44 23 f8                        and r15d, eax
    # nextln: 00028a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000294: 4c 89 e7                        mov rdi, r12
    # nextln: 000297: 4c 89 f6                        mov rsi, r14
    # nextln: 00029a: ff d0                           call rax
    # nextln: 00029c: 33 c9                           xor ecx, ecx
    # nextln: 00029e: 85 c0                           test eax, eax
    # nextln: 0002a0: 0f 94 c1                        sete cl
    # nextln: 0002a3: 44 23 f9                        and r15d, ecx
    # nextln: 0002a6: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002b0: 4c 8b 6c 24 30                  mov r13, qword ptr [rsp + 0x30]
    # nextln: 0002b5: 4c 89 e7                        mov rdi, r12
    # nextln: 0002b8: 4c 89 ee                        mov rsi, r13
    # nextln: 0002bb: ff d0                           call rax
    # nextln: 0002bd: 44 23 f8                        and r15d, eax
    # nextln: 0002c0: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002ca: 48 89 de                        mov rsi, rbx
    # nextln: 0002cd: 48 8b 7c 24 78                  mov rdi, qword ptr [rsp + 0x78]
    # nextln: 0002d2: ff d0                           call rax
    # nextln: 0002d4: 33 c9                           xor ecx, ecx
    # nextln: 0002d6: 85 c0                           test eax, eax
    # nextln: 0002d8: 0f 94 c1                        sete cl
    # nextln: 0002db: 44 23 f9                        and r15d, ecx
    # nextln: 0002de: 0f b7 84 24 94 00 00 00         movzx eax, word ptr [rsp + 0x94]
    # nextln: 0002e6: 0f bf f8                        movsx edi, ax
    # nextln: 0002e9: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0002f3: 4c 8b 74 24 70                  mov r14, qword ptr [rsp + 0x70]
    # nextln: 0002f8: 4c 89 f6                        mov rsi, r14
    # nextln: 0002fb: ff d0                           call rax
    # nextln: 0002fd: 44 23 f8                        and r15d, eax
    # nextln: 000300: 0f b7 84 24 94 00 00 00         movzx eax, word ptr [rsp + 0x94]
    # nextln: 000308: 0f bf f8                        movsx edi, ax
    # nextln: 00030b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000315: 4c 8b 64 24 60                  mov r12, qword ptr [rsp + 0x60]
    # nextln: 00031a: 4c 89 e6                        mov rsi, r12
    # nextln: 00031d: ff d0                           call rax
    # nextln: 00031f: 44 23 f8                        and r15d, eax
    # nextln: 000322: 0f b7 84 24 92 00 00 00         movzx eax, word ptr [rsp + 0x92]
    # nextln: 00032a: 0f bf f8                        movsx edi, ax
    # nextln: 00032d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000337: 48 89 de                        mov rsi, rbx
    # nextln: 00033a: ff d0                           call rax
    # nextln: 00033c: 44 23 f8                        and r15d, eax
    # nextln: 00033f: 0f b7 84 24 92 00 00 00         movzx eax, word ptr [rsp + 0x92]
    # nextln: 000347: 0f bf f8                        movsx edi, ax
    # nextln: 00034a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000354: 4c 89 e6                        mov rsi, r12
    # nextln: 000357: ff d0                           call rax
    # nextln: 000359: 33 c9                           xor ecx, ecx
    # nextln: 00035b: 85 c0                           test eax, eax
    # nextln: 00035d: 0f 94 c1                        sete cl
    # nextln: 000360: 44 23 f9                        and r15d, ecx
    # nextln: 000363: 0f b7 84 24 92 00 00 00         movzx eax, word ptr [rsp + 0x92]
    # nextln: 00036b: 0f bf f8                        movsx edi, ax
    # nextln: 00036e: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000378: 4c 89 ee                        mov rsi, r13
    # nextln: 00037b: ff d0                           call rax
    # nextln: 00037d: 44 23 f8                        and r15d, eax
    # nextln: 000380: 0f b7 84 24 90 00 00 00         movzx eax, word ptr [rsp + 0x90]
    # nextln: 000388: 0f bf f8                        movsx edi, ax
    # nextln: 00038b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000395: 48 89 de                        mov rsi, rbx
    # nextln: 000398: ff d0                           call rax
    # nextln: 00039a: 33 c9                           xor ecx, ecx
    # nextln: 00039c: 85 c0                           test eax, eax
    # nextln: 00039e: 0f 94 c1                        sete cl
    # nextln: 0003a1: 44 23 f9                        and r15d, ecx
    # nextln: 0003a4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003ae: 4c 89 f6                        mov rsi, r14
    # nextln: 0003b1: 48 8b 7c 24 68                  mov rdi, qword ptr [rsp + 0x68]
    # nextln: 0003b6: ff d0                           call rax
    # nextln: 0003b8: 44 23 f8                        and r15d, eax
    # nextln: 0003bb: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003c5: 48 8b 7c 24 68                  mov rdi, qword ptr [rsp + 0x68]
    # nextln: 0003ca: 4c 89 e6                        mov rsi, r12
    # nextln: 0003cd: ff d0                           call rax
    # nextln: 0003cf: 44 23 f8                        and r15d, eax
    # nextln: 0003d2: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003dc: 4c 8b 74 24 58                  mov r14, qword ptr [rsp + 0x58]
    # nextln: 0003e1: 48 89 de                        mov rsi, rbx
    # nextln: 0003e4: 4c 89 f7                        mov rdi, r14
    # nextln: 0003e7: ff d0                           call rax
    # nextln: 0003e9: 44 23 f8                        and r15d, eax
    # nextln: 0003ec: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003f6: 4c 89 f7                        mov rdi, r14
    # nextln: 0003f9: 4c 89 e6                        mov rsi, r12
    # nextln: 0003fc: ff d0                           call rax
    # nextln: 0003fe: 33 c9                           xor ecx, ecx
    # nextln: 000400: 85 c0                           test eax, eax
    # nextln: 000402: 0f 94 c1                        sete cl
    # nextln: 000405: 44 23 f9                        and r15d, ecx
    # nextln: 000408: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000412: 4c 89 f7                        mov rdi, r14
    # nextln: 000415: 4c 89 ee                        mov rsi, r13
    # nextln: 000418: ff d0                           call rax
    # nextln: 00041a: 44 23 f8                        and r15d, eax
    # nextln: 00041d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000427: 48 8b 7c 24 50                  mov rdi, qword ptr [rsp + 0x50]
    # nextln: 00042c: 48 89 de                        mov rsi, rbx
    # nextln: 00042f: ff d0                           call rax
    # nextln: 000431: 33 c9                           xor ecx, ecx
    # nextln: 000433: 85 c0                           test eax, eax
    # nextln: 000435: 0f 94 c1                        sete cl
    # nextln: 000438: 44 23 f9                        and r15d, ecx
    # nextln: 00043b: 8b bc 24 8c 00 00 00            mov edi, dword ptr [rsp + 0x8c]
    # nextln: 000442: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 00044c: 48 89 de                        mov rsi, rbx
    # nextln: 00044f: ff d0                           call rax
    # nextln: 000451: 44 23 f8                        and r15d, eax
    # nextln: 000454: 8b bc 24 8c 00 00 00            mov edi, dword ptr [rsp + 0x8c]
    # nextln: 00045b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000465: 4c 89 ee                        mov rsi, r13
    # nextln: 000468: ff d0                           call rax
    # nextln: 00046a: 44 23 f8                        and r15d, eax
    # nextln: 00046d: 8b bc 24 88 00 00 00            mov edi, dword ptr [rsp + 0x88]
    # nextln: 000474: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 00047e: 48 89 de                        mov rsi, rbx
    # nextln: 000481: ff d0                           call rax
    # nextln: 000483: 33 c9                           xor ecx, ecx
    # nextln: 000485: 85 c0                           test eax, eax
    # nextln: 000487: 0f 94 c1                        sete cl
    # nextln: 00048a: 44 23 f9                        and r15d, ecx
    # nextln: 00048d: 8b bc 24 8c 00 00 00            mov edi, dword ptr [rsp + 0x8c]
    # nextln: 000494: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 00049e: 48 89 de                        mov rsi, rbx
    # nextln: 0004a1: ff d0                           call rax
    # nextln: 0004a3: 33 c9                           xor ecx, ecx
    # nextln: 0004a5: 85 c0                           test eax, eax
    # nextln: 0004a7: 0f 94 c1                        sete cl
    # nextln: 0004aa: 44 23 f9                        and r15d, ecx
    # nextln: 0004ad: 8b bc 24 8c 00 00 00            mov edi, dword ptr [rsp + 0x8c]
    # nextln: 0004b4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004be: 4c 89 ee                        mov rsi, r13
    # nextln: 0004c1: ff d0                           call rax
    # nextln: 0004c3: 33 c9                           xor ecx, ecx
    # nextln: 0004c5: 85 c0                           test eax, eax
    # nextln: 0004c7: 0f 94 c1                        sete cl
    # nextln: 0004ca: 44 23 f9                        and r15d, ecx
    # nextln: 0004cd: 8b bc 24 88 00 00 00            mov edi, dword ptr [rsp + 0x88]
    # nextln: 0004d4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004de: 48 89 de                        mov rsi, rbx
    # nextln: 0004e1: ff d0                           call rax
    # nextln: 0004e3: 44 23 f8                        and r15d, eax
    # nextln: 0004e6: 8b bc 24 8c 00 00 00            mov edi, dword ptr [rsp + 0x8c]
    # nextln: 0004ed: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 0004f7: 48 89 de                        mov rsi, rbx
    # nextln: 0004fa: ff d0                           call rax
    # nextln: 0004fc: 33 c9                           xor ecx, ecx
    # nextln: 0004fe: 85 c0                           test eax, eax
    # nextln: 000500: 0f 94 c1                        sete cl
    # nextln: 000503: 44 23 f9                        and r15d, ecx
    # nextln: 000506: 8b bc 24 8c 00 00 00            mov edi, dword ptr [rsp + 0x8c]
    # nextln: 00050d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000517: 4c 89 ee                        mov rsi, r13
    # nextln: 00051a: ff d0                           call rax
    # nextln: 00051c: 33 c9                           xor ecx, ecx
    # nextln: 00051e: 85 c0                           test eax, eax
    # nextln: 000520: 0f 94 c1                        sete cl
    # nextln: 000523: 44 23 f9                        and r15d, ecx
    # nextln: 000526: 8b bc 24 88 00 00 00            mov edi, dword ptr [rsp + 0x88]
    # nextln: 00052d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000537: 48 89 de                        mov rsi, rbx
    # nextln: 00053a: ff d0                           call rax
    # nextln: 00053c: 33 c9                           xor ecx, ecx
    # nextln: 00053e: 3b 44 24 48                     cmp eax, dword ptr [rsp + 0x48]
    # nextln: 000542: 0f 94 c1                        sete cl
    # nextln: 000545: 44 23 f9                        and r15d, ecx
    # nextln: 000548: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 000552: 4c 8b 64 24 40                  mov r12, qword ptr [rsp + 0x40]
    # nextln: 000557: 4c 89 e7                        mov rdi, r12
    # nextln: 00055a: 48 89 de                        mov rsi, rbx
    # nextln: 00055d: ff d0                           call rax
    # nextln: 00055f: 44 23 f8                        and r15d, eax
    # nextln: 000562: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00056c: 4c 89 e7                        mov rdi, r12
    # nextln: 00056f: 4c 89 ee                        mov rsi, r13
    # nextln: 000572: ff d0                           call rax
    # nextln: 000574: 44 23 f8                        and r15d, eax
    # nextln: 000577: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 000581: 48 8b 7c 24 38                  mov rdi, qword ptr [rsp + 0x38]
    # nextln: 000586: 48 89 de                        mov rsi, rbx
    # nextln: 000589: ff d0                           call rax
    # nextln: 00058b: 33 c9                           xor ecx, ecx
    # nextln: 00058d: 85 c0                           test eax, eax
    # nextln: 00058f: 0f 94 c1                        sete cl
    # nextln: 000592: 44 23 f9                        and r15d, ecx
    # nextln: 000595: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 00059a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005a4: 48 89 de                        mov rsi, rbx
    # nextln: 0005a7: ff d0                           call rax
    # nextln: 0005a9: 44 23 f8                        and r15d, eax
    # nextln: 0005ac: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0005b1: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005bb: 4c 89 ee                        mov rsi, r13
    # nextln: 0005be: ff d0                           call rax
    # nextln: 0005c0: 33 c9                           xor ecx, ecx
    # nextln: 0005c2: 85 c0                           test eax, eax
    # nextln: 0005c4: 0f 94 c1                        sete cl
    # nextln: 0005c7: 44 23 f9                        and r15d, ecx
    # nextln: 0005ca: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0005cf: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005d9: 4c 8b 64 24 28                  mov r12, qword ptr [rsp + 0x28]
    # nextln: 0005de: 4c 89 e6                        mov rsi, r12
    # nextln: 0005e1: ff d0                           call rax
    # nextln: 0005e3: 44 23 f8                        and r15d, eax
    # nextln: 0005e6: 48 8b 3c 24                     mov rdi, qword ptr [rsp]
    # nextln: 0005ea: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005f4: 48 89 de                        mov rsi, rbx
    # nextln: 0005f7: ff d0                           call rax
    # nextln: 0005f9: 33 c9                           xor ecx, ecx
    # nextln: 0005fb: 85 c0                           test eax, eax
    # nextln: 0005fd: 0f 94 c1                        sete cl
    # nextln: 000600: 44 23 f9                        and r15d, ecx
    # nextln: 000603: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00060d: 4c 8b 74 24 20                  mov r14, qword ptr [rsp + 0x20]
    # nextln: 000612: 48 89 de                        mov rsi, rbx
    # nextln: 000615: 4c 89 f7                        mov rdi, r14
    # nextln: 000618: ff d0                           call rax
    # nextln: 00061a: 44 23 f8                        and r15d, eax
    # nextln: 00061d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 000627: 4c 89 ee                        mov rsi, r13
    # nextln: 00062a: 4c 89 f7                        mov rdi, r14
    # nextln: 00062d: ff d0                           call rax
    # nextln: 00062f: 49 89 c5                        mov r13, rax
    # nextln: 000632: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00063c: 4c 89 e6                        mov rsi, r12
    # nextln: 00063f: 4c 89 f7                        mov rdi, r14
    # nextln: 000642: ff d0                           call rax
    # nextln: 000644: 33 c9                           xor ecx, ecx
    # nextln: 000646: 45 85 ed                        test r13d, r13d
    # nextln: 000649: 0f 94 c1                        sete cl
    # nextln: 00064c: 44 23 f9                        and r15d, ecx
    # nextln: 00064f: 44 23 f8                        and r15d, eax
    # nextln: 000652: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00065c: 48 89 de                        mov rsi, rbx
    # nextln: 00065f: 48 8b 7c 24 18                  mov rdi, qword ptr [rsp + 0x18]
    # nextln: 000664: ff d0                           call rax
    # nextln: 000666: 33 c9                           xor ecx, ecx
    # nextln: 000668: 85 c0                           test eax, eax
    # nextln: 00066a: 0f 94 c1                        sete cl
    # nextln: 00066d: 44 23 f9                        and r15d, ecx
    # nextln: 000670: 45 85 ff                        test r15d, r15d
    # nextln: 000673: 0f 84 17 00 00 00               je 0x690
    # nextln: 000679: 48 8b 44 24 10                  mov rax, qword ptr [rsp + 0x10]
    # nextln: 00067e: 48 81 c4 a8 00 00 00            add rsp, 0xa8
    # nextln: 000685: 5b                              pop rbx
    # nextln: 000686: 41 5c                           pop r12
    # nextln: 000688: 41 5d                           pop r13
    # nextln: 00068a: 41 5e                           pop r14
    # nextln: 00068c: 41 5f                           pop r15
    # nextln: 00068e: 5d                              pop rbp
    # nextln: 00068f: c3                              ret
    # nextln: 000690: 48 89 d8                        mov rax, rbx
    # nextln: 000693: 48 81 c4 a8 00 00 00            add rsp, 0xa8
    # nextln: 00069a: 5b                              pop rbx
    # nextln: 00069b: 41 5c                           pop r12
    # nextln: 00069d: 41 5d                           pop r13
    # nextln: 00069f: 41 5e                           pop r14
    # nextln: 0006a1: 41 5f                           pop r15
    # nextln: 0006a3: 5d                              pop rbp
    # nextln: 0006a4: c3                              ret

    %0:ctrl = entry
    %1:ctrl, %2:phisel = region %0
    %3:i32 = iconst 0
    %4:i32 = iconst 1
    %5:i64 = iext %4
    %6:i64 = sfill 32 %5
    %7:i32 = iconst 3
    %8:ptr = stackslot 8:8
    %9:i32 = iconst 64
    %10:ptr = stackslot 8:8
    %11:i32 = iconst 32
    %12:ptr = stackslot 4:4
    %13:ptr = stackslot 4:4
    %14:ptr = stackslot 2:2
    %15:ptr = stackslot 2:2
    %16:i32 = iconst 16
    %17:ptr = stackslot 2:2
    %18:i32 = iconst 15
    %19:ptr = stackslot 1:1
    %20:ptr = stackslot 1:1
    %21:i32 = iconst 8
    %22:ptr = stackslot 1:1
    %23:ctrl = store.1 %1, %3, %22
    %24:ctrl = store.1 %23, %3, %20
    %25:ctrl = store.1 %24, %3, %19
    %26:ctrl = store.2 %25, %3, %17
    %27:ctrl = store.2 %26, %3, %15
    %28:ctrl = store.2 %27, %3, %14
    %29:ctrl = store.4 %28, %3, %13
    %30:ctrl = store.4 %29, %3, %12
    %31:i32 = iconst 7
    %32:i32 = iconst 2
    %33:i64 = iext %32
    %34:i64 = sfill 32 %33
    %35:i32 = iconst 4294934528
    %36:i32 = iconst 4294967168
    %37:i64 = iconst 0
    %38:ctrl = store.8 %30, %37, %10
    %39:ctrl = store.8 %38, %37, %8
    %40:ctrl, %41:phisel = region %39
    %42:ctrl = store.1 %40, %36, %22
    %43:ctrl = store.1 %42, %4, %20
    %44:ctrl = store.1 %43, %32, %19
    %45:ctrl = store.2 %44, %35, %17
    %46:ctrl = store.2 %45, %4, %15
    %47:ctrl = store.2 %46, %32, %14
    %48:ctrl = store.4 %47, %4, %13
    %49:ctrl = store.4 %48, %32, %12
    %50:ctrl = store.8 %49, %6, %10
    %51:ctrl = store.8 %50, %34, %8
    %52:ctrl, %53:i32 = load.1 %51, %22
    %54:i32 = sfill 8 %53
    %55:ctrl, %56:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %52, %54, %31
    %57:ctrl, %58:i32 = load.1 %55, %22
    %59:i32 = sfill 8 %58
    %60:ctrl, %61:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %57, %59, %21
    %62:ctrl, %63:i32 = load.1 %60, %20
    %64:i32 = sfill 8 %63
    %65:ctrl, %66:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %62, %64, %3
    %67:ctrl, %68:i32 = load.1 %65, %20
    %69:i32 = sfill 8 %68
    %70:ctrl, %71:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %67, %69, %21
    %72:ctrl, %73:i32 = load.1 %70, %20
    %74:i32 = sfill 8 %73
    %75:ctrl, %76:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %72, %74, %11
    %77:ctrl, %78:i32 = load.1 %75, %19
    %79:i32 = sfill 8 %78
    %80:ctrl, %81:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %77, %79, %3
    %82:ctrl, %83:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %80, %22, %31
    %84:ctrl, %85:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %82, %22, %21
    %86:ctrl, %87:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %84, %20, %3
    %88:ctrl, %89:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %86, %20, %21
    %90:ctrl, %91:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %88, %20, %11
    %92:ctrl, %93:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %90, %19, %3
    %94:ctrl, %95:i32 = load.2 %92, %17
    %96:i32 = sfill 16 %95
    %97:ctrl, %98:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %94, %96, %18
    %99:ctrl, %100:i32 = load.2 %97, %17
    %101:i32 = sfill 16 %100
    %102:ctrl, %103:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %99, %101, %16
    %104:ctrl, %105:i32 = load.2 %102, %15
    %106:i32 = sfill 16 %105
    %107:ctrl, %108:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %104, %106, %3
    %109:ctrl, %110:i32 = load.2 %107, %15
    %111:i32 = sfill 16 %110
    %112:ctrl, %113:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %109, %111, %16
    %114:ctrl, %115:i32 = load.2 %112, %15
    %116:i32 = sfill 16 %115
    %117:ctrl, %118:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %114, %116, %11
    %119:ctrl, %120:i32 = load.2 %117, %14
    %121:i32 = sfill 16 %120
    %122:ctrl, %123:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %119, %121, %3
    %124:ctrl, %125:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %122, %17, %18
    %126:ctrl, %127:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %124, %17, %16
    %128:ctrl, %129:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %126, %15, %3
    %130:ctrl, %131:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %128, %15, %16
    %132:ctrl, %133:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %130, %15, %11
    %134:ctrl, %135:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %132, %14, %3
    %136:ctrl, %137:i32 = load.4 %134, %13
    %138:ctrl, %139:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %136, %137, %3
    %140:ctrl, %141:i32 = load.4 %138, %13
    %142:ctrl, %143:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %140, %141, %11
    %144:ctrl, %145:i32 = load.4 %142, %12
    %146:ctrl, %147:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %144, %145, %3
    %148:ctrl, %149:i32 = load.4 %146, %13
    %150:ctrl, %151:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %148, %149, %3
    %152:ctrl, %153:i32 = load.4 %150, %13
    %154:ctrl, %155:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %152, %153, %11
    %156:ctrl, %157:i32 = load.4 %154, %12
    %158:ctrl, %159:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %156, %157, %3
    %160:ctrl, %161:i32 = load.4 %158, %13
    %162:ctrl, %163:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %160, %161, %3
    %164:ctrl, %165:i32 = load.4 %162, %13
    %166:ctrl, %167:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %164, %165, %11
    %168:ctrl, %169:i32 = load.4 %166, %12
    %170:ctrl, %171:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %168, %169, %3
    %172:ctrl, %173:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %170, %13, %3
    %174:ctrl, %175:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %172, %13, %11
    %176:ctrl, %177:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %174, %12, %3
    %178:ctrl, %179:i64 = load.8 %176, %10
    %180:ctrl, %181:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %178, %179, %3
    %182:ctrl, %183:i64 = load.8 %180, %10
    %184:ctrl, %185:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %182, %183, %11
    %186:ctrl, %187:i64 = load.8 %184, %10
    %188:ctrl, %189:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %186, %187, %9
    %190:ctrl, %191:i64 = load.8 %188, %8
    %192:ctrl, %193:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %190, %191, %3
    %194:ctrl, %195:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %192, %10, %3
    %196:ctrl, %197:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %194, %10, %11
    %198:ctrl, %199:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %196, %10, %9
    %200:ctrl, %201:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %198, %8, %3
    %202:i32 = icmp eq %201, %3
    %203:i32 = icmp eq %197, %3
    %204:i32 = icmp eq %193, %3
    %205:i32 = icmp eq %185, %3
    %206:i32 = icmp eq %177, %3
    %207:i32 = icmp eq %171, %7
    %208:i32 = icmp eq %167, %3
    %209:i32 = icmp eq %163, %3
    %210:i32 = icmp eq %155, %3
    %211:i32 = icmp eq %151, %3
    %212:i32 = icmp eq %147, %3
    %213:i32 = icmp eq %135, %3
    %214:i32 = icmp eq %131, %3
    %215:i32 = icmp eq %123, %3
    %216:i32 = icmp eq %113, %3
    %217:i32 = icmp eq %93, %3
    %218:i32 = icmp eq %89, %3
    %219:i32 = icmp eq %81, %3
    %220:i32 = icmp eq %71, %3
    %221:i32 = and %4, %56
    %222:i32 = and %221, %61
    %223:i32 = and %222, %66
    %224:i32 = and %223, %220
    %225:i32 = and %224, %76
    %226:i32 = and %225, %219
    %227:i32 = and %226, %83
    %228:i32 = and %227, %85
    %229:i32 = and %228, %87
    %230:i32 = and %229, %218
    %231:i32 = and %230, %91
    %232:i32 = and %231, %217
    %233:i32 = and %232, %98
    %234:i32 = and %233, %103
    %235:i32 = and %234, %108
    %236:i32 = and %235, %216
    %237:i32 = and %236, %118
    %238:i32 = and %237, %215
    %239:i32 = and %238, %125
    %240:i32 = and %239, %127
    %241:i32 = and %240, %129
    %242:i32 = and %241, %214
    %243:i32 = and %242, %133
    %244:i32 = and %243, %213
    %245:i32 = and %244, %139
    %246:i32 = and %245, %143
    %247:i32 = and %246, %212
    %248:i32 = and %247, %211
    %249:i32 = and %248, %210
    %250:i32 = and %249, %159
    %251:i32 = and %250, %209
    %252:i32 = and %251, %208
    %253:i32 = and %252, %207
    %254:i32 = and %253, %173
    %255:i32 = and %254, %175
    %256:i32 = and %255, %206
    %257:i32 = and %256, %181
    %258:i32 = and %257, %205
    %259:i32 = and %258, %189
    %260:i32 = and %259, %204
    %261:i32 = and %260, %195
    %262:i32 = and %261, %203
    %263:i32 = and %262, %199
    %264:i32 = and %263, %202
    %265:ctrl, %266:ctrl = brcond %200, %264
    %267:ctrl, %268:phisel = region %265
    return %267, %4
    %269:ctrl, %270:phisel = region %266
    return %269, %3
}
