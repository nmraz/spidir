# run: loop-forest

func @sum_to_n:i32(i32) {
    # check: function `sum_to_n`:
    # nextln: %0:ctrl, %1:i32 = entry
    # nextln: %2:i32 = iconst 1
    # nextln: %3:i32 = iconst 0
    # nextln: %4:i32 = icmp eq %1, %3
    # nextln: %5:ctrl, %6:ctrl = brcond %0, %4
    # nextln: %7:i32 = icmp eq %15, %3
    # nextln: %8:ctrl, %9:ctrl = brcond %12, %7  # containing loop: 0
    # nextln: %10:ctrl, %11:phisel = region %5, %8
    # nextln: %12:ctrl, %13:phisel = region %6, %9  # loop header: 0, root: 0
    # nextln: %14:i32 = phi %13, %1, %15
    # nextln: %15:i32 = isub %14, %2
    # nextln: %16:i32 = phi %13, %3, %17
    # nextln: %17:i32 = iadd %16, %14
    # nextln: %18:i32 = phi %11, %3, %17
    # nextln: return %10, %18

    %0:ctrl, %1:i32 = entry
    %10:i32 = iconst 1
    %2:i32 = iconst 0
    %3:i32 = icmp eq %1, %2
    %4:ctrl, %5:ctrl = brcond %0, %3
    %13:i32 = icmp eq %11, %2
    %14:ctrl, %15:ctrl = brcond %6, %13
    %16:ctrl, %17:phisel = region %4, %14
    %6:ctrl, %7:phisel = region %5, %15
    %8:i32 = phi %7, %1, %11
    %11:i32 = isub %8, %10
    %9:i32 = phi %7, %2, %12
    %12:i32 = iadd %9, %8
    %18:i32 = phi %17, %2, %12
    return %16, %18
}

func @sum_to_n_with_stack:i32(i32) {
    # check: function `sum_to_n_with_stack`:
    # nextln: %0:ctrl, %1:i32 = entry
    # nextln: %2:ctrl, %3:phisel = region %0
    # nextln: %4:ptr = stackslot 4:4
    # nextln: %5:ptr = stackslot 4:4
    # nextln: %6:ctrl = store.4 %2, %1, %5
    # nextln: %7:i32 = iconst 1
    # nextln: %8:i32 = iconst 0
    # nextln: %9:ctrl = store.4 %6, %8, %4
    # nextln: %10:i32 = icmp eq %30, %8
    # nextln: %11:ctrl, %12:ctrl = brcond %29, %10  # containing loop: 0
    # nextln: %13:ctrl, %14:phisel = region %11
    # nextln: %15:ctrl, %16:i32 = load.4 %13, %4
    # nextln: return %15, %16
    # nextln: %17:ctrl, %18:phisel = region %12  # containing loop: 0
    # nextln: %19:ctrl, %20:i32 = load.4 %17, %5  # containing loop: 0
    # nextln: %21:ctrl, %22:i32 = load.4 %19, %4  # containing loop: 0
    # nextln: %23:i32 = isub %20, %7
    # nextln: %24:ctrl = store.4 %21, %23, %5  # containing loop: 0
    # nextln: %25:i32 = iadd %22, %20
    # nextln: %26:ctrl = store.4 %24, %25, %4  # containing loop: 0
    # nextln: %27:ctrl, %28:phisel = region %9, %26  # loop header: 0, root: 0
    # nextln: %29:ctrl, %30:i32 = load.4 %27, %5  # containing loop: 0

    %0:ctrl, %1:i32 = entry
    %2:ctrl, %3:phisel = region %0
    %5:ptr = stackslot 4:4
    %4:ptr = stackslot 4:4
    %6:ctrl = store.4 %2, %1, %4
    %24:i32 = iconst 1
    %7:i32 = iconst 0
    %8:ctrl = store.4 %6, %7, %5
    %13:i32 = icmp eq %12, %7
    %18:ctrl, %19:ctrl = brcond %11, %13
    %14:ctrl, %15:phisel = region %18
    %29:ctrl, %30:i32 = load.4 %14, %5
    return %29, %30
    %16:ctrl, %17:phisel = region %19
    %20:ctrl, %21:i32 = load.4 %16, %4
    %22:ctrl, %23:i32 = load.4 %20, %5
    %25:i32 = isub %21, %24
    %27:ctrl = store.4 %22, %25, %4
    %26:i32 = iadd %23, %21
    %28:ctrl = store.4 %27, %26, %5
    %9:ctrl, %10:phisel = region %8, %28
    %11:ctrl, %12:i32 = load.4 %9, %4
}
