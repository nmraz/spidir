# run: verify-ok

# check: $()

func @phi_i32:i32(i32, i32, i32) {
    %0:ctrl, %1:i32, %2:i32, %3:i32 = entry
    %4:ctrl, %5:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %4, %5
    %8:i32 = phi %7, %2, %3
    return %6, %8
}

func @phi_i64:i64(i32, i64, i64) {
    %0:ctrl, %1:i32, %2:i64, %3:i64 = entry
    %4:ctrl, %5:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %4, %5
    %8:i64 = phi %7, %2, %3
    return %6, %8
}

func @phi_ptr:ptr(i32, ptr, ptr) {
    %0:ctrl, %1:i32, %2:ptr, %3:ptr = entry
    %4:ctrl, %5:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %4, %5
    %8:ptr = phi %7, %2, %3
    return %6, %8
}

func @phi_f32:f32(i32, f32, f32) {
    %0:ctrl, %1:i32, %2:f32, %3:f32 = entry
    %4:ctrl, %5:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %4, %5
    %8:f32 = phi %7, %2, %3
    return %6, %8
}

func @phi_f64:f64(i32, f64, f64) {
    %0:ctrl, %1:i32, %2:f64, %3:f64 = entry
    %4:ctrl, %5:ctrl = brcond %0, %1
    %6:ctrl, %7:phisel = region %4, %5
    %8:f64 = phi %7, %2, %3
    return %6, %8
}

func @phi_big:i32(i32, i32, i32, i32, i32) {
    %0:ctrl, %1:i32, %2:i32, %3:i32, %4:i32, %5:i32 = entry
    %6:ctrl, %7:ctrl = brcond %0, %1
    %8:ctrl, %9:ctrl = brcond %6, %2
    %10:ctrl, %11:phisel = region %7, %8, %9
    %12:i32 = phi %11, %3, %4, %5
    return %10, %12
}
