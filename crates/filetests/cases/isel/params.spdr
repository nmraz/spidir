# run: isel

func @many_params:i64(i64, i64, i64, i64, i64, i64, i64, i64) {
    # check: function `many_params`:
    # nextln: block0[%13:gpr($$rdi), %14:gpr($$rsi), %12:gpr($$rdx), %10:gpr($$rcx), %8:gpr($$r8), %6:gpr($$r9)]:
    # nextln:     %2:gpr(reg)[late] = MovRRbp { offset: 24 }
    # nextln:     %4:gpr(reg)[late] = MovRRbp { offset: 16 }
    # nextln:     %11:gpr(reg)[late] = AluRRm(S64, Add) %13:gpr(tied:0)[early], %14:gpr(any)[early]
    # nextln:     %9:gpr(reg)[late] = AluRRm(S64, Add) %11:gpr(tied:0)[early], %12:gpr(any)[early]
    # nextln:     %7:gpr(reg)[late] = AluRRm(S64, Add) %9:gpr(tied:0)[early], %10:gpr(any)[early]
    # nextln:     %5:gpr(reg)[late] = AluRRm(S64, Add) %7:gpr(tied:0)[early], %8:gpr(any)[early]
    # nextln:     %3:gpr(reg)[late] = AluRRm(S64, Add) %5:gpr(tied:0)[early], %6:gpr(any)[early]
    # nextln:     %1:gpr(reg)[late] = AluRRm(S64, Add) %3:gpr(tied:0)[early], %4:gpr(any)[early]
    # nextln:     %0:gpr(reg)[late] = AluRRm(S64, Add) %1:gpr(tied:0)[early], %2:gpr(any)[early]
    # nextln:     Ret %0:gpr($$rax)[early]

    %c:ctrl, %1:i64, %2:i64, %3:i64, %4:i64, %5:i64, %6:i64, %7:i64, %8:i64 = entry
    %val:i64 = iadd %1, %2
    %val2:i64 = iadd %val, %3
    %val3:i64 = iadd %val2, %4
    %val4:i64 = iadd %val3, %5
    %val5:i64 = iadd %val4, %6
    %val6:i64 = iadd %val5, %7
    %val7:i64 = iadd %val6, %8
    return %c, %val7
}

func @unused_param:i64(ptr, i64, i64) {
    # check: function `unused_param`:
    # nextln: block0[%1:gpr($$rsi), %2:gpr($$rdx)]:
    # nextln:     %0:gpr(reg)[late] = AluRRm(S64, Add) %1:gpr(tied:0)[early], %2:gpr(any)[early]
    # nextln:     Ret %0:gpr($$rax)[early]

    %c:ctrl, %p:ptr, %a:i64, %b:i64 = entry
    %val:i64 = iadd %a, %b
    return %c, %val
}
