# run: isel-regalloc[small-pic]

extfunc @f:i32()

func @func:i32() {
    # check: function `func`:
    # nextln: clobbers: rax, rbx, rcx, rdx, rdi, rsi, r8, r9, r10, r11
    # nextln: frame: size 0, align 0
    # nextln:       block0:
    # nextln: 0000:     $$rax = CallRel(External(extfunc0))
    # nextln:           $$rbx = $$rax
    # nextln: 0001:     $$rax = CallRel(External(extfunc0))
    # nextln: 0002:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0003:     $$rax = CallRel(External(extfunc0))
    # nextln: 0004:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0005:     $$rax = CallRel(External(extfunc0))
    # nextln: 0006:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0007:     $$rax = CallRel(External(extfunc0))
    # nextln: 0008:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0009:     $$rax = CallRel(External(extfunc0))
    # nextln: 0010:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0011:     $$rax = CallRel(External(extfunc0))
    # nextln: 0012:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0013:     $$rax = CallRel(External(extfunc0))
    # nextln: 0014:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0015:     $$rax = CallRel(External(extfunc0))
    # nextln: 0016:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln: 0017:     $$rax = CallRel(External(extfunc0))
    # nextln: 0018:     $$rbx = AluRRm(S32, And) $$rbx, $$rax
    # nextln:           $$rax = $$rbx
    # nextln: 0019:     Ret $$rax

    %ent:ctrl = entry
    %c0:ctrl, %v0:i32 = call @f %ent
    %c1:ctrl, %v1:i32 = call @f %c0
    %c2:ctrl, %v2:i32 = call @f %c1
    %c3:ctrl, %v3:i32 = call @f %c2
    %c4:ctrl, %v4:i32 = call @f %c3
    %c5:ctrl, %v5:i32 = call @f %c4
    %c6:ctrl, %v6:i32 = call @f %c5
    %c7:ctrl, %v7:i32 = call @f %c6
    %c8:ctrl, %v8:i32 = call @f %c7
    %c9:ctrl, %v9:i32 = call @f %c8
    %a1:i32 = and %v0, %v1
    %a2:i32 = and %a1, %v2
    %a3:i32 = and %a2, %v3
    %a4:i32 = and %a3, %v4
    %a5:i32 = and %a4, %v5
    %a6:i32 = and %a5, %v6
    %a7:i32 = and %a6, %v7
    %a8:i32 = and %a7, %v8
    %a9:i32 = and %a8, %v9
    return %c9, %a9
}
