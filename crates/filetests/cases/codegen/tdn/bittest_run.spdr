# run: codegen

extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)":i32(ptr, i32)
extfunc @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)":i32(i64, i32)

func @"System.Boolean Tests.BitTest::Run()":i32() {
    # check: function `System.Boolean Tests.BitTest::Run()`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 41 57                           push r15
    # nextln: 000006: 41 56                           push r14
    # nextln: 000008: 41 55                           push r13
    # nextln: 00000a: 41 54                           push r12
    # nextln: 00000c: 53                              push rbx
    # nextln: 00000d: 48 81 ec b8 00 00 00            sub rsp, 0xb8
    # nextln: 000014: 33 c0                           xor eax, eax
    # nextln: 000016: 48 8d 8c 24 a6 00 00 00         lea rcx, [rsp + 0xa6]
    # nextln: 00001e: 48 8d 94 24 a0 00 00 00         lea rdx, [rsp + 0xa0]
    # nextln: 000026: 48 89 54 24 58                  mov qword ptr [rsp + 0x58], rdx
    # nextln: 00002b: 45 33 c9                        xor r9d, r9d
    # nextln: 00002e: 48 89 e2                        mov rdx, rsp
    # nextln: 000031: 48 89 54 24 20                  mov qword ptr [rsp + 0x20], rdx
    # nextln: 000036: 48 8d 54 24 08                  lea rdx, [rsp + 8]
    # nextln: 00003b: 48 89 54 24 28                  mov qword ptr [rsp + 0x28], rdx
    # nextln: 000040: 48 8d 94 24 98 00 00 00         lea rdx, [rsp + 0x98]
    # nextln: 000048: 48 89 54 24 40                  mov qword ptr [rsp + 0x40], rdx
    # nextln: 00004d: 48 8d 94 24 a2 00 00 00         lea rdx, [rsp + 0xa2]
    # nextln: 000055: 48 89 54 24 60                  mov qword ptr [rsp + 0x60], rdx
    # nextln: 00005a: 48 8d 94 24 9c 00 00 00         lea rdx, [rsp + 0x9c]
    # nextln: 000062: 48 89 54 24 48                  mov qword ptr [rsp + 0x48], rdx
    # nextln: 000067: 48 8d 94 24 a4 00 00 00         lea rdx, [rsp + 0xa4]
    # nextln: 00006f: 48 89 54 24 70                  mov qword ptr [rsp + 0x70], rdx
    # nextln: 000074: 48 8d 94 24 a7 00 00 00         lea rdx, [rsp + 0xa7]
    # nextln: 00007c: 48 89 94 24 88 00 00 00         mov qword ptr [rsp + 0x88], rdx
    # nextln: 000084: 44 88 8c 24 a7 00 00 00         mov byte ptr [rsp + 0xa7], r9b
    # nextln: 00008c: 44 88 8c 24 a6 00 00 00         mov byte ptr [rsp + 0xa6], r9b
    # nextln: 000094: 48 8d 94 24 a8 00 00 00         lea rdx, [rsp + 0xa8]
    # nextln: 00009c: 48 89 94 24 80 00 00 00         mov qword ptr [rsp + 0x80], rdx
    # nextln: 0000a4: 44 88 8c 24 a8 00 00 00         mov byte ptr [rsp + 0xa8], r9b
    # nextln: 0000ac: 66 44 89 8c 24 a4 00 00 00      mov word ptr [rsp + 0xa4], r9w
    # nextln: 0000b5: 66 44 89 8c 24 a2 00 00 00      mov word ptr [rsp + 0xa2], r9w
    # nextln: 0000be: 66 44 89 8c 24 a0 00 00 00      mov word ptr [rsp + 0xa0], r9w
    # nextln: 0000c7: 44 89 8c 24 9c 00 00 00         mov dword ptr [rsp + 0x9c], r9d
    # nextln: 0000cf: 44 89 8c 24 98 00 00 00         mov dword ptr [rsp + 0x98], r9d
    # nextln: 0000d7: 4c 89 4c 24 10                  mov qword ptr [rsp + 0x10], r9
    # nextln: 0000dc: 48 89 44 24 08                  mov qword ptr [rsp + 8], rax
    # nextln: 0000e1: 48 89 04 24                     mov qword ptr [rsp], rax
    # nextln: 0000e5: 41 bd 07 00 00 00               mov r13d, 7
    # nextln: 0000eb: 49 89 cc                        mov r12, rcx
    # nextln: 0000ee: 41 be 08 00 00 00               mov r14d, 8
    # nextln: 0000f4: b9 01 00 00 00                  mov ecx, 1
    # nextln: 0000f9: 48 c7 44 24 38 20 00 00 00      mov qword ptr [rsp + 0x38], 0x20
    # nextln: 000102: 48 c7 44 24 78 0f 00 00 00      mov qword ptr [rsp + 0x78], 0xf
    # nextln: 00010b: 48 c7 44 24 68 10 00 00 00      mov qword ptr [rsp + 0x68], 0x10
    # nextln: 000114: 48 c7 44 24 50 03 00 00 00      mov qword ptr [rsp + 0x50], 3
    # nextln: 00011d: 48 c7 44 24 30 40 00 00 00      mov qword ptr [rsp + 0x30], 0x40
    # nextln: 000126: be 02 00 00 00                  mov esi, 2
    # nextln: 00012b: 48 63 f9                        movsxd rdi, ecx
    # nextln: 00012e: 48 63 d6                        movsxd rdx, esi
    # nextln: 000131: b8 80 ff ff ff                  mov eax, 0xffffff80
    # nextln: 000136: 88 84 24 a7 00 00 00            mov byte ptr [rsp + 0xa7], al
    # nextln: 00013d: 41 b8 00 80 ff ff               mov r8d, 0xffff8000
    # nextln: 000143: 88 8c 24 a6 00 00 00            mov byte ptr [rsp + 0xa6], cl
    # nextln: 00014a: 40 88 b4 24 a8 00 00 00         mov byte ptr [rsp + 0xa8], sil
    # nextln: 000152: 66 44 89 84 24 a4 00 00 00      mov word ptr [rsp + 0xa4], r8w
    # nextln: 00015b: 66 89 8c 24 a2 00 00 00         mov word ptr [rsp + 0xa2], cx
    # nextln: 000163: 66 89 b4 24 a0 00 00 00         mov word ptr [rsp + 0xa0], si
    # nextln: 00016b: 89 8c 24 9c 00 00 00            mov dword ptr [rsp + 0x9c], ecx
    # nextln: 000172: 89 b4 24 98 00 00 00            mov dword ptr [rsp + 0x98], esi
    # nextln: 000179: 48 89 7c 24 08                  mov qword ptr [rsp + 8], rdi
    # nextln: 00017e: 48 89 14 24                     mov qword ptr [rsp], rdx
    # nextln: 000182: 0f b6 94 24 a7 00 00 00         movzx edx, byte ptr [rsp + 0xa7]
    # nextln: 00018a: 0f be fa                        movsx edi, dl
    # nextln: 00018d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000197: 49 89 cf                        mov r15, rcx
    # nextln: 00019a: 4c 89 ee                        mov rsi, r13
    # nextln: 00019d: ff d0                           call rax
    # nextln: 00019f: 4c 89 ac 24 90 00 00 00         mov qword ptr [rsp + 0x90], r13
    # nextln: 0001a7: 4c 89 fb                        mov rbx, r15
    # nextln: 0001aa: 23 d8                           and ebx, eax
    # nextln: 0001ac: 4c 89 7c 24 18                  mov qword ptr [rsp + 0x18], r15
    # nextln: 0001b1: 0f b6 84 24 a7 00 00 00         movzx eax, byte ptr [rsp + 0xa7]
    # nextln: 0001b9: 0f be f8                        movsx edi, al
    # nextln: 0001bc: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001c6: 4c 8b ac 24 88 00 00 00         mov r13, qword ptr [rsp + 0x88]
    # nextln: 0001ce: 4c 89 f6                        mov rsi, r14
    # nextln: 0001d1: ff d0                           call rax
    # nextln: 0001d3: 23 d8                           and ebx, eax
    # nextln: 0001d5: 0f b6 84 24 a6 00 00 00         movzx eax, byte ptr [rsp + 0xa6]
    # nextln: 0001dd: 0f be f8                        movsx edi, al
    # nextln: 0001e0: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001ea: 4c 8b 7c 24 10                  mov r15, qword ptr [rsp + 0x10]
    # nextln: 0001ef: 4c 89 fe                        mov rsi, r15
    # nextln: 0001f2: ff d0                           call rax
    # nextln: 0001f4: 23 d8                           and ebx, eax
    # nextln: 0001f6: 0f b6 84 24 a6 00 00 00         movzx eax, byte ptr [rsp + 0xa6]
    # nextln: 0001fe: 0f be f8                        movsx edi, al
    # nextln: 000201: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 00020b: 4c 89 f6                        mov rsi, r14
    # nextln: 00020e: ff d0                           call rax
    # nextln: 000210: 33 c9                           xor ecx, ecx
    # nextln: 000212: 85 c0                           test eax, eax
    # nextln: 000214: 0f 94 c1                        sete cl
    # nextln: 000217: 23 d9                           and ebx, ecx
    # nextln: 000219: 0f b6 84 24 a6 00 00 00         movzx eax, byte ptr [rsp + 0xa6]
    # nextln: 000221: 0f be f8                        movsx edi, al
    # nextln: 000224: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 00022e: 48 8b 74 24 38                  mov rsi, qword ptr [rsp + 0x38]
    # nextln: 000233: ff d0                           call rax
    # nextln: 000235: 23 d8                           and ebx, eax
    # nextln: 000237: 0f b6 84 24 a8 00 00 00         movzx eax, byte ptr [rsp + 0xa8]
    # nextln: 00023f: 0f be f8                        movsx edi, al
    # nextln: 000242: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 00024c: 4c 89 fe                        mov rsi, r15
    # nextln: 00024f: ff d0                           call rax
    # nextln: 000251: 33 c9                           xor ecx, ecx
    # nextln: 000253: 85 c0                           test eax, eax
    # nextln: 000255: 0f 94 c1                        sete cl
    # nextln: 000258: 23 d9                           and ebx, ecx
    # nextln: 00025a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000264: 48 8b b4 24 90 00 00 00         mov rsi, qword ptr [rsp + 0x90]
    # nextln: 00026c: 4c 89 ef                        mov rdi, r13
    # nextln: 00026f: ff d0                           call rax
    # nextln: 000271: 23 d8                           and ebx, eax
    # nextln: 000273: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00027d: 4c 89 ef                        mov rdi, r13
    # nextln: 000280: 4c 89 f6                        mov rsi, r14
    # nextln: 000283: ff d0                           call rax
    # nextln: 000285: 23 d8                           and ebx, eax
    # nextln: 000287: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000291: 4c 89 fe                        mov rsi, r15
    # nextln: 000294: 4c 89 e7                        mov rdi, r12
    # nextln: 000297: ff d0                           call rax
    # nextln: 000299: 23 d8                           and ebx, eax
    # nextln: 00029b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002a5: 4c 89 f6                        mov rsi, r14
    # nextln: 0002a8: 4c 89 e7                        mov rdi, r12
    # nextln: 0002ab: ff d0                           call rax
    # nextln: 0002ad: 33 c9                           xor ecx, ecx
    # nextln: 0002af: 85 c0                           test eax, eax
    # nextln: 0002b1: 0f 94 c1                        sete cl
    # nextln: 0002b4: 23 d9                           and ebx, ecx
    # nextln: 0002b6: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002c0: 4c 8b 6c 24 38                  mov r13, qword ptr [rsp + 0x38]
    # nextln: 0002c5: 4c 89 e7                        mov rdi, r12
    # nextln: 0002c8: 4c 89 ee                        mov rsi, r13
    # nextln: 0002cb: ff d0                           call rax
    # nextln: 0002cd: 23 d8                           and ebx, eax
    # nextln: 0002cf: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002d9: 48 8b bc 24 80 00 00 00         mov rdi, qword ptr [rsp + 0x80]
    # nextln: 0002e1: 4c 89 fe                        mov rsi, r15
    # nextln: 0002e4: ff d0                           call rax
    # nextln: 0002e6: 33 c9                           xor ecx, ecx
    # nextln: 0002e8: 85 c0                           test eax, eax
    # nextln: 0002ea: 0f 94 c1                        sete cl
    # nextln: 0002ed: 23 d9                           and ebx, ecx
    # nextln: 0002ef: 0f b7 84 24 a4 00 00 00         movzx eax, word ptr [rsp + 0xa4]
    # nextln: 0002f7: 0f bf f8                        movsx edi, ax
    # nextln: 0002fa: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000304: 4c 8b 74 24 78                  mov r14, qword ptr [rsp + 0x78]
    # nextln: 000309: 4c 89 f6                        mov rsi, r14
    # nextln: 00030c: ff d0                           call rax
    # nextln: 00030e: 23 d8                           and ebx, eax
    # nextln: 000310: 0f b7 84 24 a4 00 00 00         movzx eax, word ptr [rsp + 0xa4]
    # nextln: 000318: 0f bf f8                        movsx edi, ax
    # nextln: 00031b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000325: 4c 8b 64 24 68                  mov r12, qword ptr [rsp + 0x68]
    # nextln: 00032a: 4c 89 e6                        mov rsi, r12
    # nextln: 00032d: ff d0                           call rax
    # nextln: 00032f: 23 d8                           and ebx, eax
    # nextln: 000331: 0f b7 84 24 a2 00 00 00         movzx eax, word ptr [rsp + 0xa2]
    # nextln: 000339: 0f bf f8                        movsx edi, ax
    # nextln: 00033c: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000346: 4c 89 fe                        mov rsi, r15
    # nextln: 000349: ff d0                           call rax
    # nextln: 00034b: 23 d8                           and ebx, eax
    # nextln: 00034d: 0f b7 84 24 a2 00 00 00         movzx eax, word ptr [rsp + 0xa2]
    # nextln: 000355: 0f bf f8                        movsx edi, ax
    # nextln: 000358: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000362: 4c 89 e6                        mov rsi, r12
    # nextln: 000365: ff d0                           call rax
    # nextln: 000367: 33 c9                           xor ecx, ecx
    # nextln: 000369: 85 c0                           test eax, eax
    # nextln: 00036b: 0f 94 c1                        sete cl
    # nextln: 00036e: 23 d9                           and ebx, ecx
    # nextln: 000370: 0f b7 84 24 a2 00 00 00         movzx eax, word ptr [rsp + 0xa2]
    # nextln: 000378: 0f bf f8                        movsx edi, ax
    # nextln: 00037b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000385: 4c 89 ee                        mov rsi, r13
    # nextln: 000388: ff d0                           call rax
    # nextln: 00038a: 23 d8                           and ebx, eax
    # nextln: 00038c: 0f b7 84 24 a0 00 00 00         movzx eax, word ptr [rsp + 0xa0]
    # nextln: 000394: 0f bf f8                        movsx edi, ax
    # nextln: 000397: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0003a1: 4c 89 fe                        mov rsi, r15
    # nextln: 0003a4: ff d0                           call rax
    # nextln: 0003a6: 33 c9                           xor ecx, ecx
    # nextln: 0003a8: 85 c0                           test eax, eax
    # nextln: 0003aa: 0f 94 c1                        sete cl
    # nextln: 0003ad: 23 d9                           and ebx, ecx
    # nextln: 0003af: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003b9: 4c 89 f6                        mov rsi, r14
    # nextln: 0003bc: 48 8b 7c 24 70                  mov rdi, qword ptr [rsp + 0x70]
    # nextln: 0003c1: ff d0                           call rax
    # nextln: 0003c3: 23 d8                           and ebx, eax
    # nextln: 0003c5: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003cf: 48 8b 7c 24 70                  mov rdi, qword ptr [rsp + 0x70]
    # nextln: 0003d4: 4c 89 e6                        mov rsi, r12
    # nextln: 0003d7: ff d0                           call rax
    # nextln: 0003d9: 23 d8                           and ebx, eax
    # nextln: 0003db: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003e5: 4c 8b 74 24 60                  mov r14, qword ptr [rsp + 0x60]
    # nextln: 0003ea: 4c 89 f7                        mov rdi, r14
    # nextln: 0003ed: 4c 89 fe                        mov rsi, r15
    # nextln: 0003f0: ff d0                           call rax
    # nextln: 0003f2: 23 d8                           and ebx, eax
    # nextln: 0003f4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003fe: 4c 89 f7                        mov rdi, r14
    # nextln: 000401: 4c 89 e6                        mov rsi, r12
    # nextln: 000404: ff d0                           call rax
    # nextln: 000406: 33 c9                           xor ecx, ecx
    # nextln: 000408: 85 c0                           test eax, eax
    # nextln: 00040a: 0f 94 c1                        sete cl
    # nextln: 00040d: 23 d9                           and ebx, ecx
    # nextln: 00040f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000419: 4c 89 f7                        mov rdi, r14
    # nextln: 00041c: 4c 89 ee                        mov rsi, r13
    # nextln: 00041f: ff d0                           call rax
    # nextln: 000421: 23 d8                           and ebx, eax
    # nextln: 000423: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 00042d: 48 8b 7c 24 58                  mov rdi, qword ptr [rsp + 0x58]
    # nextln: 000432: 4c 89 fe                        mov rsi, r15
    # nextln: 000435: ff d0                           call rax
    # nextln: 000437: 33 c9                           xor ecx, ecx
    # nextln: 000439: 85 c0                           test eax, eax
    # nextln: 00043b: 0f 94 c1                        sete cl
    # nextln: 00043e: 23 d9                           and ebx, ecx
    # nextln: 000440: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 000447: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000451: 4c 89 fe                        mov rsi, r15
    # nextln: 000454: ff d0                           call rax
    # nextln: 000456: 23 d8                           and ebx, eax
    # nextln: 000458: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 00045f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000469: 4c 89 ee                        mov rsi, r13
    # nextln: 00046c: ff d0                           call rax
    # nextln: 00046e: 23 d8                           and ebx, eax
    # nextln: 000470: 8b bc 24 98 00 00 00            mov edi, dword ptr [rsp + 0x98]
    # nextln: 000477: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000481: 4c 89 fe                        mov rsi, r15
    # nextln: 000484: ff d0                           call rax
    # nextln: 000486: 33 c9                           xor ecx, ecx
    # nextln: 000488: 85 c0                           test eax, eax
    # nextln: 00048a: 0f 94 c1                        sete cl
    # nextln: 00048d: 23 d9                           and ebx, ecx
    # nextln: 00048f: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 000496: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004a0: 4c 89 fe                        mov rsi, r15
    # nextln: 0004a3: ff d0                           call rax
    # nextln: 0004a5: 33 c9                           xor ecx, ecx
    # nextln: 0004a7: 85 c0                           test eax, eax
    # nextln: 0004a9: 0f 94 c1                        sete cl
    # nextln: 0004ac: 23 d9                           and ebx, ecx
    # nextln: 0004ae: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 0004b5: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004bf: 4c 89 ee                        mov rsi, r13
    # nextln: 0004c2: ff d0                           call rax
    # nextln: 0004c4: 33 c9                           xor ecx, ecx
    # nextln: 0004c6: 85 c0                           test eax, eax
    # nextln: 0004c8: 0f 94 c1                        sete cl
    # nextln: 0004cb: 23 d9                           and ebx, ecx
    # nextln: 0004cd: 8b bc 24 98 00 00 00            mov edi, dword ptr [rsp + 0x98]
    # nextln: 0004d4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004de: 4c 89 fe                        mov rsi, r15
    # nextln: 0004e1: ff d0                           call rax
    # nextln: 0004e3: 23 d8                           and ebx, eax
    # nextln: 0004e5: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 0004ec: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 0004f6: 4c 89 fe                        mov rsi, r15
    # nextln: 0004f9: ff d0                           call rax
    # nextln: 0004fb: 33 c9                           xor ecx, ecx
    # nextln: 0004fd: 85 c0                           test eax, eax
    # nextln: 0004ff: 0f 94 c1                        sete cl
    # nextln: 000502: 23 d9                           and ebx, ecx
    # nextln: 000504: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 00050b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000515: 4c 89 ee                        mov rsi, r13
    # nextln: 000518: ff d0                           call rax
    # nextln: 00051a: 33 c9                           xor ecx, ecx
    # nextln: 00051c: 85 c0                           test eax, eax
    # nextln: 00051e: 0f 94 c1                        sete cl
    # nextln: 000521: 23 d9                           and ebx, ecx
    # nextln: 000523: 8b bc 24 98 00 00 00            mov edi, dword ptr [rsp + 0x98]
    # nextln: 00052a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000534: 4c 89 fe                        mov rsi, r15
    # nextln: 000537: ff d0                           call rax
    # nextln: 000539: 33 c9                           xor ecx, ecx
    # nextln: 00053b: 48 8b 54 24 50                  mov rdx, qword ptr [rsp + 0x50]
    # nextln: 000540: 3b c2                           cmp eax, edx
    # nextln: 000542: 0f 94 c1                        sete cl
    # nextln: 000545: 23 d9                           and ebx, ecx
    # nextln: 000547: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 000551: 4c 8b 64 24 48                  mov r12, qword ptr [rsp + 0x48]
    # nextln: 000556: 4c 89 e7                        mov rdi, r12
    # nextln: 000559: 4c 89 fe                        mov rsi, r15
    # nextln: 00055c: ff d0                           call rax
    # nextln: 00055e: 23 d8                           and ebx, eax
    # nextln: 000560: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00056a: 4c 89 e7                        mov rdi, r12
    # nextln: 00056d: 4c 89 ee                        mov rsi, r13
    # nextln: 000570: ff d0                           call rax
    # nextln: 000572: 23 d8                           and ebx, eax
    # nextln: 000574: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00057e: 48 8b 7c 24 40                  mov rdi, qword ptr [rsp + 0x40]
    # nextln: 000583: 4c 89 fe                        mov rsi, r15
    # nextln: 000586: ff d0                           call rax
    # nextln: 000588: 33 c9                           xor ecx, ecx
    # nextln: 00058a: 85 c0                           test eax, eax
    # nextln: 00058c: 0f 94 c1                        sete cl
    # nextln: 00058f: 23 d9                           and ebx, ecx
    # nextln: 000591: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 000596: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005a0: 4c 89 fe                        mov rsi, r15
    # nextln: 0005a3: ff d0                           call rax
    # nextln: 0005a5: 23 d8                           and ebx, eax
    # nextln: 0005a7: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0005ac: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005b6: 4c 89 ee                        mov rsi, r13
    # nextln: 0005b9: ff d0                           call rax
    # nextln: 0005bb: 33 c9                           xor ecx, ecx
    # nextln: 0005bd: 85 c0                           test eax, eax
    # nextln: 0005bf: 0f 94 c1                        sete cl
    # nextln: 0005c2: 23 d9                           and ebx, ecx
    # nextln: 0005c4: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0005c9: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005d3: 4c 8b 64 24 30                  mov r12, qword ptr [rsp + 0x30]
    # nextln: 0005d8: 4c 89 e6                        mov rsi, r12
    # nextln: 0005db: ff d0                           call rax
    # nextln: 0005dd: 23 d8                           and ebx, eax
    # nextln: 0005df: 48 8b 3c 24                     mov rdi, qword ptr [rsp]
    # nextln: 0005e3: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005ed: 4c 89 fe                        mov rsi, r15
    # nextln: 0005f0: ff d0                           call rax
    # nextln: 0005f2: 33 c9                           xor ecx, ecx
    # nextln: 0005f4: 85 c0                           test eax, eax
    # nextln: 0005f6: 0f 94 c1                        sete cl
    # nextln: 0005f9: 23 d9                           and ebx, ecx
    # nextln: 0005fb: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 000605: 4c 8b 74 24 28                  mov r14, qword ptr [rsp + 0x28]
    # nextln: 00060a: 4c 89 f7                        mov rdi, r14
    # nextln: 00060d: 4c 89 fe                        mov rsi, r15
    # nextln: 000610: ff d0                           call rax
    # nextln: 000612: 23 d8                           and ebx, eax
    # nextln: 000614: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00061e: 4c 89 ee                        mov rsi, r13
    # nextln: 000621: 4c 89 f7                        mov rdi, r14
    # nextln: 000624: ff d0                           call rax
    # nextln: 000626: 49 89 c5                        mov r13, rax
    # nextln: 000629: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 000633: 4c 89 f7                        mov rdi, r14
    # nextln: 000636: 4c 89 e6                        mov rsi, r12
    # nextln: 000639: ff d0                           call rax
    # nextln: 00063b: 33 c9                           xor ecx, ecx
    # nextln: 00063d: 45 85 ed                        test r13d, r13d
    # nextln: 000640: 0f 94 c1                        sete cl
    # nextln: 000643: 23 d9                           and ebx, ecx
    # nextln: 000645: 23 d8                           and ebx, eax
    # nextln: 000647: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 000651: 48 8b 7c 24 20                  mov rdi, qword ptr [rsp + 0x20]
    # nextln: 000656: 4c 89 fe                        mov rsi, r15
    # nextln: 000659: ff d0                           call rax
    # nextln: 00065b: 33 c9                           xor ecx, ecx
    # nextln: 00065d: 85 c0                           test eax, eax
    # nextln: 00065f: 0f 94 c1                        sete cl
    # nextln: 000662: 23 d9                           and ebx, ecx
    # nextln: 000664: 85 db                           test ebx, ebx
    # nextln: 000666: 0f 84 17 00 00 00               je 0x683
    # nextln: 00066c: 48 8b 44 24 18                  mov rax, qword ptr [rsp + 0x18]
    # nextln: 000671: 48 81 c4 b8 00 00 00            add rsp, 0xb8
    # nextln: 000678: 5b                              pop rbx
    # nextln: 000679: 41 5c                           pop r12
    # nextln: 00067b: 41 5d                           pop r13
    # nextln: 00067d: 41 5e                           pop r14
    # nextln: 00067f: 41 5f                           pop r15
    # nextln: 000681: 5d                              pop rbp
    # nextln: 000682: c3                              ret
    # nextln: 000683: 4c 89 f8                        mov rax, r15
    # nextln: 000686: 48 81 c4 b8 00 00 00            add rsp, 0xb8
    # nextln: 00068d: 5b                              pop rbx
    # nextln: 00068e: 41 5c                           pop r12
    # nextln: 000690: 41 5d                           pop r13
    # nextln: 000692: 41 5e                           pop r14
    # nextln: 000694: 41 5f                           pop r15
    # nextln: 000696: 5d                              pop rbp
    # nextln: 000697: c3                              ret

    %0:ctrl = entry
    %1:ctrl, %2:phisel = region %0
    %3:i32 = iconst 0
    %4:i32 = iconst 1
    %5:i64 = iext %4
    %6:i64 = sfill 32 %5
    %7:i32 = iconst 3
    %8:ptr = stackslot 8:8
    %9:i32 = iconst 64
    %10:ptr = stackslot 8:8
    %11:i32 = iconst 32
    %12:ptr = stackslot 4:4
    %13:ptr = stackslot 4:4
    %14:ptr = stackslot 2:2
    %15:ptr = stackslot 2:2
    %16:i32 = iconst 16
    %17:ptr = stackslot 2:2
    %18:i32 = iconst 15
    %19:ptr = stackslot 1:1
    %20:ptr = stackslot 1:1
    %21:i32 = iconst 8
    %22:ptr = stackslot 1:1
    %23:ctrl = store.1 %1, %3, %22
    %24:ctrl = store.1 %23, %3, %20
    %25:ctrl = store.1 %24, %3, %19
    %26:ctrl = store.2 %25, %3, %17
    %27:ctrl = store.2 %26, %3, %15
    %28:ctrl = store.2 %27, %3, %14
    %29:ctrl = store.4 %28, %3, %13
    %30:ctrl = store.4 %29, %3, %12
    %31:i32 = iconst 7
    %32:i32 = iconst 2
    %33:i64 = iext %32
    %34:i64 = sfill 32 %33
    %35:i32 = iconst 4294934528
    %36:i32 = iconst 4294967168
    %37:i64 = iconst 0
    %38:ctrl = store.8 %30, %37, %10
    %39:ctrl = store.8 %38, %37, %8
    %40:ctrl, %41:phisel = region %39
    %42:ctrl = store.1 %40, %36, %22
    %43:ctrl = store.1 %42, %4, %20
    %44:ctrl = store.1 %43, %32, %19
    %45:ctrl = store.2 %44, %35, %17
    %46:ctrl = store.2 %45, %4, %15
    %47:ctrl = store.2 %46, %32, %14
    %48:ctrl = store.4 %47, %4, %13
    %49:ctrl = store.4 %48, %32, %12
    %50:ctrl = store.8 %49, %6, %10
    %51:ctrl = store.8 %50, %34, %8
    %52:ctrl, %53:i32 = load.1 %51, %22
    %54:i32 = sfill 8 %53
    %55:ctrl, %56:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %52, %54, %31
    %57:ctrl, %58:i32 = load.1 %55, %22
    %59:i32 = sfill 8 %58
    %60:ctrl, %61:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %57, %59, %21
    %62:ctrl, %63:i32 = load.1 %60, %20
    %64:i32 = sfill 8 %63
    %65:ctrl, %66:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %62, %64, %3
    %67:ctrl, %68:i32 = load.1 %65, %20
    %69:i32 = sfill 8 %68
    %70:ctrl, %71:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %67, %69, %21
    %72:ctrl, %73:i32 = load.1 %70, %20
    %74:i32 = sfill 8 %73
    %75:ctrl, %76:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %72, %74, %11
    %77:ctrl, %78:i32 = load.1 %75, %19
    %79:i32 = sfill 8 %78
    %80:ctrl, %81:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %77, %79, %3
    %82:ctrl, %83:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %80, %22, %31
    %84:ctrl, %85:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %82, %22, %21
    %86:ctrl, %87:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %84, %20, %3
    %88:ctrl, %89:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %86, %20, %21
    %90:ctrl, %91:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %88, %20, %11
    %92:ctrl, %93:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %90, %19, %3
    %94:ctrl, %95:i32 = load.2 %92, %17
    %96:i32 = sfill 16 %95
    %97:ctrl, %98:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %94, %96, %18
    %99:ctrl, %100:i32 = load.2 %97, %17
    %101:i32 = sfill 16 %100
    %102:ctrl, %103:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %99, %101, %16
    %104:ctrl, %105:i32 = load.2 %102, %15
    %106:i32 = sfill 16 %105
    %107:ctrl, %108:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %104, %106, %3
    %109:ctrl, %110:i32 = load.2 %107, %15
    %111:i32 = sfill 16 %110
    %112:ctrl, %113:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %109, %111, %16
    %114:ctrl, %115:i32 = load.2 %112, %15
    %116:i32 = sfill 16 %115
    %117:ctrl, %118:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %114, %116, %11
    %119:ctrl, %120:i32 = load.2 %117, %14
    %121:i32 = sfill 16 %120
    %122:ctrl, %123:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %119, %121, %3
    %124:ctrl, %125:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %122, %17, %18
    %126:ctrl, %127:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %124, %17, %16
    %128:ctrl, %129:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %126, %15, %3
    %130:ctrl, %131:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %128, %15, %16
    %132:ctrl, %133:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %130, %15, %11
    %134:ctrl, %135:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %132, %14, %3
    %136:ctrl, %137:i32 = load.4 %134, %13
    %138:ctrl, %139:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %136, %137, %3
    %140:ctrl, %141:i32 = load.4 %138, %13
    %142:ctrl, %143:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %140, %141, %11
    %144:ctrl, %145:i32 = load.4 %142, %12
    %146:ctrl, %147:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %144, %145, %3
    %148:ctrl, %149:i32 = load.4 %146, %13
    %150:ctrl, %151:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %148, %149, %3
    %152:ctrl, %153:i32 = load.4 %150, %13
    %154:ctrl, %155:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %152, %153, %11
    %156:ctrl, %157:i32 = load.4 %154, %12
    %158:ctrl, %159:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %156, %157, %3
    %160:ctrl, %161:i32 = load.4 %158, %13
    %162:ctrl, %163:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %160, %161, %3
    %164:ctrl, %165:i32 = load.4 %162, %13
    %166:ctrl, %167:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %164, %165, %11
    %168:ctrl, %169:i32 = load.4 %166, %12
    %170:ctrl, %171:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %168, %169, %3
    %172:ctrl, %173:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %170, %13, %3
    %174:ctrl, %175:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %172, %13, %11
    %176:ctrl, %177:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %174, %12, %3
    %178:ctrl, %179:i64 = load.8 %176, %10
    %180:ctrl, %181:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %178, %179, %3
    %182:ctrl, %183:i64 = load.8 %180, %10
    %184:ctrl, %185:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %182, %183, %11
    %186:ctrl, %187:i64 = load.8 %184, %10
    %188:ctrl, %189:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %186, %187, %9
    %190:ctrl, %191:i64 = load.8 %188, %8
    %192:ctrl, %193:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %190, %191, %3
    %194:ctrl, %195:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %192, %10, %3
    %196:ctrl, %197:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %194, %10, %11
    %198:ctrl, %199:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %196, %10, %9
    %200:ctrl, %201:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %198, %8, %3
    %202:i32 = icmp eq %201, %3
    %203:i32 = icmp eq %197, %3
    %204:i32 = icmp eq %193, %3
    %205:i32 = icmp eq %185, %3
    %206:i32 = icmp eq %177, %3
    %207:i32 = icmp eq %171, %7
    %208:i32 = icmp eq %167, %3
    %209:i32 = icmp eq %163, %3
    %210:i32 = icmp eq %155, %3
    %211:i32 = icmp eq %151, %3
    %212:i32 = icmp eq %147, %3
    %213:i32 = icmp eq %135, %3
    %214:i32 = icmp eq %131, %3
    %215:i32 = icmp eq %123, %3
    %216:i32 = icmp eq %113, %3
    %217:i32 = icmp eq %93, %3
    %218:i32 = icmp eq %89, %3
    %219:i32 = icmp eq %81, %3
    %220:i32 = icmp eq %71, %3
    %221:i32 = and %4, %56
    %222:i32 = and %221, %61
    %223:i32 = and %222, %66
    %224:i32 = and %223, %220
    %225:i32 = and %224, %76
    %226:i32 = and %225, %219
    %227:i32 = and %226, %83
    %228:i32 = and %227, %85
    %229:i32 = and %228, %87
    %230:i32 = and %229, %218
    %231:i32 = and %230, %91
    %232:i32 = and %231, %217
    %233:i32 = and %232, %98
    %234:i32 = and %233, %103
    %235:i32 = and %234, %108
    %236:i32 = and %235, %216
    %237:i32 = and %236, %118
    %238:i32 = and %237, %215
    %239:i32 = and %238, %125
    %240:i32 = and %239, %127
    %241:i32 = and %240, %129
    %242:i32 = and %241, %214
    %243:i32 = and %242, %133
    %244:i32 = and %243, %213
    %245:i32 = and %244, %139
    %246:i32 = and %245, %143
    %247:i32 = and %246, %212
    %248:i32 = and %247, %211
    %249:i32 = and %248, %210
    %250:i32 = and %249, %159
    %251:i32 = and %250, %209
    %252:i32 = and %251, %208
    %253:i32 = and %252, %207
    %254:i32 = and %253, %173
    %255:i32 = and %254, %175
    %256:i32 = and %255, %206
    %257:i32 = and %256, %181
    %258:i32 = and %257, %205
    %259:i32 = and %258, %189
    %260:i32 = and %259, %204
    %261:i32 = and %260, %195
    %262:i32 = and %261, %203
    %263:i32 = and %262, %199
    %264:i32 = and %263, %202
    %265:ctrl, %266:ctrl = brcond %200, %264
    %267:ctrl, %268:phisel = region %265
    return %267, %4
    %269:ctrl, %270:phisel = region %266
    return %269, %3
}
