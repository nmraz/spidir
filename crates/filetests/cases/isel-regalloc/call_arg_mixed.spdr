# run: isel-regalloc

extfunc @large_gpr(i64, i64, i64, i64, i64, i64, i32, f64)
extfunc @large_gpr_xmm(i64, i64, i64, i64, i64, i64, f64, f64, f64, f64, f64, f64, f64, f64, i32, i64, f64)

func @call_large_gpr(i32, i64, f64) {
    # check: function `call_large_gpr`:
    # nextln: clobbers: rax, rcx, rdx, rdi, rsi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15
    # nextln: frame: size 0, align 0
    # nextln:       block0:
    # nextln: 0000:     AddSp(-8)
    # nextln: 0001:     Push $$rdi
    # nextln: 0002:     $$rax = FuncAddrAbs(External(extfunc0))
    # nextln:           $$r9 = $$rsi
    # nextln:           $$r8 = $$rsi
    # nextln:           $$rcx = $$rsi
    # nextln:           $$rdx = $$rsi
    # nextln:           $$rdi = $$rsi
    # nextln: 0003:     CallRm $$rax, $$rdi, $$rsi, $$rdx, $$rcx, $$r8, $$r9, $$xmm0
    # nextln: 0004:     AddSp(16)
    # nextln: 0005:     Ret

    %0:ctrl, %1:i32, %2:i64, %3:f64 = entry
    %4:ctrl = call @large_gpr %0, %2, %2, %2, %2, %2, %2, %1, %3
    return %4
}

func @call_large_gpr_xmm(i32, i64, f64) {
    # check: function `call_large_gpr_xmm`:
    # nextln: clobbers: rax, rcx, rdx, rdi, rsi, r8, r9, r10, r11, xmm0, xmm1, xmm2, xmm3, xmm4, xmm5, xmm6, xmm7, xmm8, xmm9, xmm10, xmm11, xmm12, xmm13, xmm14, xmm15
    # nextln: frame: size 0, align 0
    # nextln:       block0:
    # nextln: 0000:     AddSp(-32)
    # nextln: 0001:     MovMR(S32, [rsp + 0]) $$rdi
    # nextln: 0002:     MovMR(S64, [rsp + 8]) $$rsi
    # nextln: 0003:     MovsdMR([rsp + 16]) $$xmm0
    # nextln: 0004:     $$rax = FuncAddrAbs(External(extfunc1))
    # nextln:           $$r9 = $$rsi
    # nextln:           $$r8 = $$rsi
    # nextln:           $$rcx = $$rsi
    # nextln:           $$rdx = $$rsi
    # nextln:           $$rdi = $$rsi
    # nextln:           $$xmm7 = $$xmm0
    # nextln:           $$xmm6 = $$xmm0
    # nextln:           $$xmm5 = $$xmm0
    # nextln:           $$xmm4 = $$xmm0
    # nextln:           $$xmm3 = $$xmm0
    # nextln:           $$xmm2 = $$xmm0
    # nextln:           $$xmm1 = $$xmm0
    # nextln: 0005:     CallRm $$rax, $$rdi, $$rsi, $$rdx, $$rcx, $$r8, $$r9, $$xmm0, $$xmm1, $$xmm2, $$xmm3, $$xmm4, $$xmm5, $$xmm6, $$xmm7
    # nextln: 0006:     AddSp(32)
    # nextln: 0007:     Ret

    %0:ctrl, %1:i32, %2:i64, %3:f64 = entry
    %4:ctrl = call @large_gpr_xmm %0, %2, %2, %2, %2, %2, %2, %3, %3, %3, %3, %3, %3, %3, %3, %1, %2, %3
    return %4
}
