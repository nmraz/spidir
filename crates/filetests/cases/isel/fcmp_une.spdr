# run: isel

func @fcmp_une_i32:i32(f64, f64) {
    # check: function `fcmp_une_i32`:
    # nextln:       block0[%1:xmm64($$xmm0), %2:xmm64($$xmm1)]:
    # nextln: 0000:      %3:xmm64(reg)[late] = SseScalarFpuRRm(Double, Cmp(Neq)) %1(tied:0)[early], %2(any)[early]
    # nextln: 0001:      %4:gpr64(any)[late] = MovGprmXmm(S64) %3(reg)[early]
    # nextln: 0002:      %0:gpr64(any)[late] = AluCommRmI(S32, And, 1) %4(tied:0)[early]
    # nextln: 0003:      Ret %0($$rax)[early]

    %0:ctrl, %1:f64, %2:f64 = entry
    %3:i32 = fcmp une %1, %2
    return %0, %3
}

func @fcmp_une_i64:i64(f64, f64) {
    # check: function `fcmp_une_i64`:
    # nextln:       block0[%1:xmm64($$xmm0), %2:xmm64($$xmm1)]:
    # nextln: 0000:      %3:xmm64(reg)[late] = SseScalarFpuRRm(Double, Cmp(Neq)) %1(tied:0)[early], %2(any)[early]
    # nextln: 0001:      %4:gpr64(any)[late] = MovGprmXmm(S64) %3(reg)[early]
    # nextln: 0002:      %0:gpr64(any)[late] = AluCommRmI(S32, And, 1) %4(tied:0)[early]
    # nextln: 0003:      Ret %0($$rax)[early]

    %0:ctrl, %1:f64, %2:f64 = entry
    %3:i64 = fcmp une %1, %2
    return %0, %3
}
