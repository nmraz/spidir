# run: isel

func @store1_i32(i32, ptr) {
    # check: function `store1_i32`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S8) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:i32, %2:ptr = entry
    %3:ctrl = store.1 %0, %1, %2
    return %3
}

func @store2_i32(i32, ptr) {
    # check: function `store2_i32`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S16) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:i32, %2:ptr = entry
    %3:ctrl = store.2 %0, %1, %2
    return %3
}

func @store4_i32(i32, ptr) {
    # check: function `store4_i32`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S32) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:i32, %2:ptr = entry
    %3:ctrl = store.4 %0, %1, %2
    return %3
}

func @store1_i64(i64, ptr) {
    # check: function `store1_i64`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S8) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:i64, %2:ptr = entry
    %3:ctrl = store.1 %0, %1, %2
    return %3
}

func @store2_i64(i64, ptr) {
    # check: function `store2_i64`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S16) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:i64, %2:ptr = entry
    %3:ctrl = store.2 %0, %1, %2
    return %3
}

func @store4_i64(i64, ptr) {
    # check: function `store4_i64`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S32) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:i64, %2:ptr = entry
    %3:ctrl = store.4 %0, %1, %2
    return %3
}

func @store8_i64(i64, ptr) {
    # check: function `store8_i64`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S64) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:i64, %2:ptr = entry
    %3:ctrl = store.8 %0, %1, %2
    return %3
}

func @store8_ptr(ptr, ptr) {
    # check: function `store8_ptr`:
    # nextln:       block0[%0:gpr($$rdi), %1:gpr($$rsi)]:
    # nextln: 0000:      MovMR(S64) %0(reg)[early], %1(reg)[early]
    # nextln: 0001:      Ret

    %0:ctrl, %1:ptr, %2:ptr = entry
    %3:ctrl = store.8 %0, %1, %2
    return %3
}
