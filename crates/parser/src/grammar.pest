WHITESPACE = _{ " " | "\t" }

line_end = _{ ("#" ~ (!"\n" ~ ANY)* ~ "\n") | "\n" }

ident   = @{ ("_" | ASCII_ALPHA) ~ ("_" | ASCII_ALPHANUMERIC)* }
integer = @{ "-"? ~ ASCII_DIGIT+ }
float   = @{
    "-"? ~ ((ASCII_DIGIT+ ~ ("." ~ (ASCII_DIGIT*))?) | ("." ~ ASCII_DIGIT+))
}

valname  = @{ "%" ~ ("_" | ASCII_ALPHANUMERIC)+ }
funcname = @{ "@" ~ ident }

type = { "i32" | "i64" | "f64" | "ptr" }

param_types = { (type ~ ("," ~ type)*)? }
signature   = { funcname ~ (":" ~ type)? ~ "(" ~ param_types ~ ")" }

extfunc = { "extfunc" ~ signature }

valkind = { "ctrl" | "phisel" | type }

icmpkind = { "eq" | "ne" | "slt" | "sle" | "ult" | "ule" }

iconst_nodekind = { "iconst" ~ integer }
fconst_nodekind = { "fconst" ~ float }
icmp_nodekind   = { "icmp" ~ icmpkind }
call_nodekind   = { "call" ~ funcname }
nodekind        = {
    "entry"
  | "return"
  | "region"
  | "phi"
  | iconst_nodekind
  | fconst_nodekind
  | "iadd"
  | "isub"
  | "and"
  | "or"
  | "xor"
  | "shl"
  | "lshr"
  | "ashr"
  | "imul"
  | "sdiv"
  | "udiv"
  | icmp_nodekind
  | "load"
  | "store"
  | "brcond"
  | call_nodekind
}

valdef = {
    valname ~ ":" ~ valkind
}

node = {
    (valdef ~ ("," ~ valdef)* ~ "=")? ~ nodekind ~ (valname ~ ("," ~ valname)*)?
}

graph = { ((node ~ line_end) | line_end)* }

func = {
    "func" ~ signature ~ "{" ~ line_end ~ graph ~ "}"
}

module_item = _{ extfunc | func }

module = {
    SOI ~ line_end* ~ (module_item ~ (line_end+ ~ module_item)*)? ~ line_end* ~ EOI
}
