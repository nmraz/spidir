# run: codegen

func @shl_const32:i32(i32) {
    # check: function `shl_const32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 89 f8                           mov eax, edi
    # nextln: 000006: c1 e0 05                        shl eax, 5
    # nextln: 000009: 5d                              pop rbp
    # nextln: 00000a: c3                              ret

    %c:ctrl, %value:i32 = entry
    %amount:i32 = iconst 5
    %ret:i32 = shl %value, %amount
    return %c, %ret
}

func @shl_const64:i64(i64) {
    # check: function `shl_const64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: 48 c1 e0 05                     shl rax, 5
    # nextln: 00000b: 5d                              pop rbp
    # nextln: 00000c: c3                              ret

    %c:ctrl, %value:i64 = entry
    %amount:i32 = iconst 5
    %ret:i64 = shl %value, %amount
    return %c, %ret
}

func @lshr_const32:i32(i32) {
    # check: function `lshr_const32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 89 f8                           mov eax, edi
    # nextln: 000006: c1 e8 05                        shr eax, 5
    # nextln: 000009: 5d                              pop rbp
    # nextln: 00000a: c3                              ret

    %c:ctrl, %value:i32 = entry
    %amount:i32 = iconst 5
    %ret:i32 = lshr %value, %amount
    return %c, %ret
}

func @lshr_const64:i64(i64) {
    # check: function `lshr_const64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: 48 c1 e8 05                     shr rax, 5
    # nextln: 00000b: 5d                              pop rbp
    # nextln: 00000c: c3                              ret

    %c:ctrl, %value:i64 = entry
    %amount:i32 = iconst 5
    %ret:i64 = lshr %value, %amount
    return %c, %ret
}

func @ashr_const32:i32(i32) {
    # check: function `ashr_const32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 89 f8                           mov eax, edi
    # nextln: 000006: c1 f8 05                        sar eax, 5
    # nextln: 000009: 5d                              pop rbp
    # nextln: 00000a: c3                              ret

    %c:ctrl, %value:i32 = entry
    %amount:i32 = iconst 5
    %ret:i32 = ashr %value, %amount
    return %c, %ret
}

func @ashr_const64:i64(i64) {
    # check: function `ashr_const64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: 48 c1 f8 05                     sar rax, 5
    # nextln: 00000b: 5d                              pop rbp
    # nextln: 00000c: c3                              ret

    %c:ctrl, %value:i64 = entry
    %amount:i32 = iconst 5
    %ret:i64 = ashr %value, %amount
    return %c, %ret
}
