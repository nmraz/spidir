# run: codegen

func @sfill_8_32:i32(i32) {
    # check: function `sfill_8_32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 40 0f be c7                     movsx eax, dil
    # nextln: 000008: 5d                              pop rbp
    # nextln: 000009: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:i32 = sfill 8 %1
    return %0, %2
}

func @sfill_16_32:i32(i32) {
    # check: function `sfill_16_32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 0f bf c7                        movsx eax, di
    # nextln: 000007: 5d                              pop rbp
    # nextln: 000008: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:i32 = sfill 16 %1
    return %0, %2
}

func @sfill_8_64:i64(i64) {
    # check: function `sfill_8_64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 0f be c7                     movsx rax, dil
    # nextln: 000008: 5d                              pop rbp
    # nextln: 000009: c3                              ret

    %0:ctrl, %1:i64 = entry
    %2:i64 = sfill 8 %1
    return %0, %2
}

func @sfill_16_64:i64(i64) {
    # check: function `sfill_16_64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 0f bf c7                     movsx rax, di
    # nextln: 000008: 5d                              pop rbp
    # nextln: 000009: c3                              ret

    %0:ctrl, %1:i64 = entry
    %2:i64 = sfill 16 %1
    return %0, %2
}

func @sfill_32_64:i64(i64) {
    # check: function `sfill_32_64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 63 c7                        movsxd rax, edi
    # nextln: 000007: 5d                              pop rbp
    # nextln: 000008: c3                              ret

    %0:ctrl, %1:i64 = entry
    %2:i64 = sfill 32 %1
    return %0, %2
}

func @sfill_weird_width_32:i32(i32) {
    # check: function `sfill_weird_width_32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: c1 e0 0f                        shl eax, 0xf
    # nextln: 00000a: c1 f8 0f                        sar eax, 0xf
    # nextln: 00000d: 5d                              pop rbp
    # nextln: 00000e: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:i32 = sfill 17 %1
    return %0, %2
}

func @sfill_weird_width_64:i64(i64) {
    # check: function `sfill_weird_width_64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: 48 c1 e0 1d                     shl rax, 0x1d
    # nextln: 00000b: 48 c1 f8 1d                     sar rax, 0x1d
    # nextln: 00000f: 5d                              pop rbp
    # nextln: 000010: c3                              ret

    %0:ctrl, %1:i64 = entry
    %2:i64 = sfill 35 %1
    return %0, %2
}

func @sfill_min_width:i32(i32) {
    # check: function `sfill_min_width`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: c1 e0 1f                        shl eax, 0x1f
    # nextln: 00000a: c1 f8 1f                        sar eax, 0x1f
    # nextln: 00000d: 5d                              pop rbp
    # nextln: 00000e: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:i32 = sfill 1 %1
    return %0, %2
}

func @sfill_max_width_32:i32(i32) {
    # check: function `sfill_max_width_32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: d1 e0                           shl eax, 1
    # nextln: 000009: d1 f8                           sar eax, 1
    # nextln: 00000b: 5d                              pop rbp
    # nextln: 00000c: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:i32 = sfill 31 %1
    return %0, %2
}

func @sfill_max_width_64:i64(i64) {
    # check: function `sfill_max_width_64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 89 f8                        mov rax, rdi
    # nextln: 000007: 48 d1 e0                        shl rax, 1
    # nextln: 00000a: 48 d1 f8                        sar rax, 1
    # nextln: 00000d: 5d                              pop rbp
    # nextln: 00000e: c3                              ret

    %0:ctrl, %1:i64 = entry
    %2:i64 = sfill 63 %1
    return %0, %2
}
