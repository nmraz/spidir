# run: canonicalize

extfunc @malloc:ptr(i64)

func @gc_new:ptr(i32, i64) {
    # check:   func @gc_new:ptr(i32, i64) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32, $(entry2=$val):i64 = entry
    # dag:         $(call0=$val):ctrl, $(call1=$val):ptr = call @malloc $entry0, $entry2
    # dag:         return $call0, $call1
    # nextln:  }

    %c:ctrl, %type_id:i32, %size:i64 = entry
    %c1:ctrl, %p:ptr = call @malloc %c, %size
    return %c1, %p
}

func @throw_index_out_of_range_exception() {
    # check:   func @throw_index_out_of_range_exception() {
    # nextln:      $(entry0=$val):ctrl = entry
    # dag:         return $entry0
    # nextln:  }

    %0:ctrl = entry
    return %0
}

func @"System.Int32 Tests.CodeGenBringUpTests::ArrayJagged(System.Int32)":i32(i32) {
    # check:   func @"System.Int32 Tests.CodeGenBringUpTests::ArrayJagged(System.Int32)":i32(i32) {
    # nextln:      $(entry0=$val):ctrl, $(entry1=$val):i32 = entry
    # nextln:      $(stackslot0=$val):ptr = stackslot 8:8
    # dag:         $(region0=$val):ctrl, $(region1=$val):phisel = region $entry0
    # dag:         $(iext0=$val):i64 = iext $entry1
    # dag:         $(sfill0=$val):i64 = sfill 32 $iext0
    # dag:         $(iconst0=$val):i64 = iconst 20
    # dag:         $(iconst1=$val):i32 = iconst 2
    # dag:         $(shl0=$val):i64 = shl $sfill0, $iconst1
    # dag:         $(iadd0=$val):i64 = iadd $shl0, $iconst0
    # dag:         $(iconst2=$val):i64 = iconst 16
    # dag:         $(iconst3=$val):i64 = iconst 32
    # dag:         $(iconst4=$val):i64 = iconst 1
    # dag:         $(iconst5=$val):i64 = iconst 24
    # dag:         $(iconst6=$val):i32 = iconst 3
    # dag:         $(iconst7=$val):i64 = iconst 0
    # dag:         $(iconst8=$val):i64 = iconst 2
    # dag:         $(iconst9=$val):i64 = iconst 28
    # dag:         $(iconst10=$val):i32 = iconst 170
    # dag:         $(iconst11=$val):i32 = iconst 1
    # dag:         $(iconst12=$val):i64 = iconst 40
    # dag:         $(iconst13=$val):i32 = iconst 171
    # dag:         $(iconst14=$val):ptr = iconst 0
    # dag:         $(store0=$val):ctrl = store.8 $region0, $iconst14, $stackslot0
    # dag:         $(region2=$val):ctrl, $(region3=$val):phisel = region $store0
    # dag:         $(call0=$val):ctrl, $(call1=$val):ptr = call @gc_new $region2, $iconst13, $iconst12
    # dag:         $(ptroff0=$val):ptr = ptroff $call1, $iconst2
    # dag:         $(store1=$val):ctrl = store.4 $call0, $iconst8, $ptroff0
    # dag:         $(store2=$val):ctrl = store.8 $store1, $call1, $stackslot0
    # dag:         $(load0=$val):ctrl, $(load1=$val):ptr = load.8 $store2, $stackslot0
    # dag:         $(call2=$val):ctrl, $(call3=$val):ptr = call @gc_new $load0, $iconst10, $iconst9
    # dag:         $(ptroff1=$val):ptr = ptroff $call3, $iconst5
    # dag:         $(ptroff2=$val):ptr = ptroff $call3, $iconst2
    # dag:         $(store3=$val):ctrl = store.4 $call2, $iconst8, $ptroff2
    # dag:         $(load2=$val):ctrl, $(load3=$val):i64 = load.4 $store3, $ptroff2
    # dag:         $(icmp0=$val):i64 = icmp slt $iconst4, $load3
    # dag:         $(brcond0=$val):ctrl, $(brcond1=$val):ctrl = brcond $load2, $icmp0
    # dag:         $(region4=$val):ctrl, $(region5=$val):phisel = region $brcond0
    # dag:         $(store4=$val):ctrl = store.4 $region4, $iconst11, $ptroff1
    # dag:         $(ptroff3=$val):ptr = ptroff $load1, $iconst5
    # dag:         $(ptroff4=$val):ptr = ptroff $load1, $iconst2
    # dag:         $(load4=$val):ctrl, $(load5=$val):i64 = load.4 $store4, $ptroff4
    # dag:         $(icmp1=$val):i64 = icmp slt $iconst7, $load5
    # dag:         $(brcond2=$val):ctrl, $(brcond3=$val):ctrl = brcond $load4, $icmp1
    # dag:         $(region6=$val):ctrl, $(region7=$val):phisel = region $brcond2
    # dag:         $(store5=$val):ctrl = store.8 $region6, $call3, $ptroff3
    # dag:         $(load6=$val):ctrl, $(load7=$val):ptr = load.8 $store5, $stackslot0
    # dag:         $(call4=$val):ctrl, $(call5=$val):ptr = call @gc_new $load6, $iconst10, $iconst9
    # dag:         $(ptroff5=$val):ptr = ptroff $call5, $iconst5
    # dag:         $(ptroff6=$val):ptr = ptroff $call5, $iconst0
    # dag:         $(ptroff7=$val):ptr = ptroff $call5, $iconst2
    # dag:         $(store6=$val):ctrl = store.4 $call4, $iconst8, $ptroff7
    # dag:         $(load8=$val):ctrl, $(load9=$val):i64 = load.4 $store6, $ptroff7
    # dag:         $(icmp2=$val):i64 = icmp slt $iconst7, $load9
    # dag:         $(brcond4=$val):ctrl, $(brcond5=$val):ctrl = brcond $load8, $icmp2
    # dag:         $(region8=$val):ctrl, $(region9=$val):phisel = region $brcond4
    # dag:         $(store7=$val):ctrl = store.4 $region8, $iconst1, $ptroff6
    # dag:         $(load10=$val):ctrl, $(load11=$val):i64 = load.4 $store7, $ptroff7
    # dag:         $(icmp3=$val):i64 = icmp slt $iconst4, $load11
    # dag:         $(brcond6=$val):ctrl, $(brcond7=$val):ctrl = brcond $load10, $icmp3
    # dag:         $(region10=$val):ctrl, $(region11=$val):phisel = region $brcond6
    # dag:         $(store8=$val):ctrl = store.4 $region10, $iconst6, $ptroff5
    # dag:         $(ptroff8=$val):ptr = ptroff $load7, $iconst3
    # dag:         $(ptroff9=$val):ptr = ptroff $load7, $iconst2
    # dag:         $(load12=$val):ctrl, $(load13=$val):i64 = load.4 $store8, $ptroff9
    # dag:         $(icmp4=$val):i64 = icmp slt $iconst4, $load13
    # dag:         $(brcond8=$val):ctrl, $(brcond9=$val):ctrl = brcond $load12, $icmp4
    # dag:         $(region12=$val):ctrl, $(region13=$val):phisel = region $brcond8
    # dag:         $(store9=$val):ctrl = store.8 $region12, $call5, $ptroff8
    # dag:         $(load14=$val):ctrl, $(load15=$val):ptr = load.8 $store9, $stackslot0
    # dag:         $(ptroff10=$val):ptr = ptroff $load15, $iconst3
    # dag:         $(ptroff11=$val):ptr = ptroff $load15, $iconst2
    # dag:         $(load16=$val):ctrl, $(load17=$val):i64 = load.4 $load14, $ptroff11
    # dag:         $(icmp5=$val):i64 = icmp slt $iconst4, $load17
    # dag:         $(brcond10=$val):ctrl, $(brcond11=$val):ctrl = brcond $load16, $icmp5
    # dag:         $(region14=$val):ctrl, $(region15=$val):phisel = region $brcond10
    # dag:         $(load18=$val):ctrl, $(load19=$val):ptr = load.8 $region14, $ptroff10
    # dag:         $(ptroff12=$val):ptr = ptroff $load19, $iadd0
    # dag:         $(ptroff13=$val):ptr = ptroff $load19, $iconst2
    # dag:         $(load20=$val):ctrl, $(load21=$val):i64 = load.4 $load18, $ptroff13
    # dag:         $(icmp6=$val):i64 = icmp slt $sfill0, $load21
    # dag:         $(brcond12=$val):ctrl, $(brcond13=$val):ctrl = brcond $load20, $icmp6
    # dag:         $(region16=$val):ctrl, $(region17=$val):phisel = region $brcond12
    # dag:         $(load22=$val):ctrl, $(load23=$val):i32 = load.4 $region16, $ptroff12
    # dag:         return $load22, $load23
    # dag:         $(region18=$val):ctrl, $(region19=$val):phisel = region $brcond1, $brcond3, $brcond5, $brcond7, $brcond9, $brcond11, $brcond13
    # dag:         $(call6=$val):ctrl = call @throw_index_out_of_range_exception $region18
    # dag:         unreachable $call6
    # nextln:  }

    %0:ctrl, %1:i32 = entry
    %2:ctrl, %3:phisel = region %0
    %4:i64 = iext %1
    %5:i64 = sfill 32 %4
    %6:i64 = iconst 4
    %7:i64 = imul %6, %5
    %8:i64 = iconst 20
    %9:i64 = iadd %8, %7
    %10:i64 = iconst 16
    %11:i32 = iconst 1
    %12:i64 = iext %11
    %13:i64 = sfill 32 %12
    %14:i64 = imul %6, %13
    %15:i64 = iadd %8, %14
    %16:i64 = iconst 8
    %17:i64 = imul %16, %13
    %18:i64 = iconst 24
    %19:i64 = iadd %18, %17
    %20:ptr = stackslot 8:8
    %21:i32 = iconst 3
    %22:i32 = iconst 0
    %23:i64 = iext %22
    %24:i64 = sfill 32 %23
    %27:i64 = imul %16, %24
    %28:i64 = iadd %18, %27
    %25:i64 = imul %6, %24
    %26:i64 = iadd %8, %25
    %29:i32 = iconst 2
    %30:i64 = iext %29
    %31:i64 = sfill 32 %30
    %34:i64 = imul %31, %16
    %35:i64 = iadd %18, %34
    %32:i64 = imul %31, %6
    %33:i64 = iadd %8, %32
    %36:i32 = iconst 170
    %37:i32 = iconst 171
    %38:ptr = iconst 0
    %39:ctrl = store.8 %2, %38, %20
    %40:ctrl, %41:phisel = region %39
    %42:ctrl, %43:ptr = call @gc_new %40, %37, %35
    %44:ptr = ptroff %43, %10
    %45:ctrl = store.4 %42, %31, %44
    %46:ctrl = store.8 %45, %43, %20
    %47:ctrl, %48:ptr = load.8 %46, %20
    %49:ctrl, %50:ptr = call @gc_new %47, %36, %33
    %52:ptr = ptroff %50, %10
    %53:ctrl = store.4 %49, %31, %52
    %54:ctrl, %55:i64 = load.4 %53, %52
    %56:i64 = icmp slt %13, %55
    %57:ctrl, %58:ctrl = brcond %54, %56
    %59:ctrl, %60:phisel = region %57
    %51:ptr = ptroff %50, %15
    %61:ctrl = store.4 %59, %11, %51
    %63:ptr = ptroff %48, %10
    %64:ctrl, %65:i64 = load.4 %61, %63
    %66:i64 = icmp slt %24, %65
    %67:ctrl, %68:ctrl = brcond %64, %66
    %69:ctrl, %70:phisel = region %67
    %62:ptr = ptroff %48, %28
    %71:ctrl = store.8 %69, %50, %62
    %72:ctrl, %73:ptr = load.8 %71, %20
    %74:ctrl, %75:ptr = call @gc_new %72, %36, %33
    %78:ptr = ptroff %75, %10
    %79:ctrl = store.4 %74, %31, %78
    %80:ctrl, %81:i64 = load.4 %79, %78
    %82:i64 = icmp slt %24, %81
    %83:ctrl, %84:ctrl = brcond %80, %82
    %85:ctrl, %86:phisel = region %83
    %77:ptr = ptroff %75, %26
    %87:ctrl = store.4 %85, %29, %77
    %88:ctrl, %89:i64 = load.4 %87, %78
    %90:i64 = icmp slt %13, %89
    %91:ctrl, %92:ctrl = brcond %88, %90
    %93:ctrl, %94:phisel = region %91
    %76:ptr = ptroff %75, %15
    %95:ctrl = store.4 %93, %21, %76
    %97:ptr = ptroff %73, %10
    %98:ctrl, %99:i64 = load.4 %95, %97
    %100:i64 = icmp slt %13, %99
    %101:ctrl, %102:ctrl = brcond %98, %100
    %103:ctrl, %104:phisel = region %101
    %96:ptr = ptroff %73, %19
    %105:ctrl = store.8 %103, %75, %96
    %106:ctrl, %107:ptr = load.8 %105, %20
    %109:ptr = ptroff %107, %10
    %110:ctrl, %111:i64 = load.4 %106, %109
    %112:i64 = icmp slt %13, %111
    %113:ctrl, %114:ctrl = brcond %110, %112
    %115:ctrl, %116:phisel = region %113
    %108:ptr = ptroff %107, %19
    %117:ctrl, %118:ptr = load.8 %115, %108
    %120:ptr = ptroff %118, %10
    %121:ctrl, %122:i64 = load.4 %117, %120
    %123:i64 = icmp slt %5, %122
    %124:ctrl, %125:ctrl = brcond %121, %123
    %126:ctrl, %127:phisel = region %124
    %130:ctrl, %131:phisel = region %58, %68, %84, %92, %102, %114, %125
    %132:ctrl = call @throw_index_out_of_range_exception %130
    unreachable %132
    %119:ptr = ptroff %118, %9
    %128:ctrl, %129:i32 = load.4 %126, %119
    return %128, %129
}
