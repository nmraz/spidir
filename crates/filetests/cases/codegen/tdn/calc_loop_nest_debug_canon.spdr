# run: codegen

func @"System.Int32 Tests.Program::Test(System.Int32)":i32(i32) {
    # check: function `System.Int32 Tests.Program::Test(System.Int32)`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 53                              push rbx
    # nextln: 000005: 48 83 ec 78                     sub rsp, 0x78
    # nextln: 000009: b9 03 00 00 00                  mov ecx, 3
    # nextln: 00000e: be 04 00 00 00                  mov esi, 4
    # nextln: 000013: 45 33 c0                        xor r8d, r8d
    # nextln: 000016: 41 b9 02 00 00 00               mov r9d, 2
    # nextln: 00001c: 41 ba 06 00 00 00               mov r10d, 6
    # nextln: 000022: 41 bb 05 00 00 00               mov r11d, 5
    # nextln: 000028: 44 89 44 24 28                  mov dword ptr [rsp + 0x28], r8d
    # nextln: 00002d: 44 89 44 24 2c                  mov dword ptr [rsp + 0x2c], r8d
    # nextln: 000032: 44 89 04 24                     mov dword ptr [rsp], r8d
    # nextln: 000036: 44 89 44 24 20                  mov dword ptr [rsp + 0x20], r8d
    # nextln: 00003b: 44 89 44 24 1c                  mov dword ptr [rsp + 0x1c], r8d
    # nextln: 000040: 44 89 44 24 14                  mov dword ptr [rsp + 0x14], r8d
    # nextln: 000045: 44 89 44 24 10                  mov dword ptr [rsp + 0x10], r8d
    # nextln: 00004a: 44 89 44 24 0c                  mov dword ptr [rsp + 0xc], r8d
    # nextln: 00004f: 44 89 44 24 3c                  mov dword ptr [rsp + 0x3c], r8d
    # nextln: 000054: 44 89 44 24 38                  mov dword ptr [rsp + 0x38], r8d
    # nextln: 000059: 44 89 44 24 4c                  mov dword ptr [rsp + 0x4c], r8d
    # nextln: 00005e: 44 89 44 24 48                  mov dword ptr [rsp + 0x48], r8d
    # nextln: 000063: 44 89 44 24 44                  mov dword ptr [rsp + 0x44], r8d
    # nextln: 000068: 44 89 44 24 58                  mov dword ptr [rsp + 0x58], r8d
    # nextln: 00006d: 44 89 44 24 50                  mov dword ptr [rsp + 0x50], r8d
    # nextln: 000072: 44 89 44 24 08                  mov dword ptr [rsp + 8], r8d
    # nextln: 000077: 44 89 44 24 30                  mov dword ptr [rsp + 0x30], r8d
    # nextln: 00007c: 44 89 44 24 24                  mov dword ptr [rsp + 0x24], r8d
    # nextln: 000081: 44 89 44 24 18                  mov dword ptr [rsp + 0x18], r8d
    # nextln: 000086: 44 89 44 24 04                  mov dword ptr [rsp + 4], r8d
    # nextln: 00008b: 44 88 44 24 5d                  mov byte ptr [rsp + 0x5d], r8b
    # nextln: 000090: 44 88 44 24 5e                  mov byte ptr [rsp + 0x5e], r8b
    # nextln: 000095: 44 88 44 24 5c                  mov byte ptr [rsp + 0x5c], r8b
    # nextln: 00009a: 44 89 44 24 34                  mov dword ptr [rsp + 0x34], r8d
    # nextln: 00009f: 44 88 44 24 60                  mov byte ptr [rsp + 0x60], r8b
    # nextln: 0000a4: 44 89 44 24 40                  mov dword ptr [rsp + 0x40], r8d
    # nextln: 0000a9: 44 88 44 24 5f                  mov byte ptr [rsp + 0x5f], r8b
    # nextln: 0000ae: 44 88 44 24 61                  mov byte ptr [rsp + 0x61], r8b
    # nextln: 0000b3: 44 89 44 24 54                  mov dword ptr [rsp + 0x54], r8d
    # nextln: 0000b8: b8 01 00 00 00                  mov eax, 1
    # nextln: 0000bd: 89 44 24 28                     mov dword ptr [rsp + 0x28], eax
    # nextln: 0000c1: 44 89 4c 24 2c                  mov dword ptr [rsp + 0x2c], r9d
    # nextln: 0000c6: 89 0c 24                        mov dword ptr [rsp], ecx
    # nextln: 0000c9: 89 74 24 20                     mov dword ptr [rsp + 0x20], esi
    # nextln: 0000cd: 44 89 5c 24 1c                  mov dword ptr [rsp + 0x1c], r11d
    # nextln: 0000d2: 44 89 54 24 14                  mov dword ptr [rsp + 0x14], r10d
    # nextln: 0000d7: b8 07 00 00 00                  mov eax, 7
    # nextln: 0000dc: 89 44 24 10                     mov dword ptr [rsp + 0x10], eax
    # nextln: 0000e0: b8 08 00 00 00                  mov eax, 8
    # nextln: 0000e5: 89 44 24 0c                     mov dword ptr [rsp + 0xc], eax
    # nextln: 0000e9: b8 09 00 00 00                  mov eax, 9
    # nextln: 0000ee: 89 44 24 3c                     mov dword ptr [rsp + 0x3c], eax
    # nextln: 0000f2: b8 0a 00 00 00                  mov eax, 0xa
    # nextln: 0000f7: 89 44 24 38                     mov dword ptr [rsp + 0x38], eax
    # nextln: 0000fb: b8 0b 00 00 00                  mov eax, 0xb
    # nextln: 000100: 89 44 24 4c                     mov dword ptr [rsp + 0x4c], eax
    # nextln: 000104: b8 0c 00 00 00                  mov eax, 0xc
    # nextln: 000109: 89 44 24 48                     mov dword ptr [rsp + 0x48], eax
    # nextln: 00010d: b8 0d 00 00 00                  mov eax, 0xd
    # nextln: 000112: 89 44 24 44                     mov dword ptr [rsp + 0x44], eax
    # nextln: 000116: b8 0e 00 00 00                  mov eax, 0xe
    # nextln: 00011b: 89 44 24 58                     mov dword ptr [rsp + 0x58], eax
    # nextln: 00011f: b8 0f 00 00 00                  mov eax, 0xf
    # nextln: 000124: 89 44 24 50                     mov dword ptr [rsp + 0x50], eax
    # nextln: 000128: 44 89 44 24 08                  mov dword ptr [rsp + 8], r8d
    # nextln: 00012d: 44 89 44 24 30                  mov dword ptr [rsp + 0x30], r8d
    # nextln: 000132: 8b 54 24 30                     mov edx, dword ptr [rsp + 0x30]
    # nextln: 000136: 33 c0                           xor eax, eax
    # nextln: 000138: 3b d7                           cmp edx, edi
    # nextln: 00013a: 0f 9c c0                        setl al
    # nextln: 00013d: 88 44 24 61                     mov byte ptr [rsp + 0x61], al
    # nextln: 000141: 0f b6 44 24 61                  movzx eax, byte ptr [rsp + 0x61]
    # nextln: 000146: 85 c0                           test eax, eax
    # nextln: 000148: 0f 84 8c 02 00 00               je 0x3da
    # nextln: 00014e: 44 89 44 24 24                  mov dword ptr [rsp + 0x24], r8d
    # nextln: 000153: 8b 5c 24 24                     mov ebx, dword ptr [rsp + 0x24]
    # nextln: 000157: 89 f8                           mov eax, edi
    # nextln: 000159: 99                              cdq
    # nextln: 00015a: 41 f7 f9                        idiv r9d
    # nextln: 00015d: 33 d2                           xor edx, edx
    # nextln: 00015f: 3b d8                           cmp ebx, eax
    # nextln: 000161: 0f 9c c2                        setl dl
    # nextln: 000164: 88 54 24 5c                     mov byte ptr [rsp + 0x5c], dl
    # nextln: 000168: 0f b6 44 24 5c                  movzx eax, byte ptr [rsp + 0x5c]
    # nextln: 00016d: 85 c0                           test eax, eax
    # nextln: 00016f: 0f 84 5e 01 00 00               je 0x2d3
    # nextln: 000175: 8b 44 24 08                     mov eax, dword ptr [rsp + 8]
    # nextln: 000179: 8b 54 24 28                     mov edx, dword ptr [rsp + 0x28]
    # nextln: 00017d: 8b 5c 24 2c                     mov ebx, dword ptr [rsp + 0x2c]
    # nextln: 000181: 03 d3                           add edx, ebx
    # nextln: 000183: 8b 1c 24                        mov ebx, dword ptr [rsp]
    # nextln: 000186: 03 da                           add ebx, edx
    # nextln: 000188: 03 c3                           add eax, ebx
    # nextln: 00018a: 89 44 24 08                     mov dword ptr [rsp + 8], eax
    # nextln: 00018e: 8b 44 24 28                     mov eax, dword ptr [rsp + 0x28]
    # nextln: 000192: 8b 54 24 30                     mov edx, dword ptr [rsp + 0x30]
    # nextln: 000196: 03 c2                           add eax, edx
    # nextln: 000198: 99                              cdq
    # nextln: 000199: f7 ff                           idiv edi
    # nextln: 00019b: 89 54 24 28                     mov dword ptr [rsp + 0x28], edx
    # nextln: 00019f: 8b 44 24 2c                     mov eax, dword ptr [rsp + 0x2c]
    # nextln: 0001a3: 8b 54 24 24                     mov edx, dword ptr [rsp + 0x24]
    # nextln: 0001a7: 03 c2                           add eax, edx
    # nextln: 0001a9: 99                              cdq
    # nextln: 0001aa: f7 ff                           idiv edi
    # nextln: 0001ac: 89 54 24 2c                     mov dword ptr [rsp + 0x2c], edx
    # nextln: 0001b0: 8b 04 24                        mov eax, dword ptr [rsp]
    # nextln: 0001b3: 8b 54 24 28                     mov edx, dword ptr [rsp + 0x28]
    # nextln: 0001b7: 03 c2                           add eax, edx
    # nextln: 0001b9: 8b 54 24 2c                     mov edx, dword ptr [rsp + 0x2c]
    # nextln: 0001bd: 03 c2                           add eax, edx
    # nextln: 0001bf: 99                              cdq
    # nextln: 0001c0: f7 ff                           idiv edi
    # nextln: 0001c2: 89 14 24                        mov dword ptr [rsp], edx
    # nextln: 0001c5: 44 89 44 24 18                  mov dword ptr [rsp + 0x18], r8d
    # nextln: 0001ca: 8b 5c 24 18                     mov ebx, dword ptr [rsp + 0x18]
    # nextln: 0001ce: 89 f8                           mov eax, edi
    # nextln: 0001d0: 99                              cdq
    # nextln: 0001d1: f7 f9                           idiv ecx
    # nextln: 0001d3: 33 d2                           xor edx, edx
    # nextln: 0001d5: 3b d8                           cmp ebx, eax
    # nextln: 0001d7: 0f 9c c2                        setl dl
    # nextln: 0001da: 88 54 24 5e                     mov byte ptr [rsp + 0x5e], dl
    # nextln: 0001de: 0f b6 44 24 5e                  movzx eax, byte ptr [rsp + 0x5e]
    # nextln: 0001e3: 85 c0                           test eax, eax
    # nextln: 0001e5: 0f 84 d8 00 00 00               je 0x2c3
    # nextln: 0001eb: 8b 44 24 20                     mov eax, dword ptr [rsp + 0x20]
    # nextln: 0001ef: 8b 54 24 18                     mov edx, dword ptr [rsp + 0x18]
    # nextln: 0001f3: 03 c2                           add eax, edx
    # nextln: 0001f5: 99                              cdq
    # nextln: 0001f6: f7 ff                           idiv edi
    # nextln: 0001f8: 89 54 24 20                     mov dword ptr [rsp + 0x20], edx
    # nextln: 0001fc: 8b 44 24 1c                     mov eax, dword ptr [rsp + 0x1c]
    # nextln: 000200: 8b 54 24 20                     mov edx, dword ptr [rsp + 0x20]
    # nextln: 000204: 03 c2                           add eax, edx
    # nextln: 000206: 99                              cdq
    # nextln: 000207: f7 ff                           idiv edi
    # nextln: 000209: 89 54 24 1c                     mov dword ptr [rsp + 0x1c], edx
    # nextln: 00020d: 8b 44 24 08                     mov eax, dword ptr [rsp + 8]
    # nextln: 000211: 8b 54 24 20                     mov edx, dword ptr [rsp + 0x20]
    # nextln: 000215: 8b 5c 24 1c                     mov ebx, dword ptr [rsp + 0x1c]
    # nextln: 000219: 03 d3                           add edx, ebx
    # nextln: 00021b: 03 c2                           add eax, edx
    # nextln: 00021d: 89 44 24 08                     mov dword ptr [rsp + 8], eax
    # nextln: 000221: 44 89 44 24 04                  mov dword ptr [rsp + 4], r8d
    # nextln: 000226: 8b 5c 24 04                     mov ebx, dword ptr [rsp + 4]
    # nextln: 00022a: 89 f8                           mov eax, edi
    # nextln: 00022c: 99                              cdq
    # nextln: 00022d: f7 fe                           idiv esi
    # nextln: 00022f: 33 d2                           xor edx, edx
    # nextln: 000231: 3b d8                           cmp ebx, eax
    # nextln: 000233: 0f 9c c2                        setl dl
    # nextln: 000236: 88 54 24 5d                     mov byte ptr [rsp + 0x5d], dl
    # nextln: 00023a: 0f b6 44 24 5d                  movzx eax, byte ptr [rsp + 0x5d]
    # nextln: 00023f: 85 c0                           test eax, eax
    # nextln: 000241: 0f 84 6c 00 00 00               je 0x2b3
    # nextln: 000247: 8b 44 24 14                     mov eax, dword ptr [rsp + 0x14]
    # nextln: 00024b: 8b 54 24 10                     mov edx, dword ptr [rsp + 0x10]
    # nextln: 00024f: 8b 5c 24 0c                     mov ebx, dword ptr [rsp + 0xc]
    # nextln: 000253: 03 d3                           add edx, ebx
    # nextln: 000255: 8b 5c 24 04                     mov ebx, dword ptr [rsp + 4]
    # nextln: 000259: 03 d3                           add edx, ebx
    # nextln: 00025b: 03 c2                           add eax, edx
    # nextln: 00025d: 89 44 24 14                     mov dword ptr [rsp + 0x14], eax
    # nextln: 000261: 8b 44 24 10                     mov eax, dword ptr [rsp + 0x10]
    # nextln: 000265: 8b 54 24 14                     mov edx, dword ptr [rsp + 0x14]
    # nextln: 000269: 03 c2                           add eax, edx
    # nextln: 00026b: 8b 54 24 04                     mov edx, dword ptr [rsp + 4]
    # nextln: 00026f: 03 c2                           add eax, edx
    # nextln: 000271: 99                              cdq
    # nextln: 000272: f7 ff                           idiv edi
    # nextln: 000274: 89 54 24 10                     mov dword ptr [rsp + 0x10], edx
    # nextln: 000278: 8b 44 24 0c                     mov eax, dword ptr [rsp + 0xc]
    # nextln: 00027c: 8b 54 24 10                     mov edx, dword ptr [rsp + 0x10]
    # nextln: 000280: 03 c2                           add eax, edx
    # nextln: 000282: 99                              cdq
    # nextln: 000283: f7 ff                           idiv edi
    # nextln: 000285: 89 54 24 0c                     mov dword ptr [rsp + 0xc], edx
    # nextln: 000289: 8b 44 24 08                     mov eax, dword ptr [rsp + 8]
    # nextln: 00028d: 8b 54 24 14                     mov edx, dword ptr [rsp + 0x14]
    # nextln: 000291: 8b 5c 24 10                     mov ebx, dword ptr [rsp + 0x10]
    # nextln: 000295: 03 d3                           add edx, ebx
    # nextln: 000297: 8b 5c 24 0c                     mov ebx, dword ptr [rsp + 0xc]
    # nextln: 00029b: 03 da                           add ebx, edx
    # nextln: 00029d: 03 c3                           add eax, ebx
    # nextln: 00029f: 89 44 24 08                     mov dword ptr [rsp + 8], eax
    # nextln: 0002a3: 8b 44 24 04                     mov eax, dword ptr [rsp + 4]
    # nextln: 0002a7: 83 c0 01                        add eax, 1
    # nextln: 0002aa: 89 44 24 04                     mov dword ptr [rsp + 4], eax
    # nextln: 0002ae: e9 73 ff ff ff                  jmp 0x226
    # nextln: 0002b3: 8b 44 24 18                     mov eax, dword ptr [rsp + 0x18]
    # nextln: 0002b7: 83 c0 01                        add eax, 1
    # nextln: 0002ba: 89 44 24 18                     mov dword ptr [rsp + 0x18], eax
    # nextln: 0002be: e9 07 ff ff ff                  jmp 0x1ca
    # nextln: 0002c3: 8b 44 24 24                     mov eax, dword ptr [rsp + 0x24]
    # nextln: 0002c7: 83 c0 01                        add eax, 1
    # nextln: 0002ca: 89 44 24 24                     mov dword ptr [rsp + 0x24], eax
    # nextln: 0002ce: e9 80 fe ff ff                  jmp 0x153
    # nextln: 0002d3: 44 89 44 24 34                  mov dword ptr [rsp + 0x34], r8d
    # nextln: 0002d8: 8b 5c 24 34                     mov ebx, dword ptr [rsp + 0x34]
    # nextln: 0002dc: 89 f8                           mov eax, edi
    # nextln: 0002de: 99                              cdq
    # nextln: 0002df: 41 f7 fb                        idiv r11d
    # nextln: 0002e2: 33 d2                           xor edx, edx
    # nextln: 0002e4: 3b d8                           cmp ebx, eax
    # nextln: 0002e6: 0f 9c c2                        setl dl
    # nextln: 0002e9: 88 54 24 60                     mov byte ptr [rsp + 0x60], dl
    # nextln: 0002ed: 0f b6 44 24 60                  movzx eax, byte ptr [rsp + 0x60]
    # nextln: 0002f2: 85 c0                           test eax, eax
    # nextln: 0002f4: 0f 84 46 00 00 00               je 0x340
    # nextln: 0002fa: 8b 44 24 3c                     mov eax, dword ptr [rsp + 0x3c]
    # nextln: 0002fe: 8b 54 24 34                     mov edx, dword ptr [rsp + 0x34]
    # nextln: 000302: 03 c2                           add eax, edx
    # nextln: 000304: 99                              cdq
    # nextln: 000305: f7 ff                           idiv edi
    # nextln: 000307: 89 54 24 3c                     mov dword ptr [rsp + 0x3c], edx
    # nextln: 00030b: 8b 44 24 38                     mov eax, dword ptr [rsp + 0x38]
    # nextln: 00030f: 8b 54 24 3c                     mov edx, dword ptr [rsp + 0x3c]
    # nextln: 000313: 03 c2                           add eax, edx
    # nextln: 000315: 99                              cdq
    # nextln: 000316: f7 ff                           idiv edi
    # nextln: 000318: 89 54 24 38                     mov dword ptr [rsp + 0x38], edx
    # nextln: 00031c: 8b 44 24 08                     mov eax, dword ptr [rsp + 8]
    # nextln: 000320: 8b 54 24 3c                     mov edx, dword ptr [rsp + 0x3c]
    # nextln: 000324: 8b 5c 24 38                     mov ebx, dword ptr [rsp + 0x38]
    # nextln: 000328: 03 da                           add ebx, edx
    # nextln: 00032a: 03 c3                           add eax, ebx
    # nextln: 00032c: 89 44 24 08                     mov dword ptr [rsp + 8], eax
    # nextln: 000330: 8b 44 24 34                     mov eax, dword ptr [rsp + 0x34]
    # nextln: 000334: 83 c0 01                        add eax, 1
    # nextln: 000337: 89 44 24 34                     mov dword ptr [rsp + 0x34], eax
    # nextln: 00033b: e9 98 ff ff ff                  jmp 0x2d8
    # nextln: 000340: 44 89 44 24 40                  mov dword ptr [rsp + 0x40], r8d
    # nextln: 000345: 8b 5c 24 40                     mov ebx, dword ptr [rsp + 0x40]
    # nextln: 000349: 89 f8                           mov eax, edi
    # nextln: 00034b: 99                              cdq
    # nextln: 00034c: 41 f7 fa                        idiv r10d
    # nextln: 00034f: 33 d2                           xor edx, edx
    # nextln: 000351: 3b d8                           cmp ebx, eax
    # nextln: 000353: 0f 9c c2                        setl dl
    # nextln: 000356: 88 54 24 5f                     mov byte ptr [rsp + 0x5f], dl
    # nextln: 00035a: 0f b6 44 24 5f                  movzx eax, byte ptr [rsp + 0x5f]
    # nextln: 00035f: 85 c0                           test eax, eax
    # nextln: 000361: 0f 84 63 00 00 00               je 0x3ca
    # nextln: 000367: 8b 44 24 4c                     mov eax, dword ptr [rsp + 0x4c]
    # nextln: 00036b: 8b 54 24 40                     mov edx, dword ptr [rsp + 0x40]
    # nextln: 00036f: 03 c2                           add eax, edx
    # nextln: 000371: 99                              cdq
    # nextln: 000372: f7 ff                           idiv edi
    # nextln: 000374: 89 54 24 4c                     mov dword ptr [rsp + 0x4c], edx
    # nextln: 000378: 8b 44 24 48                     mov eax, dword ptr [rsp + 0x48]
    # nextln: 00037c: 8b 54 24 4c                     mov edx, dword ptr [rsp + 0x4c]
    # nextln: 000380: 03 c2                           add eax, edx
    # nextln: 000382: 99                              cdq
    # nextln: 000383: f7 ff                           idiv edi
    # nextln: 000385: 89 54 24 48                     mov dword ptr [rsp + 0x48], edx
    # nextln: 000389: 8b 44 24 44                     mov eax, dword ptr [rsp + 0x44]
    # nextln: 00038d: 8b 54 24 48                     mov edx, dword ptr [rsp + 0x48]
    # nextln: 000391: 03 c2                           add eax, edx
    # nextln: 000393: 8b 54 24 40                     mov edx, dword ptr [rsp + 0x40]
    # nextln: 000397: 03 c2                           add eax, edx
    # nextln: 000399: 99                              cdq
    # nextln: 00039a: f7 ff                           idiv edi
    # nextln: 00039c: 89 54 24 44                     mov dword ptr [rsp + 0x44], edx
    # nextln: 0003a0: 8b 44 24 08                     mov eax, dword ptr [rsp + 8]
    # nextln: 0003a4: 8b 54 24 4c                     mov edx, dword ptr [rsp + 0x4c]
    # nextln: 0003a8: 8b 5c 24 48                     mov ebx, dword ptr [rsp + 0x48]
    # nextln: 0003ac: 03 d3                           add edx, ebx
    # nextln: 0003ae: 8b 5c 24 44                     mov ebx, dword ptr [rsp + 0x44]
    # nextln: 0003b2: 03 da                           add ebx, edx
    # nextln: 0003b4: 03 c3                           add eax, ebx
    # nextln: 0003b6: 89 44 24 08                     mov dword ptr [rsp + 8], eax
    # nextln: 0003ba: 8b 44 24 40                     mov eax, dword ptr [rsp + 0x40]
    # nextln: 0003be: 83 c0 01                        add eax, 1
    # nextln: 0003c1: 89 44 24 40                     mov dword ptr [rsp + 0x40], eax
    # nextln: 0003c5: e9 7b ff ff ff                  jmp 0x345
    # nextln: 0003ca: 8b 44 24 30                     mov eax, dword ptr [rsp + 0x30]
    # nextln: 0003ce: 83 c0 01                        add eax, 1
    # nextln: 0003d1: 89 44 24 30                     mov dword ptr [rsp + 0x30], eax
    # nextln: 0003d5: e9 58 fd ff ff                  jmp 0x132
    # nextln: 0003da: 8b 44 24 08                     mov eax, dword ptr [rsp + 8]
    # nextln: 0003de: 8b 4c 24 28                     mov ecx, dword ptr [rsp + 0x28]
    # nextln: 0003e2: 8b 54 24 2c                     mov edx, dword ptr [rsp + 0x2c]
    # nextln: 0003e6: 03 ca                           add ecx, edx
    # nextln: 0003e8: 8b 14 24                        mov edx, dword ptr [rsp]
    # nextln: 0003eb: 03 ca                           add ecx, edx
    # nextln: 0003ed: 8b 54 24 20                     mov edx, dword ptr [rsp + 0x20]
    # nextln: 0003f1: 03 ca                           add ecx, edx
    # nextln: 0003f3: 8b 54 24 1c                     mov edx, dword ptr [rsp + 0x1c]
    # nextln: 0003f7: 03 ca                           add ecx, edx
    # nextln: 0003f9: 8b 54 24 14                     mov edx, dword ptr [rsp + 0x14]
    # nextln: 0003fd: 03 ca                           add ecx, edx
    # nextln: 0003ff: 8b 54 24 10                     mov edx, dword ptr [rsp + 0x10]
    # nextln: 000403: 03 ca                           add ecx, edx
    # nextln: 000405: 8b 54 24 0c                     mov edx, dword ptr [rsp + 0xc]
    # nextln: 000409: 03 ca                           add ecx, edx
    # nextln: 00040b: 8b 54 24 3c                     mov edx, dword ptr [rsp + 0x3c]
    # nextln: 00040f: 03 ca                           add ecx, edx
    # nextln: 000411: 8b 54 24 38                     mov edx, dword ptr [rsp + 0x38]
    # nextln: 000415: 03 ca                           add ecx, edx
    # nextln: 000417: 8b 54 24 4c                     mov edx, dword ptr [rsp + 0x4c]
    # nextln: 00041b: 03 ca                           add ecx, edx
    # nextln: 00041d: 8b 54 24 48                     mov edx, dword ptr [rsp + 0x48]
    # nextln: 000421: 03 ca                           add ecx, edx
    # nextln: 000423: 8b 54 24 44                     mov edx, dword ptr [rsp + 0x44]
    # nextln: 000427: 03 ca                           add ecx, edx
    # nextln: 000429: 8b 54 24 58                     mov edx, dword ptr [rsp + 0x58]
    # nextln: 00042d: 03 ca                           add ecx, edx
    # nextln: 00042f: 8b 54 24 50                     mov edx, dword ptr [rsp + 0x50]
    # nextln: 000433: 03 ca                           add ecx, edx
    # nextln: 000435: 03 c1                           add eax, ecx
    # nextln: 000437: 89 44 24 08                     mov dword ptr [rsp + 8], eax
    # nextln: 00043b: 8b 44 24 08                     mov eax, dword ptr [rsp + 8]
    # nextln: 00043f: 89 44 24 54                     mov dword ptr [rsp + 0x54], eax
    # nextln: 000443: 8b 44 24 54                     mov eax, dword ptr [rsp + 0x54]
    # nextln: 000447: 48 83 c4 78                     add rsp, 0x78
    # nextln: 00044b: 5b                              pop rbx
    # nextln: 00044c: 5d                              pop rbp
    # nextln: 00044d: c3                              ret

    %0:ctrl, %1:i32 = entry
    %2:ptr = stackslot 4:4
    %3:ptr = stackslot 4:4
    %4:ptr = stackslot 4:4
    %5:ptr = stackslot 4:4
    %6:ptr = stackslot 4:4
    %7:ptr = stackslot 4:4
    %8:ptr = stackslot 4:4
    %9:ptr = stackslot 4:4
    %10:ptr = stackslot 4:4
    %11:ptr = stackslot 4:4
    %12:ptr = stackslot 4:4
    %13:ptr = stackslot 4:4
    %14:ptr = stackslot 4:4
    %15:ptr = stackslot 4:4
    %16:ptr = stackslot 4:4
    %17:ptr = stackslot 4:4
    %18:ptr = stackslot 4:4
    %19:ptr = stackslot 4:4
    %20:ptr = stackslot 4:4
    %21:ptr = stackslot 4:4
    %22:ptr = stackslot 1:1
    %23:ptr = stackslot 1:1
    %24:ptr = stackslot 1:1
    %25:ptr = stackslot 4:4
    %26:ptr = stackslot 1:1
    %27:ptr = stackslot 4:4
    %28:ptr = stackslot 1:1
    %29:ptr = stackslot 1:1
    %30:ptr = stackslot 4:4
    %33:i32 = iconst 1
    %34:i32 = iconst 6
    %35:i32 = iconst 0
    %36:ctrl = store.4 %0, %35, %2
    %37:ctrl = store.4 %36, %35, %3
    %38:ctrl = store.4 %37, %35, %4
    %39:ctrl = store.4 %38, %35, %5
    %40:ctrl = store.4 %39, %35, %6
    %41:ctrl = store.4 %40, %35, %7
    %42:ctrl = store.4 %41, %35, %8
    %43:ctrl = store.4 %42, %35, %9
    %44:ctrl = store.4 %43, %35, %10
    %45:ctrl = store.4 %44, %35, %11
    %46:ctrl = store.4 %45, %35, %12
    %47:ctrl = store.4 %46, %35, %13
    %48:ctrl = store.4 %47, %35, %14
    %49:ctrl = store.4 %48, %35, %15
    %50:ctrl = store.4 %49, %35, %16
    %51:ctrl = store.4 %50, %35, %17
    %52:ctrl = store.4 %51, %35, %18
    %53:i32 = iconst 5
    %54:ctrl = store.4 %52, %35, %19
    %55:ctrl = store.4 %54, %35, %20
    %56:ctrl = store.4 %55, %35, %21
    %57:ctrl = store.1 %56, %35, %22
    %58:i32 = iconst 4
    %59:ctrl = store.1 %57, %35, %23
    %60:i32 = iconst 3
    %61:ctrl = store.1 %59, %35, %24
    %62:ctrl = store.4 %61, %35, %25
    %63:ctrl = store.1 %62, %35, %26
    %64:ctrl = store.4 %63, %35, %27
    %65:ctrl = store.1 %64, %35, %28
    %66:i32 = iconst 2
    %67:ctrl = store.1 %65, %35, %29
    %68:ctrl = store.4 %67, %35, %30
    %69:ctrl = store.4 %68, %33, %2
    %70:ctrl = store.4 %69, %66, %3
    %71:ctrl = store.4 %70, %60, %4
    %72:ctrl = store.4 %71, %58, %5
    %73:ctrl = store.4 %72, %53, %6
    %74:ctrl = store.4 %73, %34, %7
    %75:i32 = iconst 15
    %76:i32 = iconst 14
    %77:i32 = iconst 13
    %78:i32 = iconst 12
    %79:i32 = iconst 11
    %80:i32 = iconst 10
    %81:i32 = iconst 9
    %82:i32 = iconst 8
    %83:i32 = iconst 7
    %84:ctrl = store.4 %74, %83, %8
    %85:ctrl = store.4 %84, %82, %9
    %86:ctrl = store.4 %85, %81, %10
    %87:ctrl = store.4 %86, %80, %11
    %88:ctrl = store.4 %87, %79, %12
    %89:ctrl = store.4 %88, %78, %13
    %90:ctrl = store.4 %89, %77, %14
    %91:ctrl = store.4 %90, %76, %15
    %92:ctrl = store.4 %91, %75, %16
    %93:ctrl = store.4 %92, %35, %17
    %94:ctrl = store.4 %93, %35, %18
    %95:ctrl, %96:phisel = region %94, %386
    %97:ctrl, %98:i32 = load.4 %95, %18
    %99:i32 = icmp slt %98, %1
    %100:ctrl = store.1 %97, %99, %29
    %101:ctrl, %102:i32 = load.1 %100, %29
    %103:ctrl, %104:ctrl = brcond %101, %102
    %107:ctrl = store.4 %103, %35, %19
    %108:ctrl, %109:phisel = region %107, %274
    %110:ctrl, %111:i32 = load.4 %108, %19
    %112:ctrl, %113:i32 = sdiv %110, %1, %66
    %114:i32 = icmp slt %111, %113
    %115:ctrl = store.1 %112, %114, %24
    %116:ctrl, %117:i32 = load.1 %115, %24
    %118:ctrl, %119:ctrl = brcond %116, %117
    %122:ctrl, %123:i32 = load.4 %118, %17
    %124:ctrl, %125:i32 = load.4 %122, %2
    %126:ctrl, %127:i32 = load.4 %124, %3
    %128:ctrl, %129:i32 = load.4 %126, %4
    %130:i32 = iadd %125, %127
    %131:i32 = iadd %130, %129
    %132:i32 = iadd %123, %131
    %133:ctrl = store.4 %128, %132, %17
    %134:ctrl, %135:i32 = load.4 %133, %2
    %136:ctrl, %137:i32 = load.4 %134, %18
    %138:i32 = iadd %135, %137
    %139:ctrl, %140:i32 = srem %136, %138, %1
    %141:ctrl = store.4 %139, %140, %2
    %142:ctrl, %143:i32 = load.4 %141, %3
    %144:ctrl, %145:i32 = load.4 %142, %19
    %146:i32 = iadd %143, %145
    %147:ctrl, %148:i32 = srem %144, %146, %1
    %149:ctrl = store.4 %147, %148, %3
    %150:ctrl, %151:i32 = load.4 %149, %4
    %152:ctrl, %153:i32 = load.4 %150, %2
    %154:ctrl, %155:i32 = load.4 %152, %3
    %156:i32 = iadd %151, %153
    %157:i32 = iadd %156, %155
    %158:ctrl, %159:i32 = srem %154, %157, %1
    %160:ctrl = store.4 %158, %159, %4
    %161:ctrl = store.4 %160, %35, %20
    %162:ctrl, %163:phisel = region %161, %268
    %164:ctrl, %165:i32 = load.4 %162, %20
    %166:ctrl, %167:i32 = sdiv %164, %1, %60
    %168:i32 = icmp slt %165, %167
    %169:ctrl = store.1 %166, %168, %23
    %170:ctrl, %171:i32 = load.1 %169, %23
    %172:ctrl, %173:ctrl = brcond %170, %171
    %176:ctrl, %177:i32 = load.4 %172, %5
    %178:ctrl, %179:i32 = load.4 %176, %20
    %180:i32 = iadd %177, %179
    %181:ctrl, %182:i32 = srem %178, %180, %1
    %183:ctrl = store.4 %181, %182, %5
    %184:ctrl, %185:i32 = load.4 %183, %6
    %186:ctrl, %187:i32 = load.4 %184, %5
    %188:i32 = iadd %185, %187
    %189:ctrl, %190:i32 = srem %186, %188, %1
    %191:ctrl = store.4 %189, %190, %6
    %192:ctrl, %193:i32 = load.4 %191, %17
    %194:ctrl, %195:i32 = load.4 %192, %5
    %196:ctrl, %197:i32 = load.4 %194, %6
    %198:i32 = iadd %195, %197
    %199:i32 = iadd %193, %198
    %200:ctrl = store.4 %196, %199, %17
    %201:ctrl = store.4 %200, %35, %21
    %202:ctrl, %203:phisel = region %201, %262
    %204:ctrl, %205:i32 = load.4 %202, %21
    %206:ctrl, %207:i32 = sdiv %204, %1, %58
    %208:i32 = icmp slt %205, %207
    %209:ctrl = store.1 %206, %208, %22
    %210:ctrl, %211:i32 = load.1 %209, %22
    %212:ctrl, %213:ctrl = brcond %210, %211
    %216:ctrl, %217:i32 = load.4 %212, %7
    %218:ctrl, %219:i32 = load.4 %216, %8
    %220:ctrl, %221:i32 = load.4 %218, %9
    %222:ctrl, %223:i32 = load.4 %220, %21
    %224:i32 = iadd %219, %221
    %225:i32 = iadd %224, %223
    %226:i32 = iadd %217, %225
    %227:ctrl = store.4 %222, %226, %7
    %228:ctrl, %229:i32 = load.4 %227, %8
    %230:ctrl, %231:i32 = load.4 %228, %7
    %232:ctrl, %233:i32 = load.4 %230, %21
    %234:i32 = iadd %229, %231
    %235:i32 = iadd %234, %233
    %236:ctrl, %237:i32 = srem %232, %235, %1
    %238:ctrl = store.4 %236, %237, %8
    %239:ctrl, %240:i32 = load.4 %238, %9
    %241:ctrl, %242:i32 = load.4 %239, %8
    %243:i32 = iadd %240, %242
    %244:ctrl, %245:i32 = srem %241, %243, %1
    %246:ctrl = store.4 %244, %245, %9
    %247:ctrl, %248:i32 = load.4 %246, %17
    %249:ctrl, %250:i32 = load.4 %247, %7
    %251:ctrl, %252:i32 = load.4 %249, %8
    %253:ctrl, %254:i32 = load.4 %251, %9
    %255:i32 = iadd %250, %252
    %256:i32 = iadd %255, %254
    %257:i32 = iadd %248, %256
    %258:ctrl = store.4 %253, %257, %17
    %259:ctrl, %260:i32 = load.4 %258, %21
    %261:i32 = iadd %260, %33
    %262:ctrl = store.4 %259, %261, %21
    %265:ctrl, %266:i32 = load.4 %213, %20
    %267:i32 = iadd %266, %33
    %268:ctrl = store.4 %265, %267, %20
    %271:ctrl, %272:i32 = load.4 %173, %19
    %273:i32 = iadd %272, %33
    %274:ctrl = store.4 %271, %273, %19
    %277:ctrl = store.4 %119, %35, %25
    %278:ctrl, %279:phisel = region %277, %320
    %280:ctrl, %281:i32 = load.4 %278, %25
    %282:ctrl, %283:i32 = sdiv %280, %1, %53
    %284:i32 = icmp slt %281, %283
    %285:ctrl = store.1 %282, %284, %26
    %286:ctrl, %287:i32 = load.1 %285, %26
    %288:ctrl, %289:ctrl = brcond %286, %287
    %292:ctrl, %293:i32 = load.4 %288, %10
    %294:ctrl, %295:i32 = load.4 %292, %25
    %296:i32 = iadd %293, %295
    %297:ctrl, %298:i32 = srem %294, %296, %1
    %299:ctrl = store.4 %297, %298, %10
    %300:ctrl, %301:i32 = load.4 %299, %11
    %302:ctrl, %303:i32 = load.4 %300, %10
    %304:i32 = iadd %301, %303
    %305:ctrl, %306:i32 = srem %302, %304, %1
    %307:ctrl = store.4 %305, %306, %11
    %308:ctrl, %309:i32 = load.4 %307, %17
    %310:ctrl, %311:i32 = load.4 %308, %10
    %312:ctrl, %313:i32 = load.4 %310, %11
    %314:i32 = iadd %311, %313
    %315:i32 = iadd %309, %314
    %316:ctrl = store.4 %312, %315, %17
    %317:ctrl, %318:i32 = load.4 %316, %25
    %319:i32 = iadd %318, %33
    %320:ctrl = store.4 %317, %319, %25
    %323:ctrl = store.4 %289, %35, %27
    %324:ctrl, %325:phisel = region %323, %380
    %326:ctrl, %327:i32 = load.4 %324, %27
    %328:ctrl, %329:i32 = sdiv %326, %1, %34
    %330:i32 = icmp slt %327, %329
    %331:ctrl = store.1 %328, %330, %28
    %332:ctrl, %333:i32 = load.1 %331, %28
    %334:ctrl, %335:ctrl = brcond %332, %333
    %338:ctrl, %339:i32 = load.4 %334, %12
    %340:ctrl, %341:i32 = load.4 %338, %27
    %342:i32 = iadd %339, %341
    %343:ctrl, %344:i32 = srem %340, %342, %1
    %345:ctrl = store.4 %343, %344, %12
    %346:ctrl, %347:i32 = load.4 %345, %13
    %348:ctrl, %349:i32 = load.4 %346, %12
    %350:i32 = iadd %347, %349
    %351:ctrl, %352:i32 = srem %348, %350, %1
    %353:ctrl = store.4 %351, %352, %13
    %354:ctrl, %355:i32 = load.4 %353, %14
    %356:ctrl, %357:i32 = load.4 %354, %13
    %358:ctrl, %359:i32 = load.4 %356, %27
    %360:i32 = iadd %355, %357
    %361:i32 = iadd %360, %359
    %362:ctrl, %363:i32 = srem %358, %361, %1
    %364:ctrl = store.4 %362, %363, %14
    %365:ctrl, %366:i32 = load.4 %364, %17
    %367:ctrl, %368:i32 = load.4 %365, %12
    %369:ctrl, %370:i32 = load.4 %367, %13
    %371:ctrl, %372:i32 = load.4 %369, %14
    %373:i32 = iadd %368, %370
    %374:i32 = iadd %373, %372
    %375:i32 = iadd %366, %374
    %376:ctrl = store.4 %371, %375, %17
    %377:ctrl, %378:i32 = load.4 %376, %27
    %379:i32 = iadd %378, %33
    %380:ctrl = store.4 %377, %379, %27
    %383:ctrl, %384:i32 = load.4 %335, %18
    %385:i32 = iadd %384, %33
    %386:ctrl = store.4 %383, %385, %18
    %389:ctrl, %390:i32 = load.4 %104, %17
    %391:ctrl, %392:i32 = load.4 %389, %2
    %393:ctrl, %394:i32 = load.4 %391, %3
    %395:ctrl, %396:i32 = load.4 %393, %4
    %397:ctrl, %398:i32 = load.4 %395, %5
    %399:ctrl, %400:i32 = load.4 %397, %6
    %401:ctrl, %402:i32 = load.4 %399, %7
    %403:ctrl, %404:i32 = load.4 %401, %8
    %405:ctrl, %406:i32 = load.4 %403, %9
    %407:ctrl, %408:i32 = load.4 %405, %10
    %409:ctrl, %410:i32 = load.4 %407, %11
    %411:ctrl, %412:i32 = load.4 %409, %12
    %413:ctrl, %414:i32 = load.4 %411, %13
    %415:ctrl, %416:i32 = load.4 %413, %14
    %417:ctrl, %418:i32 = load.4 %415, %15
    %419:ctrl, %420:i32 = load.4 %417, %16
    %421:i32 = iadd %392, %394
    %422:i32 = iadd %421, %396
    %423:i32 = iadd %422, %398
    %424:i32 = iadd %423, %400
    %425:i32 = iadd %424, %402
    %426:i32 = iadd %425, %404
    %427:i32 = iadd %426, %406
    %428:i32 = iadd %427, %408
    %429:i32 = iadd %428, %410
    %430:i32 = iadd %429, %412
    %431:i32 = iadd %430, %414
    %432:i32 = iadd %431, %416
    %433:i32 = iadd %432, %418
    %434:i32 = iadd %433, %420
    %435:i32 = iadd %390, %434
    %436:ctrl = store.4 %419, %435, %17
    %437:ctrl, %438:i32 = load.4 %436, %17
    %439:ctrl = store.4 %437, %438, %30
    %442:ctrl, %443:i32 = load.4 %439, %30
    return %442, %443
}
