# run: codegen

extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)":i32(ptr, i32)
extfunc @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)":i32(i64, i32)

func @"System.Boolean Tests.BitTest::Run()":i32() {
    # check: function `System.Boolean Tests.BitTest::Run()`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 41 56                           push r14
    # nextln: 000006: 41 55                           push r13
    # nextln: 000008: 41 54                           push r12
    # nextln: 00000a: 53                              push rbx
    # nextln: 00000b: 48 83 ec 30                     sub rsp, 0x30
    # nextln: 00000f: 33 c0                           xor eax, eax
    # nextln: 000011: 33 db                           xor ebx, ebx
    # nextln: 000013: 88 5c 24 1f                     mov byte ptr [rsp + 0x1f], bl
    # nextln: 000017: 88 5c 24 1e                     mov byte ptr [rsp + 0x1e], bl
    # nextln: 00001b: 88 5c 24 20                     mov byte ptr [rsp + 0x20], bl
    # nextln: 00001f: 66 89 5c 24 1c                  mov word ptr [rsp + 0x1c], bx
    # nextln: 000024: 66 89 5c 24 1a                  mov word ptr [rsp + 0x1a], bx
    # nextln: 000029: 66 89 5c 24 18                  mov word ptr [rsp + 0x18], bx
    # nextln: 00002e: 89 5c 24 14                     mov dword ptr [rsp + 0x14], ebx
    # nextln: 000032: 89 5c 24 10                     mov dword ptr [rsp + 0x10], ebx
    # nextln: 000036: 48 89 44 24 08                  mov qword ptr [rsp + 8], rax
    # nextln: 00003b: 48 89 04 24                     mov qword ptr [rsp], rax
    # nextln: 00003f: b8 01 00 00 00                  mov eax, 1
    # nextln: 000044: 41 bc 03 00 00 00               mov r12d, 3
    # nextln: 00004a: ba 02 00 00 00                  mov edx, 2
    # nextln: 00004f: 48 63 c8                        movsxd rcx, eax
    # nextln: 000052: 48 63 fa                        movsxd rdi, edx
    # nextln: 000055: be 80 ff ff ff                  mov esi, 0xffffff80
    # nextln: 00005a: 40 88 74 24 1f                  mov byte ptr [rsp + 0x1f], sil
    # nextln: 00005f: be 00 80 ff ff                  mov esi, 0xffff8000
    # nextln: 000064: 88 44 24 1e                     mov byte ptr [rsp + 0x1e], al
    # nextln: 000068: 88 54 24 20                     mov byte ptr [rsp + 0x20], dl
    # nextln: 00006c: 66 89 74 24 1c                  mov word ptr [rsp + 0x1c], si
    # nextln: 000071: 66 89 44 24 1a                  mov word ptr [rsp + 0x1a], ax
    # nextln: 000076: 66 89 54 24 18                  mov word ptr [rsp + 0x18], dx
    # nextln: 00007b: 89 44 24 14                     mov dword ptr [rsp + 0x14], eax
    # nextln: 00007f: 89 54 24 10                     mov dword ptr [rsp + 0x10], edx
    # nextln: 000083: 48 89 4c 24 08                  mov qword ptr [rsp + 8], rcx
    # nextln: 000088: 48 89 3c 24                     mov qword ptr [rsp], rdi
    # nextln: 00008c: 0f b6 44 24 1f                  movzx eax, byte ptr [rsp + 0x1f]
    # nextln: 000091: 0f be f8                        movsx edi, al
    # nextln: 000094: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 00009e: be 07 00 00 00                  mov esi, 7
    # nextln: 0000a3: ff d0                           call rax
    # nextln: 0000a5: 41 bd 01 00 00 00               mov r13d, 1
    # nextln: 0000ab: 4d 89 ee                        mov r14, r13
    # nextln: 0000ae: 44 23 f0                        and r14d, eax
    # nextln: 0000b1: 0f b6 44 24 1f                  movzx eax, byte ptr [rsp + 0x1f]
    # nextln: 0000b6: 0f be f8                        movsx edi, al
    # nextln: 0000b9: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0000c3: be 08 00 00 00                  mov esi, 8
    # nextln: 0000c8: ff d0                           call rax
    # nextln: 0000ca: 44 23 f0                        and r14d, eax
    # nextln: 0000cd: 0f b6 44 24 1e                  movzx eax, byte ptr [rsp + 0x1e]
    # nextln: 0000d2: 0f be f8                        movsx edi, al
    # nextln: 0000d5: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0000df: 48 89 de                        mov rsi, rbx
    # nextln: 0000e2: ff d0                           call rax
    # nextln: 0000e4: 44 23 f0                        and r14d, eax
    # nextln: 0000e7: 0f b6 44 24 1e                  movzx eax, byte ptr [rsp + 0x1e]
    # nextln: 0000ec: 0f be f8                        movsx edi, al
    # nextln: 0000ef: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0000f9: be 08 00 00 00                  mov esi, 8
    # nextln: 0000fe: ff d0                           call rax
    # nextln: 000100: 33 c9                           xor ecx, ecx
    # nextln: 000102: 85 c0                           test eax, eax
    # nextln: 000104: 0f 94 c1                        sete cl
    # nextln: 000107: 44 23 f1                        and r14d, ecx
    # nextln: 00010a: 0f b6 44 24 1e                  movzx eax, byte ptr [rsp + 0x1e]
    # nextln: 00010f: 0f be f8                        movsx edi, al
    # nextln: 000112: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 00011c: be 20 00 00 00                  mov esi, 0x20
    # nextln: 000121: ff d0                           call rax
    # nextln: 000123: 44 23 f0                        and r14d, eax
    # nextln: 000126: 0f b6 44 24 20                  movzx eax, byte ptr [rsp + 0x20]
    # nextln: 00012b: 0f be f8                        movsx edi, al
    # nextln: 00012e: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000138: 48 89 de                        mov rsi, rbx
    # nextln: 00013b: ff d0                           call rax
    # nextln: 00013d: 33 c9                           xor ecx, ecx
    # nextln: 00013f: 85 c0                           test eax, eax
    # nextln: 000141: 0f 94 c1                        sete cl
    # nextln: 000144: 44 23 f1                        and r14d, ecx
    # nextln: 000147: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000151: be 07 00 00 00                  mov esi, 7
    # nextln: 000156: 48 8d 7c 24 1f                  lea rdi, [rsp + 0x1f]
    # nextln: 00015b: ff d0                           call rax
    # nextln: 00015d: 44 23 f0                        and r14d, eax
    # nextln: 000160: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00016a: 48 8d 7c 24 1f                  lea rdi, [rsp + 0x1f]
    # nextln: 00016f: be 08 00 00 00                  mov esi, 8
    # nextln: 000174: ff d0                           call rax
    # nextln: 000176: 44 23 f0                        and r14d, eax
    # nextln: 000179: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000183: 48 8d 7c 24 1e                  lea rdi, [rsp + 0x1e]
    # nextln: 000188: 48 89 de                        mov rsi, rbx
    # nextln: 00018b: ff d0                           call rax
    # nextln: 00018d: 44 23 f0                        and r14d, eax
    # nextln: 000190: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00019a: be 08 00 00 00                  mov esi, 8
    # nextln: 00019f: 48 8d 7c 24 1e                  lea rdi, [rsp + 0x1e]
    # nextln: 0001a4: ff d0                           call rax
    # nextln: 0001a6: 33 c9                           xor ecx, ecx
    # nextln: 0001a8: 85 c0                           test eax, eax
    # nextln: 0001aa: 0f 94 c1                        sete cl
    # nextln: 0001ad: 44 23 f1                        and r14d, ecx
    # nextln: 0001b0: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0001ba: 48 8d 7c 24 1e                  lea rdi, [rsp + 0x1e]
    # nextln: 0001bf: be 20 00 00 00                  mov esi, 0x20
    # nextln: 0001c4: ff d0                           call rax
    # nextln: 0001c6: 44 23 f0                        and r14d, eax
    # nextln: 0001c9: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0001d3: 48 8d 7c 24 20                  lea rdi, [rsp + 0x20]
    # nextln: 0001d8: 48 89 de                        mov rsi, rbx
    # nextln: 0001db: ff d0                           call rax
    # nextln: 0001dd: 33 c9                           xor ecx, ecx
    # nextln: 0001df: 85 c0                           test eax, eax
    # nextln: 0001e1: 0f 94 c1                        sete cl
    # nextln: 0001e4: 44 23 f1                        and r14d, ecx
    # nextln: 0001e7: 0f b7 44 24 1c                  movzx eax, word ptr [rsp + 0x1c]
    # nextln: 0001ec: 0f bf f8                        movsx edi, ax
    # nextln: 0001ef: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0001f9: be 0f 00 00 00                  mov esi, 0xf
    # nextln: 0001fe: ff d0                           call rax
    # nextln: 000200: 44 23 f0                        and r14d, eax
    # nextln: 000203: 0f b7 44 24 1c                  movzx eax, word ptr [rsp + 0x1c]
    # nextln: 000208: 0f bf f8                        movsx edi, ax
    # nextln: 00020b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000215: be 10 00 00 00                  mov esi, 0x10
    # nextln: 00021a: ff d0                           call rax
    # nextln: 00021c: 44 23 f0                        and r14d, eax
    # nextln: 00021f: 0f b7 44 24 1a                  movzx eax, word ptr [rsp + 0x1a]
    # nextln: 000224: 0f bf f8                        movsx edi, ax
    # nextln: 000227: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000231: 48 89 de                        mov rsi, rbx
    # nextln: 000234: ff d0                           call rax
    # nextln: 000236: 44 23 f0                        and r14d, eax
    # nextln: 000239: 0f b7 44 24 1a                  movzx eax, word ptr [rsp + 0x1a]
    # nextln: 00023e: 0f bf f8                        movsx edi, ax
    # nextln: 000241: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00024b: be 10 00 00 00                  mov esi, 0x10
    # nextln: 000250: ff d0                           call rax
    # nextln: 000252: 33 c9                           xor ecx, ecx
    # nextln: 000254: 85 c0                           test eax, eax
    # nextln: 000256: 0f 94 c1                        sete cl
    # nextln: 000259: 44 23 f1                        and r14d, ecx
    # nextln: 00025c: 0f b7 44 24 1a                  movzx eax, word ptr [rsp + 0x1a]
    # nextln: 000261: 0f bf f8                        movsx edi, ax
    # nextln: 000264: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00026e: be 20 00 00 00                  mov esi, 0x20
    # nextln: 000273: ff d0                           call rax
    # nextln: 000275: 44 23 f0                        and r14d, eax
    # nextln: 000278: 0f b7 44 24 18                  movzx eax, word ptr [rsp + 0x18]
    # nextln: 00027d: 0f bf f8                        movsx edi, ax
    # nextln: 000280: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00028a: 48 89 de                        mov rsi, rbx
    # nextln: 00028d: ff d0                           call rax
    # nextln: 00028f: 33 c9                           xor ecx, ecx
    # nextln: 000291: 85 c0                           test eax, eax
    # nextln: 000293: 0f 94 c1                        sete cl
    # nextln: 000296: 44 23 f1                        and r14d, ecx
    # nextln: 000299: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002a3: be 0f 00 00 00                  mov esi, 0xf
    # nextln: 0002a8: 48 8d 7c 24 1c                  lea rdi, [rsp + 0x1c]
    # nextln: 0002ad: ff d0                           call rax
    # nextln: 0002af: 44 23 f0                        and r14d, eax
    # nextln: 0002b2: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002bc: 48 8d 7c 24 1c                  lea rdi, [rsp + 0x1c]
    # nextln: 0002c1: be 10 00 00 00                  mov esi, 0x10
    # nextln: 0002c6: ff d0                           call rax
    # nextln: 0002c8: 44 23 f0                        and r14d, eax
    # nextln: 0002cb: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002d5: 48 8d 7c 24 1a                  lea rdi, [rsp + 0x1a]
    # nextln: 0002da: 48 89 de                        mov rsi, rbx
    # nextln: 0002dd: ff d0                           call rax
    # nextln: 0002df: 44 23 f0                        and r14d, eax
    # nextln: 0002e2: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002ec: be 10 00 00 00                  mov esi, 0x10
    # nextln: 0002f1: 48 8d 7c 24 1a                  lea rdi, [rsp + 0x1a]
    # nextln: 0002f6: ff d0                           call rax
    # nextln: 0002f8: 33 c9                           xor ecx, ecx
    # nextln: 0002fa: 85 c0                           test eax, eax
    # nextln: 0002fc: 0f 94 c1                        sete cl
    # nextln: 0002ff: 44 23 f1                        and r14d, ecx
    # nextln: 000302: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 00030c: 48 8d 7c 24 1a                  lea rdi, [rsp + 0x1a]
    # nextln: 000311: be 20 00 00 00                  mov esi, 0x20
    # nextln: 000316: ff d0                           call rax
    # nextln: 000318: 44 23 f0                        and r14d, eax
    # nextln: 00031b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000325: 48 8d 7c 24 18                  lea rdi, [rsp + 0x18]
    # nextln: 00032a: 48 89 de                        mov rsi, rbx
    # nextln: 00032d: ff d0                           call rax
    # nextln: 00032f: 33 c9                           xor ecx, ecx
    # nextln: 000331: 85 c0                           test eax, eax
    # nextln: 000333: 0f 94 c1                        sete cl
    # nextln: 000336: 44 23 f1                        and r14d, ecx
    # nextln: 000339: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 00033d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000347: 48 89 de                        mov rsi, rbx
    # nextln: 00034a: ff d0                           call rax
    # nextln: 00034c: 44 23 f0                        and r14d, eax
    # nextln: 00034f: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 000353: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 00035d: be 20 00 00 00                  mov esi, 0x20
    # nextln: 000362: ff d0                           call rax
    # nextln: 000364: 44 23 f0                        and r14d, eax
    # nextln: 000367: 8b 7c 24 10                     mov edi, dword ptr [rsp + 0x10]
    # nextln: 00036b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000375: 48 89 de                        mov rsi, rbx
    # nextln: 000378: ff d0                           call rax
    # nextln: 00037a: 33 c9                           xor ecx, ecx
    # nextln: 00037c: 85 c0                           test eax, eax
    # nextln: 00037e: 0f 94 c1                        sete cl
    # nextln: 000381: 44 23 f1                        and r14d, ecx
    # nextln: 000384: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 000388: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 000392: 48 89 de                        mov rsi, rbx
    # nextln: 000395: ff d0                           call rax
    # nextln: 000397: 33 c9                           xor ecx, ecx
    # nextln: 000399: 85 c0                           test eax, eax
    # nextln: 00039b: 0f 94 c1                        sete cl
    # nextln: 00039e: 44 23 f1                        and r14d, ecx
    # nextln: 0003a1: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 0003a5: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0003af: be 20 00 00 00                  mov esi, 0x20
    # nextln: 0003b4: ff d0                           call rax
    # nextln: 0003b6: 33 c9                           xor ecx, ecx
    # nextln: 0003b8: 85 c0                           test eax, eax
    # nextln: 0003ba: 0f 94 c1                        sete cl
    # nextln: 0003bd: 44 23 f1                        and r14d, ecx
    # nextln: 0003c0: 8b 7c 24 10                     mov edi, dword ptr [rsp + 0x10]
    # nextln: 0003c4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0003ce: 48 89 de                        mov rsi, rbx
    # nextln: 0003d1: ff d0                           call rax
    # nextln: 0003d3: 44 23 f0                        and r14d, eax
    # nextln: 0003d6: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 0003da: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 0003e4: 48 89 de                        mov rsi, rbx
    # nextln: 0003e7: ff d0                           call rax
    # nextln: 0003e9: 33 c9                           xor ecx, ecx
    # nextln: 0003eb: 85 c0                           test eax, eax
    # nextln: 0003ed: 0f 94 c1                        sete cl
    # nextln: 0003f0: 44 23 f1                        and r14d, ecx
    # nextln: 0003f3: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 0003f7: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000401: be 20 00 00 00                  mov esi, 0x20
    # nextln: 000406: ff d0                           call rax
    # nextln: 000408: 33 c9                           xor ecx, ecx
    # nextln: 00040a: 85 c0                           test eax, eax
    # nextln: 00040c: 0f 94 c1                        sete cl
    # nextln: 00040f: 44 23 f1                        and r14d, ecx
    # nextln: 000412: 8b 7c 24 10                     mov edi, dword ptr [rsp + 0x10]
    # nextln: 000416: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000420: 48 89 de                        mov rsi, rbx
    # nextln: 000423: ff d0                           call rax
    # nextln: 000425: 33 c9                           xor ecx, ecx
    # nextln: 000427: 41 3b c4                        cmp eax, r12d
    # nextln: 00042a: 0f 94 c1                        sete cl
    # nextln: 00042d: 44 23 f1                        and r14d, ecx
    # nextln: 000430: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00043a: 48 8d 7c 24 14                  lea rdi, [rsp + 0x14]
    # nextln: 00043f: 48 89 de                        mov rsi, rbx
    # nextln: 000442: ff d0                           call rax
    # nextln: 000444: 44 23 f0                        and r14d, eax
    # nextln: 000447: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 000451: 48 8d 7c 24 14                  lea rdi, [rsp + 0x14]
    # nextln: 000456: be 20 00 00 00                  mov esi, 0x20
    # nextln: 00045b: ff d0                           call rax
    # nextln: 00045d: 44 23 f0                        and r14d, eax
    # nextln: 000460: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00046a: 48 8d 7c 24 10                  lea rdi, [rsp + 0x10]
    # nextln: 00046f: 48 89 de                        mov rsi, rbx
    # nextln: 000472: ff d0                           call rax
    # nextln: 000474: 33 c9                           xor ecx, ecx
    # nextln: 000476: 85 c0                           test eax, eax
    # nextln: 000478: 0f 94 c1                        sete cl
    # nextln: 00047b: 44 23 f1                        and r14d, ecx
    # nextln: 00047e: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 000483: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 00048d: 48 89 de                        mov rsi, rbx
    # nextln: 000490: ff d0                           call rax
    # nextln: 000492: 44 23 f0                        and r14d, eax
    # nextln: 000495: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 00049a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0004a4: be 20 00 00 00                  mov esi, 0x20
    # nextln: 0004a9: ff d0                           call rax
    # nextln: 0004ab: 33 c9                           xor ecx, ecx
    # nextln: 0004ad: 85 c0                           test eax, eax
    # nextln: 0004af: 0f 94 c1                        sete cl
    # nextln: 0004b2: 44 23 f1                        and r14d, ecx
    # nextln: 0004b5: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0004ba: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0004c4: be 40 00 00 00                  mov esi, 0x40
    # nextln: 0004c9: ff d0                           call rax
    # nextln: 0004cb: 44 23 f0                        and r14d, eax
    # nextln: 0004ce: 48 8b 3c 24                     mov rdi, qword ptr [rsp]
    # nextln: 0004d2: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0004dc: 48 89 de                        mov rsi, rbx
    # nextln: 0004df: ff d0                           call rax
    # nextln: 0004e1: 33 c9                           xor ecx, ecx
    # nextln: 0004e3: 85 c0                           test eax, eax
    # nextln: 0004e5: 0f 94 c1                        sete cl
    # nextln: 0004e8: 44 23 f1                        and r14d, ecx
    # nextln: 0004eb: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 0004f5: 48 8d 7c 24 08                  lea rdi, [rsp + 8]
    # nextln: 0004fa: 48 89 de                        mov rsi, rbx
    # nextln: 0004fd: ff d0                           call rax
    # nextln: 0004ff: 44 23 f0                        and r14d, eax
    # nextln: 000502: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00050c: 48 8d 7c 24 08                  lea rdi, [rsp + 8]
    # nextln: 000511: be 20 00 00 00                  mov esi, 0x20
    # nextln: 000516: ff d0                           call rax
    # nextln: 000518: 49 89 c4                        mov r12, rax
    # nextln: 00051b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 000525: be 40 00 00 00                  mov esi, 0x40
    # nextln: 00052a: 48 8d 7c 24 08                  lea rdi, [rsp + 8]
    # nextln: 00052f: ff d0                           call rax
    # nextln: 000531: 33 c9                           xor ecx, ecx
    # nextln: 000533: 45 85 e4                        test r12d, r12d
    # nextln: 000536: 0f 94 c1                        sete cl
    # nextln: 000539: 44 23 f1                        and r14d, ecx
    # nextln: 00053c: 44 23 f0                        and r14d, eax
    # nextln: 00053f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 000549: 48 89 e7                        mov rdi, rsp
    # nextln: 00054c: 48 89 de                        mov rsi, rbx
    # nextln: 00054f: ff d0                           call rax
    # nextln: 000551: 33 c9                           xor ecx, ecx
    # nextln: 000553: 85 c0                           test eax, eax
    # nextln: 000555: 0f 94 c1                        sete cl
    # nextln: 000558: 44 23 f1                        and r14d, ecx
    # nextln: 00055b: 45 85 f6                        test r14d, r14d
    # nextln: 00055e: 0f 84 12 00 00 00               je 0x576
    # nextln: 000564: b8 01 00 00 00                  mov eax, 1
    # nextln: 000569: 48 83 c4 30                     add rsp, 0x30
    # nextln: 00056d: 5b                              pop rbx
    # nextln: 00056e: 41 5c                           pop r12
    # nextln: 000570: 41 5d                           pop r13
    # nextln: 000572: 41 5e                           pop r14
    # nextln: 000574: 5d                              pop rbp
    # nextln: 000575: c3                              ret
    # nextln: 000576: 48 89 d8                        mov rax, rbx
    # nextln: 000579: 48 83 c4 30                     add rsp, 0x30
    # nextln: 00057d: 5b                              pop rbx
    # nextln: 00057e: 41 5c                           pop r12
    # nextln: 000580: 41 5d                           pop r13
    # nextln: 000582: 41 5e                           pop r14
    # nextln: 000584: 5d                              pop rbp
    # nextln: 000585: c3                              ret

    %0:ctrl = entry
    %1:ctrl, %2:phisel = region %0
    %3:i32 = iconst 0
    %4:i32 = iconst 1
    %5:i64 = iext %4
    %6:i64 = sfill 32 %5
    %7:i32 = iconst 3
    %8:ptr = stackslot 8:8
    %9:i32 = iconst 64
    %10:ptr = stackslot 8:8
    %11:i32 = iconst 32
    %12:ptr = stackslot 4:4
    %13:ptr = stackslot 4:4
    %14:ptr = stackslot 2:2
    %15:ptr = stackslot 2:2
    %16:i32 = iconst 16
    %17:ptr = stackslot 2:2
    %18:i32 = iconst 15
    %19:ptr = stackslot 1:1
    %20:ptr = stackslot 1:1
    %21:i32 = iconst 8
    %22:ptr = stackslot 1:1
    %23:ctrl = store.1 %1, %3, %22
    %24:ctrl = store.1 %23, %3, %20
    %25:ctrl = store.1 %24, %3, %19
    %26:ctrl = store.2 %25, %3, %17
    %27:ctrl = store.2 %26, %3, %15
    %28:ctrl = store.2 %27, %3, %14
    %29:ctrl = store.4 %28, %3, %13
    %30:ctrl = store.4 %29, %3, %12
    %31:i32 = iconst 7
    %32:i32 = iconst 2
    %33:i64 = iext %32
    %34:i64 = sfill 32 %33
    %35:i32 = iconst 4294934528
    %36:i32 = iconst 4294967168
    %37:i64 = iconst 0
    %38:ctrl = store.8 %30, %37, %10
    %39:ctrl = store.8 %38, %37, %8
    %40:ctrl, %41:phisel = region %39
    %42:ctrl = store.1 %40, %36, %22
    %43:ctrl = store.1 %42, %4, %20
    %44:ctrl = store.1 %43, %32, %19
    %45:ctrl = store.2 %44, %35, %17
    %46:ctrl = store.2 %45, %4, %15
    %47:ctrl = store.2 %46, %32, %14
    %48:ctrl = store.4 %47, %4, %13
    %49:ctrl = store.4 %48, %32, %12
    %50:ctrl = store.8 %49, %6, %10
    %51:ctrl = store.8 %50, %34, %8
    %52:ctrl, %53:i32 = load.1 %51, %22
    %54:i32 = sfill 8 %53
    %55:ctrl, %56:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %52, %54, %31
    %57:ctrl, %58:i32 = load.1 %55, %22
    %59:i32 = sfill 8 %58
    %60:ctrl, %61:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %57, %59, %21
    %62:ctrl, %63:i32 = load.1 %60, %20
    %64:i32 = sfill 8 %63
    %65:ctrl, %66:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %62, %64, %3
    %67:ctrl, %68:i32 = load.1 %65, %20
    %69:i32 = sfill 8 %68
    %70:ctrl, %71:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %67, %69, %21
    %72:ctrl, %73:i32 = load.1 %70, %20
    %74:i32 = sfill 8 %73
    %75:ctrl, %76:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %72, %74, %11
    %77:ctrl, %78:i32 = load.1 %75, %19
    %79:i32 = sfill 8 %78
    %80:ctrl, %81:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %77, %79, %3
    %82:ctrl, %83:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %80, %22, %31
    %84:ctrl, %85:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %82, %22, %21
    %86:ctrl, %87:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %84, %20, %3
    %88:ctrl, %89:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %86, %20, %21
    %90:ctrl, %91:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %88, %20, %11
    %92:ctrl, %93:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %90, %19, %3
    %94:ctrl, %95:i32 = load.2 %92, %17
    %96:i32 = sfill 16 %95
    %97:ctrl, %98:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %94, %96, %18
    %99:ctrl, %100:i32 = load.2 %97, %17
    %101:i32 = sfill 16 %100
    %102:ctrl, %103:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %99, %101, %16
    %104:ctrl, %105:i32 = load.2 %102, %15
    %106:i32 = sfill 16 %105
    %107:ctrl, %108:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %104, %106, %3
    %109:ctrl, %110:i32 = load.2 %107, %15
    %111:i32 = sfill 16 %110
    %112:ctrl, %113:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %109, %111, %16
    %114:ctrl, %115:i32 = load.2 %112, %15
    %116:i32 = sfill 16 %115
    %117:ctrl, %118:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %114, %116, %11
    %119:ctrl, %120:i32 = load.2 %117, %14
    %121:i32 = sfill 16 %120
    %122:ctrl, %123:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %119, %121, %3
    %124:ctrl, %125:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %122, %17, %18
    %126:ctrl, %127:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %124, %17, %16
    %128:ctrl, %129:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %126, %15, %3
    %130:ctrl, %131:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %128, %15, %16
    %132:ctrl, %133:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %130, %15, %11
    %134:ctrl, %135:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %132, %14, %3
    %136:ctrl, %137:i32 = load.4 %134, %13
    %138:ctrl, %139:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %136, %137, %3
    %140:ctrl, %141:i32 = load.4 %138, %13
    %142:ctrl, %143:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %140, %141, %11
    %144:ctrl, %145:i32 = load.4 %142, %12
    %146:ctrl, %147:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %144, %145, %3
    %148:ctrl, %149:i32 = load.4 %146, %13
    %150:ctrl, %151:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %148, %149, %3
    %152:ctrl, %153:i32 = load.4 %150, %13
    %154:ctrl, %155:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %152, %153, %11
    %156:ctrl, %157:i32 = load.4 %154, %12
    %158:ctrl, %159:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %156, %157, %3
    %160:ctrl, %161:i32 = load.4 %158, %13
    %162:ctrl, %163:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %160, %161, %3
    %164:ctrl, %165:i32 = load.4 %162, %13
    %166:ctrl, %167:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %164, %165, %11
    %168:ctrl, %169:i32 = load.4 %166, %12
    %170:ctrl, %171:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %168, %169, %3
    %172:ctrl, %173:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %170, %13, %3
    %174:ctrl, %175:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %172, %13, %11
    %176:ctrl, %177:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %174, %12, %3
    %178:ctrl, %179:i64 = load.8 %176, %10
    %180:ctrl, %181:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %178, %179, %3
    %182:ctrl, %183:i64 = load.8 %180, %10
    %184:ctrl, %185:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %182, %183, %11
    %186:ctrl, %187:i64 = load.8 %184, %10
    %188:ctrl, %189:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %186, %187, %9
    %190:ctrl, %191:i64 = load.8 %188, %8
    %192:ctrl, %193:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %190, %191, %3
    %194:ctrl, %195:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %192, %10, %3
    %196:ctrl, %197:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %194, %10, %11
    %198:ctrl, %199:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %196, %10, %9
    %200:ctrl, %201:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %198, %8, %3
    %202:i32 = icmp eq %201, %3
    %203:i32 = icmp eq %197, %3
    %204:i32 = icmp eq %193, %3
    %205:i32 = icmp eq %185, %3
    %206:i32 = icmp eq %177, %3
    %207:i32 = icmp eq %171, %7
    %208:i32 = icmp eq %167, %3
    %209:i32 = icmp eq %163, %3
    %210:i32 = icmp eq %155, %3
    %211:i32 = icmp eq %151, %3
    %212:i32 = icmp eq %147, %3
    %213:i32 = icmp eq %135, %3
    %214:i32 = icmp eq %131, %3
    %215:i32 = icmp eq %123, %3
    %216:i32 = icmp eq %113, %3
    %217:i32 = icmp eq %93, %3
    %218:i32 = icmp eq %89, %3
    %219:i32 = icmp eq %81, %3
    %220:i32 = icmp eq %71, %3
    %221:i32 = and %4, %56
    %222:i32 = and %221, %61
    %223:i32 = and %222, %66
    %224:i32 = and %223, %220
    %225:i32 = and %224, %76
    %226:i32 = and %225, %219
    %227:i32 = and %226, %83
    %228:i32 = and %227, %85
    %229:i32 = and %228, %87
    %230:i32 = and %229, %218
    %231:i32 = and %230, %91
    %232:i32 = and %231, %217
    %233:i32 = and %232, %98
    %234:i32 = and %233, %103
    %235:i32 = and %234, %108
    %236:i32 = and %235, %216
    %237:i32 = and %236, %118
    %238:i32 = and %237, %215
    %239:i32 = and %238, %125
    %240:i32 = and %239, %127
    %241:i32 = and %240, %129
    %242:i32 = and %241, %214
    %243:i32 = and %242, %133
    %244:i32 = and %243, %213
    %245:i32 = and %244, %139
    %246:i32 = and %245, %143
    %247:i32 = and %246, %212
    %248:i32 = and %247, %211
    %249:i32 = and %248, %210
    %250:i32 = and %249, %159
    %251:i32 = and %250, %209
    %252:i32 = and %251, %208
    %253:i32 = and %252, %207
    %254:i32 = and %253, %173
    %255:i32 = and %254, %175
    %256:i32 = and %255, %206
    %257:i32 = and %256, %181
    %258:i32 = and %257, %205
    %259:i32 = and %258, %189
    %260:i32 = and %259, %204
    %261:i32 = and %260, %195
    %262:i32 = and %261, %203
    %263:i32 = and %262, %199
    %264:i32 = and %263, %202
    %265:ctrl, %266:ctrl = brcond %200, %264
    %267:ctrl, %268:phisel = region %265
    return %267, %4
    %269:ctrl, %270:phisel = region %266
    return %269, %3
}
