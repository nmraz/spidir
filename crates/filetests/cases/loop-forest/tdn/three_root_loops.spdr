# run: loop-forest

func @"System.Int32 System.Test::Loop2(System.Int32, System.Int32, System.Int32)":i32(ptr, i32, i32, i32) {
    # check: function `System.Int32 System.Test::Loop2(System.Int32, System.Int32, System.Int32)`:
    # nextln: %0:ctrl, %1:ptr, %2:i32, %3:i32, %4:i32 = entry         # x
    # nextln: %5:ctrl, %6:phisel = region %0          # x
    # nextln: %7:ptr = stackslot 4:4                  # x
    # nextln: %8:ptr = stackslot 4:4                  # x
    # nextln: %9:i32 = iconst 1                       # x
    # nextln: %10:i32 = iconst 4                      # x
    # nextln: %11:i32 = iconst 0                      # x
    # nextln: %12:ctrl = store.4 %5, %11, %7          # x
    # nextln: %13:ptr = stackslot 4:4                 # x
    # nextln: %14:i32 = iconst 3                      # x
    # nextln: %15:ptr = stackslot 4:4                 # x
    # nextln: %16:ctrl = store.4 %12, %11, %15        # x
    # nextln: %17:ctrl = store.4 %16, %11, %13        # x
    # nextln: %18:ctrl = store.4 %17, %11, %8         # x
    # nextln: %19:ctrl, %20:phisel = region %18       # x
    # nextln: %21:ctrl = store.4 %19, %11, %7         # x
    # nextln: %22:ctrl = store.4 %21, %11, %15        # x
    # nextln: %23:i32 = iconst 2                      # x
    # nextln: %24:i32 = and %51, %23                  # x
    # nextln: %25:ctrl, %26:ctrl = brcond %50, %24    # loop 2; x
    # nextln: %27:ctrl, %28:phisel = region %25       # loop 2; x
    # nextln: %29:ctrl, %30:i32 = load.4 %27, %7      # loop 2; x
    # nextln: %31:ctrl, %32:i32 = load.4 %29, %15     # loop 2; x
    # nextln: %33:i32 = iadd %30, %32                 # x
    # nextln: %34:ctrl = store.4 %31, %33, %7         # loop 2; x
    # nextln: %35:ctrl, %36:phisel = region %26, %34  # loop 2; x
    # nextln: %37:ctrl, %38:i32 = load.4 %35, %15     # loop 2; x
    # nextln: %39:i32 = iadd %38, %9                  # x
    # nextln: %40:ctrl = store.4 %37, %39, %15        # loop 2; x
    # nextln: %41:ctrl, %42:phisel = region %22, %40  # loop 2; header; root 2; x
    # nextln: %43:ctrl, %44:i32 = load.4 %41, %15     # loop 2; x
    # nextln: %45:i32 = icmp slt %44, %2              # x
    # nextln: %46:ctrl, %47:ctrl = brcond %43, %45    # loop 2; x
    # nextln: %48:ctrl, %49:phisel = region %46       # loop 2; x
    # nextln: %50:ctrl, %51:i32 = load.4 %48, %15     # loop 2; x
    # nextln: %52:ctrl, %53:phisel = region %47       # x
    # nextln: %54:ctrl = store.4 %52, %11, %13        # x
    # nextln: %55:ctrl, %56:phisel = region %54, %80  # loop 1; header; root 1; x
    # nextln: %57:ctrl, %58:i32 = load.4 %55, %13     # loop 1; x
    # nextln: %59:i32 = icmp slt %58, %3              # x
    # nextln: %60:ctrl, %61:ctrl = brcond %57, %59    # loop 1; x
    # nextln: %62:ctrl, %63:phisel = region %60       # loop 1; x
    # nextln: %64:ctrl, %65:i32 = load.4 %62, %13     # loop 1; x
    # nextln: %66:i32 = and %65, %14                  # x
    # nextln: %67:ctrl, %68:ctrl = brcond %64, %66    # loop 1; x
    # nextln: %69:ctrl, %70:phisel = region %67       # loop 1; x
    # nextln: %71:ctrl, %72:i32 = load.4 %69, %7      # loop 1; x
    # nextln: %73:ctrl, %74:i32 = load.4 %71, %13     # loop 1; x
    # nextln: %75:i32 = iadd %72, %74                 # x
    # nextln: %76:ctrl = store.4 %73, %75, %7         # loop 1; x
    # nextln: %77:ctrl, %78:i32 = load.4 %76, %13     # loop 1; x
    # nextln: %79:i32 = iadd %78, %9                  # x
    # nextln: %80:ctrl = store.4 %77, %79, %13        # loop 1; x
    # nextln: %81:ctrl, %82:phisel = region %68, %61  # x
    # nextln: %83:ctrl = store.4 %81, %11, %8         # x
    # nextln: %84:ctrl, %85:phisel = region %83, %111         # loop 0; header; root 0; x
    # nextln: %86:ctrl, %87:i32 = load.4 %84, %8      # loop 0; x
    # nextln: %88:i32 = icmp slt %87, %4              # x
    # nextln: %89:ctrl, %90:ctrl = brcond %86, %88    # loop 0; x
    # nextln: %91:ctrl, %92:phisel = region %89       # loop 0; x
    # nextln: %93:ctrl, %94:i32 = load.4 %91, %8      # loop 0; x
    # nextln: %95:i32 = and %94, %10                  # x
    # nextln: %96:ctrl, %97:ctrl = brcond %93, %95    # loop 0; x
    # nextln: %98:ctrl, %99:phisel = region %96       # loop 0; x
    # nextln: %100:ctrl, %101:i32 = load.4 %98, %7    # loop 0; x
    # nextln: %102:ctrl, %103:i32 = load.4 %100, %8   # loop 0; x
    # nextln: %104:i32 = iadd %101, %103              # x
    # nextln: %105:ctrl = store.4 %102, %104, %7      # loop 0; x
    # nextln: %106:ctrl, %107:phisel = region %97, %105       # loop 0; x
    # nextln: %108:ctrl, %109:i32 = load.4 %106, %8   # loop 0; x
    # nextln: %110:i32 = iadd %109, %9                # x
    # nextln: %111:ctrl = store.4 %108, %110, %8      # loop 0; x
    # nextln: %112:ctrl, %113:phisel = region %90     # x
    # nextln: %114:ctrl, %115:i32 = load.4 %112, %7   # x
    # nextln: return %114, %115                       # x

    %0:ctrl, %1:ptr, %2:i32, %3:i32, %4:i32 = entry
    %5:ctrl, %6:phisel = region %0
    %7:ptr = stackslot 4:4
    %14:ptr = stackslot 4:4
    %62:i32 = iconst 1
    %95:i32 = iconst 4
    %8:i32 = iconst 0
    %9:ctrl = store.4 %5, %8, %7
    %12:ptr = stackslot 4:4
    %73:i32 = iconst 3
    %10:ptr = stackslot 4:4
    %11:ctrl = store.4 %9, %8, %10
    %13:ctrl = store.4 %11, %8, %12
    %15:ctrl = store.4 %13, %8, %14
    %44:ctrl, %45:phisel = region %15
    %46:ctrl = store.4 %44, %8, %7
    %47:ctrl = store.4 %46, %8, %10
    %50:i32 = iconst 2
    %51:i32 = and %49, %50
    %52:ctrl, %53:ctrl = brcond %48, %51
    %18:ctrl, %19:phisel = region %52
    %54:ctrl, %55:i32 = load.4 %18, %7
    %56:ctrl, %57:i32 = load.4 %54, %10
    %58:i32 = iadd %55, %57
    %59:ctrl = store.4 %56, %58, %7
    %20:ctrl, %21:phisel = region %53, %59
    %60:ctrl, %61:i32 = load.4 %20, %10
    %63:i32 = iadd %61, %62
    %64:ctrl = store.4 %60, %63, %10
    %22:ctrl, %23:phisel = region %47, %64
    %65:ctrl, %66:i32 = load.4 %22, %10
    %67:i32 = icmp slt %66, %2
    %68:ctrl, %69:ctrl = brcond %65, %67
    %16:ctrl, %17:phisel = region %68
    %48:ctrl, %49:i32 = load.4 %16, %10
    %24:ctrl, %25:phisel = region %69
    %70:ctrl = store.4 %24, %8, %12
    %30:ctrl, %31:phisel = region %70, %86
    %87:ctrl, %88:i32 = load.4 %30, %12
    %89:i32 = icmp slt %88, %3
    %90:ctrl, %91:ctrl = brcond %87, %89
    %26:ctrl, %27:phisel = region %90
    %71:ctrl, %72:i32 = load.4 %26, %12
    %74:i32 = and %72, %73
    %75:ctrl, %76:ctrl = brcond %71, %74
    %28:ctrl, %29:phisel = region %75
    %77:ctrl, %78:i32 = load.4 %28, %7
    %79:ctrl, %80:i32 = load.4 %77, %12
    %81:i32 = iadd %78, %80
    %82:ctrl = store.4 %79, %81, %7
    %83:ctrl, %84:i32 = load.4 %82, %12
    %85:i32 = iadd %84, %62
    %86:ctrl = store.4 %83, %85, %12
    %32:ctrl, %33:phisel = region %76, %91
    %92:ctrl = store.4 %32, %8, %14
    %40:ctrl, %41:phisel = region %92, %108
    %109:ctrl, %110:i32 = load.4 %40, %14
    %111:i32 = icmp slt %110, %4
    %112:ctrl, %113:ctrl = brcond %109, %111
    %34:ctrl, %35:phisel = region %112
    %93:ctrl, %94:i32 = load.4 %34, %14
    %96:i32 = and %94, %95
    %97:ctrl, %98:ctrl = brcond %93, %96
    %36:ctrl, %37:phisel = region %97
    %99:ctrl, %100:i32 = load.4 %36, %7
    %101:ctrl, %102:i32 = load.4 %99, %14
    %103:i32 = iadd %100, %102
    %104:ctrl = store.4 %101, %103, %7
    %38:ctrl, %39:phisel = region %98, %104
    %105:ctrl, %106:i32 = load.4 %38, %14
    %107:i32 = iadd %106, %62
    %108:ctrl = store.4 %105, %107, %14
    %42:ctrl, %43:phisel = region %113
    %114:ctrl, %115:i32 = load.4 %42, %7
    return %114, %115
}
