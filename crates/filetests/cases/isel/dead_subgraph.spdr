# run: isel

func @dead_subgraph(i32) {
    # check: function `dead_subgraph`:
    # nextln:       block0[]:
    # nextln: 0000:      Jump(block1)
    # nextln:       => block1
    # nextln:       block1:
    # nextln: 0001:      Ret

    %ent:ctrl, %p1:i32 = entry
    %d:ctrl, %dp:phisel = region
    %e:ctrl, %f:ctrl = brcond %d, %p1
    %g:ctrl, %gp:phisel = region %e, %f
    %exit:ctrl, %exitp:phisel = region %ent, %g
    return %exit
}

func @dead_subgraph_input_mid(i32) {
    # check: function `dead_subgraph_input_mid`:
    # nextln:       block0[%0:gpr64($$rdi)]:
    # nextln: 0000:      AluRRm(S32, Test) %0(reg)[early], %0(any)[early]
    # nextln: 0001:      Jumpcc(Ne, block1, block3)
    # nextln:       => block1, block3
    # nextln:       block1:
    # nextln: 0002:      Jump(block2)
    # nextln:       => block2
    # nextln:       block3:
    # nextln: 0003:      Jump(block2)
    # nextln:       => block2
    # nextln:       block2:
    # nextln: 0004:      Ret

    %ent:ctrl, %p1:i32 = entry
    %a:ctrl, %b:ctrl = brcond %ent, %p1
    %d:ctrl, %dp:phisel = region
    %e:ctrl, %f:ctrl = brcond %d, %p1
    %g:ctrl, %gp:phisel = region %e, %f
    %exit:ctrl, %exitp:phisel = region %a, %g, %b
    return %exit
}

func @dead_subgraph_input_1(i32) {
    # check: function `dead_subgraph_input_1`:
    # nextln:       block0[]:
    # nextln: 0000:      Jump(block1)
    # nextln:       => block1
    # nextln:       block1:
    # nextln: 0001:      Ret

    %ent:ctrl, %p1:i32 = entry
    %d:ctrl, %dp:phisel = region
    %e:ctrl, %f:ctrl = brcond %d, %p1
    %g:ctrl, %gp:phisel = region %e, %f
    %exit:ctrl, %exitp:phisel = region %g, %ent
    return %exit
}
