# run: codegen

func @"System.Int32 testout1::Sub_Funclet_89()":i32() {
    # check: function `System.Int32 testout1::Sub_Funclet_89()`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: ba 01 00 00 00                  mov edx, 1
    # nextln: 000009: 48 b9 90 a5 00 00 20 50 00 00   movabs rcx, 0x50200000a590
    # nextln: 000013: b8 03 00 00 00                  mov eax, 3
    # nextln: 000018: 88 11                           mov byte ptr [rcx], dl
    # nextln: 00001a: 85 d2                           test edx, edx
    # nextln: 00001c: 0f 85 0b 00 00 00               jne 0x2d
    # nextln: 000022: 0f b6 39                        movzx edi, byte ptr [rcx]
    # nextln: 000025: 85 ff                           test edi, edi
    # nextln: 000027: 0f 84 08 00 00 00               je 0x35
    # nextln: 00002d: 48 89 c7                        mov rdi, rax
    # nextln: 000030: e9 05 00 00 00                  jmp 0x3a
    # nextln: 000035: bf fb ff ff ff                  mov edi, 0xfffffffb
    # nextln: 00003a: 85 d2                           test edx, edx
    # nextln: 00003c: 0f 85 10 00 00 00               jne 0x52
    # nextln: 000042: 0f b6 09                        movzx ecx, byte ptr [rcx]
    # nextln: 000045: 85 c9                           test ecx, ecx
    # nextln: 000047: 0f 85 05 00 00 00               jne 0x52
    # nextln: 00004d: b8 fb ff ff ff                  mov eax, 0xfffffffb
    # nextln: 000052: 03 c7                           add eax, edi
    # nextln: 000054: 5d                              pop rbp
    # nextln: 000055: c3                              ret

    %0:ctrl = entry
    %60:i32 = iconst 3
    %22:i32 = iconst 4294967291
    %26:ptr = iconst 88098369217936
    %23:i32 = iconst 1
    %27:ctrl = store.1 %0, %23, %26
    %32:ctrl, %33:ctrl = brcond %27, %23
    %34:ctrl, %35:i32 = load.1 %33, %26
    %36:ctrl, %37:ctrl = brcond %34, %35
    %7:ctrl, %8:phisel = region %32, %36
    %9:ctrl, %10:phisel = region %37, %7
    %48:ctrl, %49:ctrl = brcond %9, %23
    %50:ctrl, %51:i32 = load.1 %49, %26
    %52:ctrl, %53:ctrl = brcond %50, %51
    %15:ctrl, %16:phisel = region %48, %52
    %17:ctrl, %18:phisel = region %53, %15
    %55:i32 = phi %18, %22, %60
    %39:i32 = phi %10, %22, %60
    %59:i32 = iadd %39, %55
    return %17, %59
}
