# run: codegen

extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)":i32(ptr, i32)
extfunc @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)":i32(i64, i32)

func @"System.Boolean Tests.BitTest::Run()":i32() {
    # check: function `System.Boolean Tests.BitTest::Run()`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 41 57                           push r15
    # nextln: 000006: 41 56                           push r14
    # nextln: 000008: 41 55                           push r13
    # nextln: 00000a: 41 54                           push r12
    # nextln: 00000c: 53                              push rbx
    # nextln: 00000d: 48 83 ec 38                     sub rsp, 0x38
    # nextln: 000011: 33 c0                           xor eax, eax
    # nextln: 000013: 33 db                           xor ebx, ebx
    # nextln: 000015: 88 5c 24 1f                     mov byte ptr [rsp + 0x1f], bl
    # nextln: 000019: 88 5c 24 1e                     mov byte ptr [rsp + 0x1e], bl
    # nextln: 00001d: 88 5c 24 20                     mov byte ptr [rsp + 0x20], bl
    # nextln: 000021: 66 89 5c 24 1c                  mov word ptr [rsp + 0x1c], bx
    # nextln: 000026: 66 89 5c 24 1a                  mov word ptr [rsp + 0x1a], bx
    # nextln: 00002b: 66 89 5c 24 18                  mov word ptr [rsp + 0x18], bx
    # nextln: 000030: 89 5c 24 14                     mov dword ptr [rsp + 0x14], ebx
    # nextln: 000034: 89 5c 24 10                     mov dword ptr [rsp + 0x10], ebx
    # nextln: 000038: 48 89 44 24 08                  mov qword ptr [rsp + 8], rax
    # nextln: 00003d: 48 89 04 24                     mov qword ptr [rsp], rax
    # nextln: 000041: 41 be 08 00 00 00               mov r14d, 8
    # nextln: 000047: b8 01 00 00 00                  mov eax, 1
    # nextln: 00004c: b9 02 00 00 00                  mov ecx, 2
    # nextln: 000051: 48 63 f8                        movsxd rdi, eax
    # nextln: 000054: 48 63 d1                        movsxd rdx, ecx
    # nextln: 000057: be 80 ff ff ff                  mov esi, 0xffffff80
    # nextln: 00005c: 40 88 74 24 1f                  mov byte ptr [rsp + 0x1f], sil
    # nextln: 000061: be 00 80 ff ff                  mov esi, 0xffff8000
    # nextln: 000066: 88 44 24 1e                     mov byte ptr [rsp + 0x1e], al
    # nextln: 00006a: 88 4c 24 20                     mov byte ptr [rsp + 0x20], cl
    # nextln: 00006e: 66 89 74 24 1c                  mov word ptr [rsp + 0x1c], si
    # nextln: 000073: 66 89 44 24 1a                  mov word ptr [rsp + 0x1a], ax
    # nextln: 000078: 66 89 4c 24 18                  mov word ptr [rsp + 0x18], cx
    # nextln: 00007d: 89 44 24 14                     mov dword ptr [rsp + 0x14], eax
    # nextln: 000081: 89 4c 24 10                     mov dword ptr [rsp + 0x10], ecx
    # nextln: 000085: 48 89 7c 24 08                  mov qword ptr [rsp + 8], rdi
    # nextln: 00008a: 48 89 14 24                     mov qword ptr [rsp], rdx
    # nextln: 00008e: 0f b6 44 24 1f                  movzx eax, byte ptr [rsp + 0x1f]
    # nextln: 000093: 0f be f8                        movsx edi, al
    # nextln: 000096: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0000a0: 4c 8d 64 24 1e                  lea r12, [rsp + 0x1e]
    # nextln: 0000a5: 41 bd 07 00 00 00               mov r13d, 7
    # nextln: 0000ab: 4c 89 ee                        mov rsi, r13
    # nextln: 0000ae: ff d0                           call rax
    # nextln: 0000b0: b9 01 00 00 00                  mov ecx, 1
    # nextln: 0000b5: 49 89 cf                        mov r15, rcx
    # nextln: 0000b8: 44 23 f8                        and r15d, eax
    # nextln: 0000bb: 0f b6 44 24 1f                  movzx eax, byte ptr [rsp + 0x1f]
    # nextln: 0000c0: 0f be f8                        movsx edi, al
    # nextln: 0000c3: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0000cd: 4c 8d 6c 24 1f                  lea r13, [rsp + 0x1f]
    # nextln: 0000d2: 4c 89 f6                        mov rsi, r14
    # nextln: 0000d5: ff d0                           call rax
    # nextln: 0000d7: 44 23 f8                        and r15d, eax
    # nextln: 0000da: 0f b6 44 24 1e                  movzx eax, byte ptr [rsp + 0x1e]
    # nextln: 0000df: 0f be f8                        movsx edi, al
    # nextln: 0000e2: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0000ec: 48 89 de                        mov rsi, rbx
    # nextln: 0000ef: ff d0                           call rax
    # nextln: 0000f1: 44 23 f8                        and r15d, eax
    # nextln: 0000f4: 0f b6 44 24 1e                  movzx eax, byte ptr [rsp + 0x1e]
    # nextln: 0000f9: 0f be f8                        movsx edi, al
    # nextln: 0000fc: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000106: 4c 89 f6                        mov rsi, r14
    # nextln: 000109: ff d0                           call rax
    # nextln: 00010b: 33 c9                           xor ecx, ecx
    # nextln: 00010d: 85 c0                           test eax, eax
    # nextln: 00010f: 0f 94 c1                        sete cl
    # nextln: 000112: 44 23 f9                        and r15d, ecx
    # nextln: 000115: 0f b6 44 24 1e                  movzx eax, byte ptr [rsp + 0x1e]
    # nextln: 00011a: 0f be f8                        movsx edi, al
    # nextln: 00011d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000127: be 20 00 00 00                  mov esi, 0x20
    # nextln: 00012c: ff d0                           call rax
    # nextln: 00012e: 44 23 f8                        and r15d, eax
    # nextln: 000131: 0f b6 44 24 20                  movzx eax, byte ptr [rsp + 0x20]
    # nextln: 000136: 0f be f8                        movsx edi, al
    # nextln: 000139: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000143: 48 89 de                        mov rsi, rbx
    # nextln: 000146: ff d0                           call rax
    # nextln: 000148: 33 c9                           xor ecx, ecx
    # nextln: 00014a: 85 c0                           test eax, eax
    # nextln: 00014c: 0f 94 c1                        sete cl
    # nextln: 00014f: 44 23 f9                        and r15d, ecx
    # nextln: 000152: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00015c: be 07 00 00 00                  mov esi, 7
    # nextln: 000161: 4c 89 ef                        mov rdi, r13
    # nextln: 000164: ff d0                           call rax
    # nextln: 000166: 44 23 f8                        and r15d, eax
    # nextln: 000169: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000173: 4c 89 ef                        mov rdi, r13
    # nextln: 000176: 4c 89 f6                        mov rsi, r14
    # nextln: 000179: ff d0                           call rax
    # nextln: 00017b: 44 23 f8                        and r15d, eax
    # nextln: 00017e: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000188: 48 89 de                        mov rsi, rbx
    # nextln: 00018b: 4c 89 e7                        mov rdi, r12
    # nextln: 00018e: ff d0                           call rax
    # nextln: 000190: 44 23 f8                        and r15d, eax
    # nextln: 000193: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00019d: 4c 89 f6                        mov rsi, r14
    # nextln: 0001a0: 4c 89 e7                        mov rdi, r12
    # nextln: 0001a3: ff d0                           call rax
    # nextln: 0001a5: 33 c9                           xor ecx, ecx
    # nextln: 0001a7: 85 c0                           test eax, eax
    # nextln: 0001a9: 0f 94 c1                        sete cl
    # nextln: 0001ac: 44 23 f9                        and r15d, ecx
    # nextln: 0001af: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0001b9: 41 bd 20 00 00 00               mov r13d, 0x20
    # nextln: 0001bf: 4c 89 ee                        mov rsi, r13
    # nextln: 0001c2: 4c 89 e7                        mov rdi, r12
    # nextln: 0001c5: ff d0                           call rax
    # nextln: 0001c7: 44 23 f8                        and r15d, eax
    # nextln: 0001ca: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0001d4: 48 8d 7c 24 20                  lea rdi, [rsp + 0x20]
    # nextln: 0001d9: 48 89 de                        mov rsi, rbx
    # nextln: 0001dc: ff d0                           call rax
    # nextln: 0001de: 33 c9                           xor ecx, ecx
    # nextln: 0001e0: 85 c0                           test eax, eax
    # nextln: 0001e2: 0f 94 c1                        sete cl
    # nextln: 0001e5: 44 23 f9                        and r15d, ecx
    # nextln: 0001e8: 0f b7 44 24 1c                  movzx eax, word ptr [rsp + 0x1c]
    # nextln: 0001ed: 0f bf f8                        movsx edi, ax
    # nextln: 0001f0: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0001fa: 41 be 0f 00 00 00               mov r14d, 0xf
    # nextln: 000200: 4c 89 f6                        mov rsi, r14
    # nextln: 000203: ff d0                           call rax
    # nextln: 000205: 44 23 f8                        and r15d, eax
    # nextln: 000208: 0f b7 44 24 1c                  movzx eax, word ptr [rsp + 0x1c]
    # nextln: 00020d: 0f bf f8                        movsx edi, ax
    # nextln: 000210: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00021a: 41 bc 10 00 00 00               mov r12d, 0x10
    # nextln: 000220: 4c 89 e6                        mov rsi, r12
    # nextln: 000223: ff d0                           call rax
    # nextln: 000225: 44 23 f8                        and r15d, eax
    # nextln: 000228: 0f b7 44 24 1a                  movzx eax, word ptr [rsp + 0x1a]
    # nextln: 00022d: 0f bf f8                        movsx edi, ax
    # nextln: 000230: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00023a: 48 89 de                        mov rsi, rbx
    # nextln: 00023d: ff d0                           call rax
    # nextln: 00023f: 44 23 f8                        and r15d, eax
    # nextln: 000242: 0f b7 44 24 1a                  movzx eax, word ptr [rsp + 0x1a]
    # nextln: 000247: 0f bf f8                        movsx edi, ax
    # nextln: 00024a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000254: 4c 89 e6                        mov rsi, r12
    # nextln: 000257: ff d0                           call rax
    # nextln: 000259: 33 c9                           xor ecx, ecx
    # nextln: 00025b: 85 c0                           test eax, eax
    # nextln: 00025d: 0f 94 c1                        sete cl
    # nextln: 000260: 44 23 f9                        and r15d, ecx
    # nextln: 000263: 0f b7 44 24 1a                  movzx eax, word ptr [rsp + 0x1a]
    # nextln: 000268: 0f bf f8                        movsx edi, ax
    # nextln: 00026b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000275: 4c 89 ee                        mov rsi, r13
    # nextln: 000278: ff d0                           call rax
    # nextln: 00027a: 44 23 f8                        and r15d, eax
    # nextln: 00027d: 0f b7 44 24 18                  movzx eax, word ptr [rsp + 0x18]
    # nextln: 000282: 0f bf f8                        movsx edi, ax
    # nextln: 000285: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00028f: 48 89 de                        mov rsi, rbx
    # nextln: 000292: ff d0                           call rax
    # nextln: 000294: 33 c9                           xor ecx, ecx
    # nextln: 000296: 85 c0                           test eax, eax
    # nextln: 000298: 0f 94 c1                        sete cl
    # nextln: 00029b: 44 23 f9                        and r15d, ecx
    # nextln: 00029e: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002a8: 48 8d 7c 24 1c                  lea rdi, [rsp + 0x1c]
    # nextln: 0002ad: 4c 89 f6                        mov rsi, r14
    # nextln: 0002b0: ff d0                           call rax
    # nextln: 0002b2: 44 23 f8                        and r15d, eax
    # nextln: 0002b5: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002bf: 48 8d 7c 24 1c                  lea rdi, [rsp + 0x1c]
    # nextln: 0002c4: 4c 89 e6                        mov rsi, r12
    # nextln: 0002c7: ff d0                           call rax
    # nextln: 0002c9: 44 23 f8                        and r15d, eax
    # nextln: 0002cc: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002d6: 4c 8d 74 24 1a                  lea r14, [rsp + 0x1a]
    # nextln: 0002db: 48 89 de                        mov rsi, rbx
    # nextln: 0002de: 4c 89 f7                        mov rdi, r14
    # nextln: 0002e1: ff d0                           call rax
    # nextln: 0002e3: 44 23 f8                        and r15d, eax
    # nextln: 0002e6: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0002f0: 4c 89 e6                        mov rsi, r12
    # nextln: 0002f3: 4c 89 f7                        mov rdi, r14
    # nextln: 0002f6: ff d0                           call rax
    # nextln: 0002f8: 33 c9                           xor ecx, ecx
    # nextln: 0002fa: 85 c0                           test eax, eax
    # nextln: 0002fc: 0f 94 c1                        sete cl
    # nextln: 0002ff: 44 23 f9                        and r15d, ecx
    # nextln: 000302: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 00030c: 4c 89 ee                        mov rsi, r13
    # nextln: 00030f: 4c 89 f7                        mov rdi, r14
    # nextln: 000312: ff d0                           call rax
    # nextln: 000314: 44 23 f8                        and r15d, eax
    # nextln: 000317: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000321: 48 8d 7c 24 18                  lea rdi, [rsp + 0x18]
    # nextln: 000326: 48 89 de                        mov rsi, rbx
    # nextln: 000329: ff d0                           call rax
    # nextln: 00032b: 33 c9                           xor ecx, ecx
    # nextln: 00032d: 85 c0                           test eax, eax
    # nextln: 00032f: 0f 94 c1                        sete cl
    # nextln: 000332: 44 23 f9                        and r15d, ecx
    # nextln: 000335: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 000339: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000343: 48 89 de                        mov rsi, rbx
    # nextln: 000346: ff d0                           call rax
    # nextln: 000348: 44 23 f8                        and r15d, eax
    # nextln: 00034b: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 00034f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000359: 4c 89 ee                        mov rsi, r13
    # nextln: 00035c: ff d0                           call rax
    # nextln: 00035e: 44 23 f8                        and r15d, eax
    # nextln: 000361: 8b 7c 24 10                     mov edi, dword ptr [rsp + 0x10]
    # nextln: 000365: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 00036f: 48 89 de                        mov rsi, rbx
    # nextln: 000372: ff d0                           call rax
    # nextln: 000374: 33 c9                           xor ecx, ecx
    # nextln: 000376: 85 c0                           test eax, eax
    # nextln: 000378: 0f 94 c1                        sete cl
    # nextln: 00037b: 44 23 f9                        and r15d, ecx
    # nextln: 00037e: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 000382: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 00038c: 48 89 de                        mov rsi, rbx
    # nextln: 00038f: ff d0                           call rax
    # nextln: 000391: 33 c9                           xor ecx, ecx
    # nextln: 000393: 85 c0                           test eax, eax
    # nextln: 000395: 0f 94 c1                        sete cl
    # nextln: 000398: 44 23 f9                        and r15d, ecx
    # nextln: 00039b: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 00039f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0003a9: 4c 89 ee                        mov rsi, r13
    # nextln: 0003ac: ff d0                           call rax
    # nextln: 0003ae: 33 c9                           xor ecx, ecx
    # nextln: 0003b0: 85 c0                           test eax, eax
    # nextln: 0003b2: 0f 94 c1                        sete cl
    # nextln: 0003b5: 44 23 f9                        and r15d, ecx
    # nextln: 0003b8: 8b 7c 24 10                     mov edi, dword ptr [rsp + 0x10]
    # nextln: 0003bc: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0003c6: 48 89 de                        mov rsi, rbx
    # nextln: 0003c9: ff d0                           call rax
    # nextln: 0003cb: 44 23 f8                        and r15d, eax
    # nextln: 0003ce: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 0003d2: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 0003dc: 48 89 de                        mov rsi, rbx
    # nextln: 0003df: ff d0                           call rax
    # nextln: 0003e1: 33 c9                           xor ecx, ecx
    # nextln: 0003e3: 85 c0                           test eax, eax
    # nextln: 0003e5: 0f 94 c1                        sete cl
    # nextln: 0003e8: 44 23 f9                        and r15d, ecx
    # nextln: 0003eb: 8b 7c 24 14                     mov edi, dword ptr [rsp + 0x14]
    # nextln: 0003ef: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 0003f9: 4c 89 ee                        mov rsi, r13
    # nextln: 0003fc: ff d0                           call rax
    # nextln: 0003fe: 33 c9                           xor ecx, ecx
    # nextln: 000400: 85 c0                           test eax, eax
    # nextln: 000402: 0f 94 c1                        sete cl
    # nextln: 000405: 44 23 f9                        and r15d, ecx
    # nextln: 000408: 8b 7c 24 10                     mov edi, dword ptr [rsp + 0x10]
    # nextln: 00040c: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000416: 48 89 de                        mov rsi, rbx
    # nextln: 000419: ff d0                           call rax
    # nextln: 00041b: 33 c9                           xor ecx, ecx
    # nextln: 00041d: ba 03 00 00 00                  mov edx, 3
    # nextln: 000422: 3b c2                           cmp eax, edx
    # nextln: 000424: 0f 94 c1                        sete cl
    # nextln: 000427: 44 23 f9                        and r15d, ecx
    # nextln: 00042a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 000434: 4c 8d 64 24 14                  lea r12, [rsp + 0x14]
    # nextln: 000439: 48 89 de                        mov rsi, rbx
    # nextln: 00043c: 4c 89 e7                        mov rdi, r12
    # nextln: 00043f: ff d0                           call rax
    # nextln: 000441: 44 23 f8                        and r15d, eax
    # nextln: 000444: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00044e: 4c 89 ee                        mov rsi, r13
    # nextln: 000451: 4c 89 e7                        mov rdi, r12
    # nextln: 000454: ff d0                           call rax
    # nextln: 000456: 44 23 f8                        and r15d, eax
    # nextln: 000459: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 000463: 48 8d 7c 24 10                  lea rdi, [rsp + 0x10]
    # nextln: 000468: 48 89 de                        mov rsi, rbx
    # nextln: 00046b: ff d0                           call rax
    # nextln: 00046d: 33 c9                           xor ecx, ecx
    # nextln: 00046f: 85 c0                           test eax, eax
    # nextln: 000471: 0f 94 c1                        sete cl
    # nextln: 000474: 44 23 f9                        and r15d, ecx
    # nextln: 000477: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 00047c: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 000486: 48 89 de                        mov rsi, rbx
    # nextln: 000489: ff d0                           call rax
    # nextln: 00048b: 44 23 f8                        and r15d, eax
    # nextln: 00048e: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 000493: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 00049d: 4c 89 ee                        mov rsi, r13
    # nextln: 0004a0: ff d0                           call rax
    # nextln: 0004a2: 33 c9                           xor ecx, ecx
    # nextln: 0004a4: 85 c0                           test eax, eax
    # nextln: 0004a6: 0f 94 c1                        sete cl
    # nextln: 0004a9: 44 23 f9                        and r15d, ecx
    # nextln: 0004ac: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0004b1: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0004bb: 41 bc 40 00 00 00               mov r12d, 0x40
    # nextln: 0004c1: 4c 89 e6                        mov rsi, r12
    # nextln: 0004c4: ff d0                           call rax
    # nextln: 0004c6: 44 23 f8                        and r15d, eax
    # nextln: 0004c9: 48 8b 3c 24                     mov rdi, qword ptr [rsp]
    # nextln: 0004cd: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0004d7: 48 89 de                        mov rsi, rbx
    # nextln: 0004da: ff d0                           call rax
    # nextln: 0004dc: 33 c9                           xor ecx, ecx
    # nextln: 0004de: 85 c0                           test eax, eax
    # nextln: 0004e0: 0f 94 c1                        sete cl
    # nextln: 0004e3: 44 23 f9                        and r15d, ecx
    # nextln: 0004e6: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 0004f0: 4c 8d 74 24 08                  lea r14, [rsp + 8]
    # nextln: 0004f5: 4c 89 f7                        mov rdi, r14
    # nextln: 0004f8: 48 89 de                        mov rsi, rbx
    # nextln: 0004fb: ff d0                           call rax
    # nextln: 0004fd: 44 23 f8                        and r15d, eax
    # nextln: 000500: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00050a: 4c 89 ee                        mov rsi, r13
    # nextln: 00050d: 4c 89 f7                        mov rdi, r14
    # nextln: 000510: ff d0                           call rax
    # nextln: 000512: 49 89 c5                        mov r13, rax
    # nextln: 000515: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00051f: 4c 89 e6                        mov rsi, r12
    # nextln: 000522: 4c 89 f7                        mov rdi, r14
    # nextln: 000525: ff d0                           call rax
    # nextln: 000527: 33 c9                           xor ecx, ecx
    # nextln: 000529: 45 85 ed                        test r13d, r13d
    # nextln: 00052c: 0f 94 c1                        sete cl
    # nextln: 00052f: 44 23 f9                        and r15d, ecx
    # nextln: 000532: 44 23 f8                        and r15d, eax
    # nextln: 000535: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00053f: 48 89 e7                        mov rdi, rsp
    # nextln: 000542: 48 89 de                        mov rsi, rbx
    # nextln: 000545: ff d0                           call rax
    # nextln: 000547: 33 c9                           xor ecx, ecx
    # nextln: 000549: 85 c0                           test eax, eax
    # nextln: 00054b: 0f 94 c1                        sete cl
    # nextln: 00054e: 44 23 f9                        and r15d, ecx
    # nextln: 000551: 45 85 ff                        test r15d, r15d
    # nextln: 000554: 0f 84 14 00 00 00               je 0x56e
    # nextln: 00055a: b8 01 00 00 00                  mov eax, 1
    # nextln: 00055f: 48 83 c4 38                     add rsp, 0x38
    # nextln: 000563: 5b                              pop rbx
    # nextln: 000564: 41 5c                           pop r12
    # nextln: 000566: 41 5d                           pop r13
    # nextln: 000568: 41 5e                           pop r14
    # nextln: 00056a: 41 5f                           pop r15
    # nextln: 00056c: 5d                              pop rbp
    # nextln: 00056d: c3                              ret
    # nextln: 00056e: 48 89 d8                        mov rax, rbx
    # nextln: 000571: 48 83 c4 38                     add rsp, 0x38
    # nextln: 000575: 5b                              pop rbx
    # nextln: 000576: 41 5c                           pop r12
    # nextln: 000578: 41 5d                           pop r13
    # nextln: 00057a: 41 5e                           pop r14
    # nextln: 00057c: 41 5f                           pop r15
    # nextln: 00057e: 5d                              pop rbp
    # nextln: 00057f: c3                              ret

    %0:ctrl = entry
    %1:ctrl, %2:phisel = region %0
    %3:i32 = iconst 0
    %4:i32 = iconst 1
    %5:i64 = iext %4
    %6:i64 = sfill 32 %5
    %7:i32 = iconst 3
    %8:ptr = stackslot 8:8
    %9:i32 = iconst 64
    %10:ptr = stackslot 8:8
    %11:i32 = iconst 32
    %12:ptr = stackslot 4:4
    %13:ptr = stackslot 4:4
    %14:ptr = stackslot 2:2
    %15:ptr = stackslot 2:2
    %16:i32 = iconst 16
    %17:ptr = stackslot 2:2
    %18:i32 = iconst 15
    %19:ptr = stackslot 1:1
    %20:ptr = stackslot 1:1
    %21:i32 = iconst 8
    %22:ptr = stackslot 1:1
    %23:ctrl = store.1 %1, %3, %22
    %24:ctrl = store.1 %23, %3, %20
    %25:ctrl = store.1 %24, %3, %19
    %26:ctrl = store.2 %25, %3, %17
    %27:ctrl = store.2 %26, %3, %15
    %28:ctrl = store.2 %27, %3, %14
    %29:ctrl = store.4 %28, %3, %13
    %30:ctrl = store.4 %29, %3, %12
    %31:i32 = iconst 7
    %32:i32 = iconst 2
    %33:i64 = iext %32
    %34:i64 = sfill 32 %33
    %35:i32 = iconst 4294934528
    %36:i32 = iconst 4294967168
    %37:i64 = iconst 0
    %38:ctrl = store.8 %30, %37, %10
    %39:ctrl = store.8 %38, %37, %8
    %40:ctrl, %41:phisel = region %39
    %42:ctrl = store.1 %40, %36, %22
    %43:ctrl = store.1 %42, %4, %20
    %44:ctrl = store.1 %43, %32, %19
    %45:ctrl = store.2 %44, %35, %17
    %46:ctrl = store.2 %45, %4, %15
    %47:ctrl = store.2 %46, %32, %14
    %48:ctrl = store.4 %47, %4, %13
    %49:ctrl = store.4 %48, %32, %12
    %50:ctrl = store.8 %49, %6, %10
    %51:ctrl = store.8 %50, %34, %8
    %52:ctrl, %53:i32 = load.1 %51, %22
    %54:i32 = sfill 8 %53
    %55:ctrl, %56:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %52, %54, %31
    %57:ctrl, %58:i32 = load.1 %55, %22
    %59:i32 = sfill 8 %58
    %60:ctrl, %61:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %57, %59, %21
    %62:ctrl, %63:i32 = load.1 %60, %20
    %64:i32 = sfill 8 %63
    %65:ctrl, %66:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %62, %64, %3
    %67:ctrl, %68:i32 = load.1 %65, %20
    %69:i32 = sfill 8 %68
    %70:ctrl, %71:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %67, %69, %21
    %72:ctrl, %73:i32 = load.1 %70, %20
    %74:i32 = sfill 8 %73
    %75:ctrl, %76:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %72, %74, %11
    %77:ctrl, %78:i32 = load.1 %75, %19
    %79:i32 = sfill 8 %78
    %80:ctrl, %81:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %77, %79, %3
    %82:ctrl, %83:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %80, %22, %31
    %84:ctrl, %85:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %82, %22, %21
    %86:ctrl, %87:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %84, %20, %3
    %88:ctrl, %89:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %86, %20, %21
    %90:ctrl, %91:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %88, %20, %11
    %92:ctrl, %93:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %90, %19, %3
    %94:ctrl, %95:i32 = load.2 %92, %17
    %96:i32 = sfill 16 %95
    %97:ctrl, %98:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %94, %96, %18
    %99:ctrl, %100:i32 = load.2 %97, %17
    %101:i32 = sfill 16 %100
    %102:ctrl, %103:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %99, %101, %16
    %104:ctrl, %105:i32 = load.2 %102, %15
    %106:i32 = sfill 16 %105
    %107:ctrl, %108:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %104, %106, %3
    %109:ctrl, %110:i32 = load.2 %107, %15
    %111:i32 = sfill 16 %110
    %112:ctrl, %113:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %109, %111, %16
    %114:ctrl, %115:i32 = load.2 %112, %15
    %116:i32 = sfill 16 %115
    %117:ctrl, %118:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %114, %116, %11
    %119:ctrl, %120:i32 = load.2 %117, %14
    %121:i32 = sfill 16 %120
    %122:ctrl, %123:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %119, %121, %3
    %124:ctrl, %125:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %122, %17, %18
    %126:ctrl, %127:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %124, %17, %16
    %128:ctrl, %129:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %126, %15, %3
    %130:ctrl, %131:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %128, %15, %16
    %132:ctrl, %133:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %130, %15, %11
    %134:ctrl, %135:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %132, %14, %3
    %136:ctrl, %137:i32 = load.4 %134, %13
    %138:ctrl, %139:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %136, %137, %3
    %140:ctrl, %141:i32 = load.4 %138, %13
    %142:ctrl, %143:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %140, %141, %11
    %144:ctrl, %145:i32 = load.4 %142, %12
    %146:ctrl, %147:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %144, %145, %3
    %148:ctrl, %149:i32 = load.4 %146, %13
    %150:ctrl, %151:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %148, %149, %3
    %152:ctrl, %153:i32 = load.4 %150, %13
    %154:ctrl, %155:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %152, %153, %11
    %156:ctrl, %157:i32 = load.4 %154, %12
    %158:ctrl, %159:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %156, %157, %3
    %160:ctrl, %161:i32 = load.4 %158, %13
    %162:ctrl, %163:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %160, %161, %3
    %164:ctrl, %165:i32 = load.4 %162, %13
    %166:ctrl, %167:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %164, %165, %11
    %168:ctrl, %169:i32 = load.4 %166, %12
    %170:ctrl, %171:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %168, %169, %3
    %172:ctrl, %173:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %170, %13, %3
    %174:ctrl, %175:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %172, %13, %11
    %176:ctrl, %177:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %174, %12, %3
    %178:ctrl, %179:i64 = load.8 %176, %10
    %180:ctrl, %181:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %178, %179, %3
    %182:ctrl, %183:i64 = load.8 %180, %10
    %184:ctrl, %185:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %182, %183, %11
    %186:ctrl, %187:i64 = load.8 %184, %10
    %188:ctrl, %189:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %186, %187, %9
    %190:ctrl, %191:i64 = load.8 %188, %8
    %192:ctrl, %193:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %190, %191, %3
    %194:ctrl, %195:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %192, %10, %3
    %196:ctrl, %197:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %194, %10, %11
    %198:ctrl, %199:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %196, %10, %9
    %200:ctrl, %201:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %198, %8, %3
    %202:i32 = icmp eq %201, %3
    %203:i32 = icmp eq %197, %3
    %204:i32 = icmp eq %193, %3
    %205:i32 = icmp eq %185, %3
    %206:i32 = icmp eq %177, %3
    %207:i32 = icmp eq %171, %7
    %208:i32 = icmp eq %167, %3
    %209:i32 = icmp eq %163, %3
    %210:i32 = icmp eq %155, %3
    %211:i32 = icmp eq %151, %3
    %212:i32 = icmp eq %147, %3
    %213:i32 = icmp eq %135, %3
    %214:i32 = icmp eq %131, %3
    %215:i32 = icmp eq %123, %3
    %216:i32 = icmp eq %113, %3
    %217:i32 = icmp eq %93, %3
    %218:i32 = icmp eq %89, %3
    %219:i32 = icmp eq %81, %3
    %220:i32 = icmp eq %71, %3
    %221:i32 = and %4, %56
    %222:i32 = and %221, %61
    %223:i32 = and %222, %66
    %224:i32 = and %223, %220
    %225:i32 = and %224, %76
    %226:i32 = and %225, %219
    %227:i32 = and %226, %83
    %228:i32 = and %227, %85
    %229:i32 = and %228, %87
    %230:i32 = and %229, %218
    %231:i32 = and %230, %91
    %232:i32 = and %231, %217
    %233:i32 = and %232, %98
    %234:i32 = and %233, %103
    %235:i32 = and %234, %108
    %236:i32 = and %235, %216
    %237:i32 = and %236, %118
    %238:i32 = and %237, %215
    %239:i32 = and %238, %125
    %240:i32 = and %239, %127
    %241:i32 = and %240, %129
    %242:i32 = and %241, %214
    %243:i32 = and %242, %133
    %244:i32 = and %243, %213
    %245:i32 = and %244, %139
    %246:i32 = and %245, %143
    %247:i32 = and %246, %212
    %248:i32 = and %247, %211
    %249:i32 = and %248, %210
    %250:i32 = and %249, %159
    %251:i32 = and %250, %209
    %252:i32 = and %251, %208
    %253:i32 = and %252, %207
    %254:i32 = and %253, %173
    %255:i32 = and %254, %175
    %256:i32 = and %255, %206
    %257:i32 = and %256, %181
    %258:i32 = and %257, %205
    %259:i32 = and %258, %189
    %260:i32 = and %259, %204
    %261:i32 = and %260, %195
    %262:i32 = and %261, %203
    %263:i32 = and %262, %199
    %264:i32 = and %263, %202
    %265:ctrl, %266:ctrl = brcond %200, %264
    %267:ctrl, %268:phisel = region %265
    return %267, %4
    %269:ctrl, %270:phisel = region %266
    return %269, %3
}
