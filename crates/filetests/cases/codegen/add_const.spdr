# run: codegen

func @add_pos64:i64(i64) {
    # check: function `add_pos64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 8d 47 05                     lea rax, [rdi + 5]
    # nextln: 000008: 5d                              pop rbp
    # nextln: 000009: c3                              ret

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 5
    %val:i64 = iadd %a, %b
    return %c, %val
}

func @add_neg64:i64(i64) {
    # check: function `add_neg64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 8d 47 fb                     lea rax, [rdi - 5]
    # nextln: 000008: 5d                              pop rbp
    # nextln: 000009: c3                              ret

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 18446744073709551611
    %val:i64 = iadd %a, %b
    return %c, %val
}

func @add_pos_large64:i64(i64) {
    # check: function `add_pos_large64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: b8 ff ff ff ff                  mov eax, 0xffffffff
    # nextln: 000009: 48 03 c7                        add rax, rdi
    # nextln: 00000c: 5d                              pop rbp
    # nextln: 00000d: c3                              ret

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 4294967295
    %val:i64 = iadd %a, %b
    return %c, %val
}

func @add_neg_large64:i64(i64) {
    # check: function `add_neg_large64`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 b8 01 00 00 00 ff ff ff ff   movabs rax, 0xffffffff00000001
    # nextln: 00000e: 48 03 c7                        add rax, rdi
    # nextln: 000011: 5d                              pop rbp
    # nextln: 000012: c3                              ret

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 18446744069414584321
    %val:i64 = iadd %a, %b
    return %c, %val
}

func @add_pos32:i32(i32) {
    # check: function `add_pos32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 8d 47 05                        lea eax, [rdi + 5]
    # nextln: 000007: 5d                              pop rbp
    # nextln: 000008: c3                              ret

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 5
    %val:i32 = iadd %a, %b
    return %c, %val
}

func @add_neg32:i32(i32) {
    # check: function `add_neg32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 8d 47 fb                        lea eax, [rdi - 5]
    # nextln: 000007: 5d                              pop rbp
    # nextln: 000008: c3                              ret

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 4294967291
    %val:i32 = iadd %a, %b
    return %c, %val
}

func @add_max32:i32(i32) {
    # check: function `add_max32`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 8d 87 ff ff ff 7f               lea eax, [rdi + 0x7fffffff]
    # nextln: 00000a: 5d                              pop rbp
    # nextln: 00000b: c3                              ret

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483647
    %val:i32 = iadd %a, %b
    return %c, %val
}
