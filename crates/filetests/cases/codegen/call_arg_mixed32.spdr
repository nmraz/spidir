# run: codegen

extfunc @large_gpr(i64, i64, i64, i64, i64, i64, i32, f32)
extfunc @large_gpr_xmm(i64, i64, i64, i64, i64, i64, f32, f32, f32, f32, f32, f32, f32, f32, i32, i64, f32)

func @call_large_gpr(i32, i64, f32) {
    # check: function `call_large_gpr`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 50                              push rax
    # nextln: 000005: 57                              push rdi
    # nextln: 000006: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @large_gpr + 0
    # nextln: 000010: 49 89 f1                        mov r9, rsi
    # nextln: 000013: 49 89 f0                        mov r8, rsi
    # nextln: 000016: 48 89 f1                        mov rcx, rsi
    # nextln: 000019: 48 89 f2                        mov rdx, rsi
    # nextln: 00001c: 48 89 f7                        mov rdi, rsi
    # nextln: 00001f: ff d0                           call rax
    # nextln: 000021: 48 83 c4 10                     add rsp, 0x10
    # nextln: 000025: 5d                              pop rbp
    # nextln: 000026: c3                              ret

    %0:ctrl, %1:i32, %2:i64, %3:f32 = entry
    %4:ctrl = call @large_gpr %0, %2, %2, %2, %2, %2, %2, %1, %3
    return %4
}

func @call_large_gpr_xmm(i32, i64, f32) {
    # check: function `call_large_gpr_xmm`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 48 83 ec 20                     sub rsp, 0x20
    # nextln: 000008: 89 3c 24                        mov dword ptr [rsp], edi
    # nextln: 00000b: 48 89 74 24 08                  mov qword ptr [rsp + 8], rsi
    # nextln: 000010: f3 0f 11 44 24 10               movss dword ptr [rsp + 0x10], xmm0
    # nextln: 000016: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @large_gpr_xmm + 0
    # nextln: 000020: 49 89 f1                        mov r9, rsi
    # nextln: 000023: 49 89 f0                        mov r8, rsi
    # nextln: 000026: 48 89 f1                        mov rcx, rsi
    # nextln: 000029: 48 89 f2                        mov rdx, rsi
    # nextln: 00002c: 48 89 f7                        mov rdi, rsi
    # nextln: 00002f: 0f 28 f8                        movaps xmm7, xmm0
    # nextln: 000032: 0f 28 f0                        movaps xmm6, xmm0
    # nextln: 000035: 0f 28 e8                        movaps xmm5, xmm0
    # nextln: 000038: 0f 28 e0                        movaps xmm4, xmm0
    # nextln: 00003b: 0f 28 d8                        movaps xmm3, xmm0
    # nextln: 00003e: 0f 28 d0                        movaps xmm2, xmm0
    # nextln: 000041: 0f 28 c8                        movaps xmm1, xmm0
    # nextln: 000044: ff d0                           call rax
    # nextln: 000046: 48 83 c4 20                     add rsp, 0x20
    # nextln: 00004a: 5d                              pop rbp
    # nextln: 00004b: c3                              ret

    %0:ctrl, %1:i32, %2:i64, %3:f32 = entry
    %4:ctrl = call @large_gpr_xmm %0, %2, %2, %2, %2, %2, %2, %3, %3, %3, %3, %3, %3, %3, %3, %1, %2, %3
    return %4
}
