# run: isel

extfunc @large_gpr(i64, i64, i64, i64, i64, i64, i32, f64)
extfunc @large_gpr_xmm(i64, i64, i64, i64, i64, i64, f64, f64, f64, f64, f64, f64, f64, f64, i32, i64, f64)

func @call_large_gpr(i32, i64, f64) {
    # check: function `call_large_gpr`:
    # nextln:       block0[%1:gpr64($$rdi), %0:gpr64($$rsi), %2:xmm64($$xmm0)]:
    # nextln: 0000:      AddSp(-8)
    # nextln: 0001:      Push %1(reg)[early]
    # nextln: 0002:      %3:gpr64(reg)[late] = FuncAddrAbs(External(extfunc0))
    # nextln: 0003:      CallRm %3(any)[early], %0($$rdi)[early], %0($$rsi)[early], %0($$rdx)[early], %0($$rcx)[early], %0($$r8)[early], %0($$r9)[early], %2($$xmm0)[early] ^($$rax, $$rcx, $$rdx, $$rdi, $$rsi, $$r8, $$r9, $$r10, $$r11, $$xmm0, $$xmm1, $$xmm2, $$xmm3, $$xmm4, $$xmm5, $$xmm6, $$xmm7, $$xmm8, $$xmm9, $$xmm10, $$xmm11, $$xmm12, $$xmm13, $$xmm14, $$xmm15)
    # nextln: 0004:      AddSp(16)
    # nextln: 0005:      Ret

    %0:ctrl, %1:i32, %2:i64, %3:f64 = entry
    %4:ctrl = call @large_gpr %0, %2, %2, %2, %2, %2, %2, %1, %3
    return %4
}

func @call_large_gpr_xmm(i32, i64, f64) {
    # check: function `call_large_gpr_xmm`:
    # nextln:       block0[%2:gpr64($$rdi), %0:gpr64($$rsi), %1:xmm64($$xmm0)]:
    # nextln: 0000:      AddSp(-32)
    # nextln: 0001:      MovMR(S32, [rsp + 0]) %2(reg)[early]
    # nextln: 0002:      MovMR(S64, [rsp + 8]) %0(reg)[early]
    # nextln: 0003:      MovsMR(Double, [rsp + 16]) %1(reg)[early]
    # nextln: 0004:      %3:gpr64(reg)[late] = FuncAddrAbs(External(extfunc1))
    # nextln: 0005:      CallRm %3(any)[early], %0($$rdi)[early], %0($$rsi)[early], %0($$rdx)[early], %0($$rcx)[early], %0($$r8)[early], %0($$r9)[early], %1($$xmm0)[early], %1($$xmm1)[early], %1($$xmm2)[early], %1($$xmm3)[early], %1($$xmm4)[early], %1($$xmm5)[early], %1($$xmm6)[early], %1($$xmm7)[early] ^($$rax, $$rcx, $$rdx, $$rdi, $$rsi, $$r8, $$r9, $$r10, $$r11, $$xmm0, $$xmm1, $$xmm2, $$xmm3, $$xmm4, $$xmm5, $$xmm6, $$xmm7, $$xmm8, $$xmm9, $$xmm10, $$xmm11, $$xmm12, $$xmm13, $$xmm14, $$xmm15)
    # nextln: 0006:      AddSp(32)
    # nextln: 0007:      Ret

    %0:ctrl, %1:i32, %2:i64, %3:f64 = entry
    %4:ctrl = call @large_gpr_xmm %0, %2, %2, %2, %2, %2, %2, %3, %3, %3, %3, %3, %3, %3, %3, %1, %2, %3
    return %4
}
