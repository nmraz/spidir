# run: codegen

func @iota(ptr, i64) {
    # check: function `iota`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 33 c0                           xor eax, eax
    # nextln: 000006: 48 85 f6                        test rsi, rsi
    # nextln: 000009: 0f 84 22 00 00 00               je 0x31
    # nextln: 00000f: 48 89 c2                        mov rdx, rax
    # nextln: 000012: 48 c1 e2 03                     shl rdx, 3
    # nextln: 000016: 48 03 d7                        add rdx, rdi
    # nextln: 000019: 48 8d 48 01                     lea rcx, [rax + 1]
    # nextln: 00001d: 48 89 02                        mov qword ptr [rdx], rax
    # nextln: 000020: 48 3b ce                        cmp rcx, rsi
    # nextln: 000023: 0f 84 08 00 00 00               je 0x31
    # nextln: 000029: 48 89 c8                        mov rax, rcx
    # nextln: 00002c: e9 de ff ff ff                  jmp 0xf
    # nextln: 000031: 5d                              pop rbp
    # nextln: 000032: c3                              ret

    %entry_ctrl:ctrl, %arr:ptr, %n:i64 = entry
    %zero:i64 = iconst 0
    %zerocmp:i32 = icmp eq %n, %zero
    %iszero:ctrl, %isnonzero:ctrl = brcond %entry_ctrl, %zerocmp
    %loopbody:ctrl, %loopphi:phisel = region %isnonzero, %looplatch
    %i:i64 = phi %loopphi, %zero, %inext
    %three:i64 = iconst 3
    %off:i64 = shl %i, %three
    %ptr:ptr = ptroff %arr, %off
    %poststore:ctrl = store.8 %loopbody, %i, %ptr
    %one:i64 = iconst 1
    %inext:i64 = iadd %i, %one
    %donecmp:i32 = icmp eq %inext, %n
    %loopdone:ctrl, %looplatch:ctrl = brcond %poststore, %donecmp
    %exit:ctrl, %exitphi:phisel = region %iszero, %loopdone
    return %exit
}
