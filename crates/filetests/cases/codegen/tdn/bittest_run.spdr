# run: codegen

extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)":i32(ptr, i32)
extfunc @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)":i32(i64, i32)

func @"System.Boolean Tests.BitTest::Run()":i32() {
    # check: function `System.Boolean Tests.BitTest::Run()`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 41 57                           push r15
    # nextln: 000006: 41 56                           push r14
    # nextln: 000008: 41 55                           push r13
    # nextln: 00000a: 41 54                           push r12
    # nextln: 00000c: 53                              push rbx
    # nextln: 00000d: 48 81 ec b8 00 00 00            sub rsp, 0xb8
    # nextln: 000014: 33 c9                           xor ecx, ecx
    # nextln: 000016: 48 8d 84 24 a6 00 00 00         lea rax, [rsp + 0xa6]
    # nextln: 00001e: 48 89 84 24 88 00 00 00         mov qword ptr [rsp + 0x88], rax
    # nextln: 000026: 48 8d 84 24 a0 00 00 00         lea rax, [rsp + 0xa0]
    # nextln: 00002e: 48 89 44 24 58                  mov qword ptr [rsp + 0x58], rax
    # nextln: 000033: 33 c0                           xor eax, eax
    # nextln: 000035: 48 89 e2                        mov rdx, rsp
    # nextln: 000038: 48 89 54 24 20                  mov qword ptr [rsp + 0x20], rdx
    # nextln: 00003d: 48 8d 54 24 08                  lea rdx, [rsp + 8]
    # nextln: 000042: 48 89 54 24 28                  mov qword ptr [rsp + 0x28], rdx
    # nextln: 000047: 48 8d 94 24 98 00 00 00         lea rdx, [rsp + 0x98]
    # nextln: 00004f: 48 89 54 24 40                  mov qword ptr [rsp + 0x40], rdx
    # nextln: 000054: 48 8d 94 24 a2 00 00 00         lea rdx, [rsp + 0xa2]
    # nextln: 00005c: 48 89 54 24 60                  mov qword ptr [rsp + 0x60], rdx
    # nextln: 000061: 48 8d 94 24 9c 00 00 00         lea rdx, [rsp + 0x9c]
    # nextln: 000069: 48 89 54 24 48                  mov qword ptr [rsp + 0x48], rdx
    # nextln: 00006e: 48 8d 94 24 a4 00 00 00         lea rdx, [rsp + 0xa4]
    # nextln: 000076: 48 89 54 24 70                  mov qword ptr [rsp + 0x70], rdx
    # nextln: 00007b: 48 8d bc 24 a7 00 00 00         lea rdi, [rsp + 0xa7]
    # nextln: 000083: 88 84 24 a7 00 00 00            mov byte ptr [rsp + 0xa7], al
    # nextln: 00008a: 88 84 24 a6 00 00 00            mov byte ptr [rsp + 0xa6], al
    # nextln: 000091: 48 8d 94 24 a8 00 00 00         lea rdx, [rsp + 0xa8]
    # nextln: 000099: 48 89 94 24 80 00 00 00         mov qword ptr [rsp + 0x80], rdx
    # nextln: 0000a1: 88 84 24 a8 00 00 00            mov byte ptr [rsp + 0xa8], al
    # nextln: 0000a8: 66 89 84 24 a4 00 00 00         mov word ptr [rsp + 0xa4], ax
    # nextln: 0000b0: 66 89 84 24 a2 00 00 00         mov word ptr [rsp + 0xa2], ax
    # nextln: 0000b8: 66 89 84 24 a0 00 00 00         mov word ptr [rsp + 0xa0], ax
    # nextln: 0000c0: 89 84 24 9c 00 00 00            mov dword ptr [rsp + 0x9c], eax
    # nextln: 0000c7: 89 84 24 98 00 00 00            mov dword ptr [rsp + 0x98], eax
    # nextln: 0000ce: 48 89 4c 24 08                  mov qword ptr [rsp + 8], rcx
    # nextln: 0000d3: 48 89 0c 24                     mov qword ptr [rsp], rcx
    # nextln: 0000d7: bb 07 00 00 00                  mov ebx, 7
    # nextln: 0000dc: b9 08 00 00 00                  mov ecx, 8
    # nextln: 0000e1: be 01 00 00 00                  mov esi, 1
    # nextln: 0000e6: 48 c7 44 24 38 20 00 00 00      mov qword ptr [rsp + 0x38], 0x20
    # nextln: 0000ef: 48 c7 44 24 78 0f 00 00 00      mov qword ptr [rsp + 0x78], 0xf
    # nextln: 0000f8: 49 89 f8                        mov r8, rdi
    # nextln: 0000fb: 48 c7 44 24 68 10 00 00 00      mov qword ptr [rsp + 0x68], 0x10
    # nextln: 000104: 48 c7 44 24 50 03 00 00 00      mov qword ptr [rsp + 0x50], 3
    # nextln: 00010d: 48 c7 44 24 30 40 00 00 00      mov qword ptr [rsp + 0x30], 0x40
    # nextln: 000116: bf 02 00 00 00                  mov edi, 2
    # nextln: 00011b: 4c 63 d6                        movsxd r10, esi
    # nextln: 00011e: 4c 63 df                        movsxd r11, edi
    # nextln: 000121: ba 80 ff ff ff                  mov edx, 0xffffff80
    # nextln: 000126: 88 94 24 a7 00 00 00            mov byte ptr [rsp + 0xa7], dl
    # nextln: 00012d: ba 00 80 ff ff                  mov edx, 0xffff8000
    # nextln: 000132: 40 88 b4 24 a6 00 00 00         mov byte ptr [rsp + 0xa6], sil
    # nextln: 00013a: 40 88 bc 24 a8 00 00 00         mov byte ptr [rsp + 0xa8], dil
    # nextln: 000142: 66 89 94 24 a4 00 00 00         mov word ptr [rsp + 0xa4], dx
    # nextln: 00014a: 66 89 b4 24 a2 00 00 00         mov word ptr [rsp + 0xa2], si
    # nextln: 000152: 66 89 bc 24 a0 00 00 00         mov word ptr [rsp + 0xa0], di
    # nextln: 00015a: 89 b4 24 9c 00 00 00            mov dword ptr [rsp + 0x9c], esi
    # nextln: 000161: 89 bc 24 98 00 00 00            mov dword ptr [rsp + 0x98], edi
    # nextln: 000168: 4c 89 54 24 08                  mov qword ptr [rsp + 8], r10
    # nextln: 00016d: 4c 89 1c 24                     mov qword ptr [rsp], r11
    # nextln: 000171: 0f b6 94 24 a7 00 00 00         movzx edx, byte ptr [rsp + 0xa7]
    # nextln: 000179: 0f be fa                        movsx edi, dl
    # nextln: 00017c: 48 ba 00 00 00 00 00 00 00 00   movabs rdx, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000186: 49 89 cf                        mov r15, rcx
    # nextln: 000189: 49 89 f5                        mov r13, rsi
    # nextln: 00018c: 49 89 c4                        mov r12, rax
    # nextln: 00018f: 4d 89 c6                        mov r14, r8
    # nextln: 000192: 48 89 de                        mov rsi, rbx
    # nextln: 000195: ff d2                           call rdx
    # nextln: 000197: 4c 89 ea                        mov rdx, r13
    # nextln: 00019a: 4d 89 f8                        mov r8, r15
    # nextln: 00019d: 4c 89 e6                        mov rsi, r12
    # nextln: 0001a0: 4c 89 f1                        mov rcx, r14
    # nextln: 0001a3: 44 23 e8                        and r13d, eax
    # nextln: 0001a6: 0f b6 84 24 a7 00 00 00         movzx eax, byte ptr [rsp + 0xa7]
    # nextln: 0001ae: 0f be f8                        movsx edi, al
    # nextln: 0001b1: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001bb: 49 89 dc                        mov r12, rbx
    # nextln: 0001be: 48 89 54 24 18                  mov qword ptr [rsp + 0x18], rdx
    # nextln: 0001c3: 4c 89 c3                        mov rbx, r8
    # nextln: 0001c6: 49 89 f7                        mov r15, rsi
    # nextln: 0001c9: 48 89 de                        mov rsi, rbx
    # nextln: 0001cc: ff d0                           call rax
    # nextln: 0001ce: 44 23 e8                        and r13d, eax
    # nextln: 0001d1: 4c 89 e0                        mov rax, r12
    # nextln: 0001d4: 4c 89 f1                        mov rcx, r14
    # nextln: 0001d7: 48 89 da                        mov rdx, rbx
    # nextln: 0001da: 4c 89 fb                        mov rbx, r15
    # nextln: 0001dd: 0f b6 bc 24 a6 00 00 00         movzx edi, byte ptr [rsp + 0xa6]
    # nextln: 0001e5: 40 0f be ff                     movsx edi, dil
    # nextln: 0001e9: 49 b8 00 00 00 00 00 00 00 00   movabs r8, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001f3: 49 89 d7                        mov r15, rdx
    # nextln: 0001f6: 48 89 de                        mov rsi, rbx
    # nextln: 0001f9: 41 ff d0                        call r8
    # nextln: 0001fc: 44 23 e8                        and r13d, eax
    # nextln: 0001ff: 4c 89 f8                        mov rax, r15
    # nextln: 000202: 0f b6 8c 24 a6 00 00 00         movzx ecx, byte ptr [rsp + 0xa6]
    # nextln: 00020a: 0f be f9                        movsx edi, cl
    # nextln: 00020d: 48 b9 00 00 00 00 00 00 00 00   movabs rcx, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000217: 49 89 df                        mov r15, rbx
    # nextln: 00021a: 48 89 c3                        mov rbx, rax
    # nextln: 00021d: 48 89 de                        mov rsi, rbx
    # nextln: 000220: ff d1                           call rcx
    # nextln: 000222: 33 c9                           xor ecx, ecx
    # nextln: 000224: 85 c0                           test eax, eax
    # nextln: 000226: 0f 94 c1                        sete cl
    # nextln: 000229: 44 23 e9                        and r13d, ecx
    # nextln: 00022c: 48 89 9c 24 90 00 00 00         mov qword ptr [rsp + 0x90], rbx
    # nextln: 000234: 0f b6 84 24 a6 00 00 00         movzx eax, byte ptr [rsp + 0xa6]
    # nextln: 00023c: 0f be f8                        movsx edi, al
    # nextln: 00023f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000249: 4c 89 e3                        mov rbx, r12
    # nextln: 00024c: 4d 89 fc                        mov r12, r15
    # nextln: 00024f: 48 8b 74 24 38                  mov rsi, qword ptr [rsp + 0x38]
    # nextln: 000254: ff d0                           call rax
    # nextln: 000256: 44 23 e8                        and r13d, eax
    # nextln: 000259: 4d 89 f7                        mov r15, r14
    # nextln: 00025c: 49 89 de                        mov r14, rbx
    # nextln: 00025f: 0f b6 84 24 a8 00 00 00         movzx eax, byte ptr [rsp + 0xa8]
    # nextln: 000267: 0f be f8                        movsx edi, al
    # nextln: 00026a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000274: 48 8b 9c 24 88 00 00 00         mov rbx, qword ptr [rsp + 0x88]
    # nextln: 00027c: 4c 89 e6                        mov rsi, r12
    # nextln: 00027f: ff d0                           call rax
    # nextln: 000281: 33 c9                           xor ecx, ecx
    # nextln: 000283: 85 c0                           test eax, eax
    # nextln: 000285: 0f 94 c1                        sete cl
    # nextln: 000288: 44 23 e9                        and r13d, ecx
    # nextln: 00028b: 4c 89 64 24 10                  mov qword ptr [rsp + 0x10], r12
    # nextln: 000290: 4c 8b a4 24 90 00 00 00         mov r12, qword ptr [rsp + 0x90]
    # nextln: 000298: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002a2: 4c 89 f6                        mov rsi, r14
    # nextln: 0002a5: 4c 89 ff                        mov rdi, r15
    # nextln: 0002a8: ff d0                           call rax
    # nextln: 0002aa: 4c 89 ff                        mov rdi, r15
    # nextln: 0002ad: 44 23 e8                        and r13d, eax
    # nextln: 0002b0: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002ba: 4c 89 e6                        mov rsi, r12
    # nextln: 0002bd: ff d0                           call rax
    # nextln: 0002bf: 44 23 e8                        and r13d, eax
    # nextln: 0002c2: 4c 8b b4 24 80 00 00 00         mov r14, qword ptr [rsp + 0x80]
    # nextln: 0002ca: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002d4: 4c 8b 7c 24 10                  mov r15, qword ptr [rsp + 0x10]
    # nextln: 0002d9: 48 89 df                        mov rdi, rbx
    # nextln: 0002dc: 4c 89 fe                        mov rsi, r15
    # nextln: 0002df: ff d0                           call rax
    # nextln: 0002e1: 44 23 e8                        and r13d, eax
    # nextln: 0002e4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002ee: 48 89 df                        mov rdi, rbx
    # nextln: 0002f1: 4c 89 e6                        mov rsi, r12
    # nextln: 0002f4: ff d0                           call rax
    # nextln: 0002f6: 4c 89 f9                        mov rcx, r15
    # nextln: 0002f9: 33 d2                           xor edx, edx
    # nextln: 0002fb: 85 c0                           test eax, eax
    # nextln: 0002fd: 0f 94 c2                        sete dl
    # nextln: 000300: 44 23 ea                        and r13d, edx
    # nextln: 000303: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00030d: 4c 8b 64 24 38                  mov r12, qword ptr [rsp + 0x38]
    # nextln: 000312: 48 89 df                        mov rdi, rbx
    # nextln: 000315: 4c 89 e6                        mov rsi, r12
    # nextln: 000318: ff d0                           call rax
    # nextln: 00031a: 4c 89 fb                        mov rbx, r15
    # nextln: 00031d: 44 23 e8                        and r13d, eax
    # nextln: 000320: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00032a: 4c 89 f7                        mov rdi, r14
    # nextln: 00032d: 48 89 de                        mov rsi, rbx
    # nextln: 000330: ff d0                           call rax
    # nextln: 000332: 33 c9                           xor ecx, ecx
    # nextln: 000334: 85 c0                           test eax, eax
    # nextln: 000336: 0f 94 c1                        sete cl
    # nextln: 000339: 44 23 e9                        and r13d, ecx
    # nextln: 00033c: 0f b7 84 24 a4 00 00 00         movzx eax, word ptr [rsp + 0xa4]
    # nextln: 000344: 0f bf f8                        movsx edi, ax
    # nextln: 000347: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000351: 48 8b 5c 24 78                  mov rbx, qword ptr [rsp + 0x78]
    # nextln: 000356: 4d 89 e6                        mov r14, r12
    # nextln: 000359: 4c 8b 64 24 68                  mov r12, qword ptr [rsp + 0x68]
    # nextln: 00035e: 48 89 de                        mov rsi, rbx
    # nextln: 000361: ff d0                           call rax
    # nextln: 000363: 44 23 e8                        and r13d, eax
    # nextln: 000366: 4c 89 f9                        mov rcx, r15
    # nextln: 000369: 4c 89 f0                        mov rax, r14
    # nextln: 00036c: 0f b7 94 24 a4 00 00 00         movzx edx, word ptr [rsp + 0xa4]
    # nextln: 000374: 0f bf fa                        movsx edi, dx
    # nextln: 000377: 48 ba 00 00 00 00 00 00 00 00   movabs rdx, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000381: 48 89 cb                        mov rbx, rcx
    # nextln: 000384: 4c 89 e6                        mov rsi, r12
    # nextln: 000387: ff d2                           call rdx
    # nextln: 000389: 44 23 e8                        and r13d, eax
    # nextln: 00038c: 4c 89 f1                        mov rcx, r14
    # nextln: 00038f: 0f b7 84 24 a2 00 00 00         movzx eax, word ptr [rsp + 0xa2]
    # nextln: 000397: 0f bf f8                        movsx edi, ax
    # nextln: 00039a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0003a4: 49 89 cf                        mov r15, rcx
    # nextln: 0003a7: 48 89 de                        mov rsi, rbx
    # nextln: 0003aa: ff d0                           call rax
    # nextln: 0003ac: 44 23 e8                        and r13d, eax
    # nextln: 0003af: 4c 89 f8                        mov rax, r15
    # nextln: 0003b2: 49 89 df                        mov r15, rbx
    # nextln: 0003b5: 48 89 c3                        mov rbx, rax
    # nextln: 0003b8: 0f b7 84 24 a2 00 00 00         movzx eax, word ptr [rsp + 0xa2]
    # nextln: 0003c0: 0f bf f8                        movsx edi, ax
    # nextln: 0003c3: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0003cd: 4c 89 e6                        mov rsi, r12
    # nextln: 0003d0: ff d0                           call rax
    # nextln: 0003d2: 33 c9                           xor ecx, ecx
    # nextln: 0003d4: 85 c0                           test eax, eax
    # nextln: 0003d6: 0f 94 c1                        sete cl
    # nextln: 0003d9: 44 23 e9                        and r13d, ecx
    # nextln: 0003dc: 0f b7 84 24 a2 00 00 00         movzx eax, word ptr [rsp + 0xa2]
    # nextln: 0003e4: 0f bf f8                        movsx edi, ax
    # nextln: 0003e7: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0003f1: 4d 89 fe                        mov r14, r15
    # nextln: 0003f4: 4c 8b 7c 24 60                  mov r15, qword ptr [rsp + 0x60]
    # nextln: 0003f9: 48 89 de                        mov rsi, rbx
    # nextln: 0003fc: ff d0                           call rax
    # nextln: 0003fe: 44 23 e8                        and r13d, eax
    # nextln: 000401: 4c 89 f3                        mov rbx, r14
    # nextln: 000404: 4c 8b 74 24 78                  mov r14, qword ptr [rsp + 0x78]
    # nextln: 000409: 0f b7 84 24 a0 00 00 00         movzx eax, word ptr [rsp + 0xa0]
    # nextln: 000411: 0f bf f8                        movsx edi, ax
    # nextln: 000414: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00041e: 48 89 de                        mov rsi, rbx
    # nextln: 000421: ff d0                           call rax
    # nextln: 000423: 33 c9                           xor ecx, ecx
    # nextln: 000425: 85 c0                           test eax, eax
    # nextln: 000427: 0f 94 c1                        sete cl
    # nextln: 00042a: 44 23 e9                        and r13d, ecx
    # nextln: 00042d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000437: 48 8b 7c 24 70                  mov rdi, qword ptr [rsp + 0x70]
    # nextln: 00043c: 4c 89 f6                        mov rsi, r14
    # nextln: 00043f: ff d0                           call rax
    # nextln: 000441: 44 23 e8                        and r13d, eax
    # nextln: 000444: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 00044e: 48 8b 7c 24 70                  mov rdi, qword ptr [rsp + 0x70]
    # nextln: 000453: 4c 89 e6                        mov rsi, r12
    # nextln: 000456: ff d0                           call rax
    # nextln: 000458: 44 23 e8                        and r13d, eax
    # nextln: 00045b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000465: 4c 89 ff                        mov rdi, r15
    # nextln: 000468: 48 89 de                        mov rsi, rbx
    # nextln: 00046b: ff d0                           call rax
    # nextln: 00046d: 44 23 e8                        and r13d, eax
    # nextln: 000470: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 00047a: 4c 89 e6                        mov rsi, r12
    # nextln: 00047d: 4c 89 ff                        mov rdi, r15
    # nextln: 000480: ff d0                           call rax
    # nextln: 000482: 4c 8b 64 24 58                  mov r12, qword ptr [rsp + 0x58]
    # nextln: 000487: 33 c9                           xor ecx, ecx
    # nextln: 000489: 85 c0                           test eax, eax
    # nextln: 00048b: 0f 94 c1                        sete cl
    # nextln: 00048e: 44 23 e9                        and r13d, ecx
    # nextln: 000491: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 00049b: 4c 8b 74 24 38                  mov r14, qword ptr [rsp + 0x38]
    # nextln: 0004a0: 4c 89 f6                        mov rsi, r14
    # nextln: 0004a3: 4c 89 ff                        mov rdi, r15
    # nextln: 0004a6: ff d0                           call rax
    # nextln: 0004a8: 4c 8b 7c 24 48                  mov r15, qword ptr [rsp + 0x48]
    # nextln: 0004ad: 44 23 e8                        and r13d, eax
    # nextln: 0004b0: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0004ba: 4c 89 e7                        mov rdi, r12
    # nextln: 0004bd: 48 89 de                        mov rsi, rbx
    # nextln: 0004c0: ff d0                           call rax
    # nextln: 0004c2: 4c 8b 64 24 50                  mov r12, qword ptr [rsp + 0x50]
    # nextln: 0004c7: 33 c9                           xor ecx, ecx
    # nextln: 0004c9: 85 c0                           test eax, eax
    # nextln: 0004cb: 0f 94 c1                        sete cl
    # nextln: 0004ce: 44 23 e9                        and r13d, ecx
    # nextln: 0004d1: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 0004d8: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 0004e2: 48 89 de                        mov rsi, rbx
    # nextln: 0004e5: ff d0                           call rax
    # nextln: 0004e7: 44 23 e8                        and r13d, eax
    # nextln: 0004ea: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 0004f1: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 0004fb: 4c 89 f6                        mov rsi, r14
    # nextln: 0004fe: ff d0                           call rax
    # nextln: 000500: 44 23 e8                        and r13d, eax
    # nextln: 000503: 8b bc 24 98 00 00 00            mov edi, dword ptr [rsp + 0x98]
    # nextln: 00050a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000514: 48 89 de                        mov rsi, rbx
    # nextln: 000517: ff d0                           call rax
    # nextln: 000519: 33 c9                           xor ecx, ecx
    # nextln: 00051b: 85 c0                           test eax, eax
    # nextln: 00051d: 0f 94 c1                        sete cl
    # nextln: 000520: 44 23 e9                        and r13d, ecx
    # nextln: 000523: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 00052a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 000534: 48 89 de                        mov rsi, rbx
    # nextln: 000537: ff d0                           call rax
    # nextln: 000539: 33 c9                           xor ecx, ecx
    # nextln: 00053b: 85 c0                           test eax, eax
    # nextln: 00053d: 0f 94 c1                        sete cl
    # nextln: 000540: 44 23 e9                        and r13d, ecx
    # nextln: 000543: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 00054a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 000554: 4c 89 f6                        mov rsi, r14
    # nextln: 000557: ff d0                           call rax
    # nextln: 000559: 33 c9                           xor ecx, ecx
    # nextln: 00055b: 85 c0                           test eax, eax
    # nextln: 00055d: 0f 94 c1                        sete cl
    # nextln: 000560: 44 23 e9                        and r13d, ecx
    # nextln: 000563: 8b bc 24 98 00 00 00            mov edi, dword ptr [rsp + 0x98]
    # nextln: 00056a: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 000574: 48 89 de                        mov rsi, rbx
    # nextln: 000577: ff d0                           call rax
    # nextln: 000579: 44 23 e8                        and r13d, eax
    # nextln: 00057c: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 000583: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 00058d: 48 89 de                        mov rsi, rbx
    # nextln: 000590: ff d0                           call rax
    # nextln: 000592: 33 c9                           xor ecx, ecx
    # nextln: 000594: 85 c0                           test eax, eax
    # nextln: 000596: 0f 94 c1                        sete cl
    # nextln: 000599: 44 23 e9                        and r13d, ecx
    # nextln: 00059c: 8b bc 24 9c 00 00 00            mov edi, dword ptr [rsp + 0x9c]
    # nextln: 0005a3: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 0005ad: 4c 89 f6                        mov rsi, r14
    # nextln: 0005b0: ff d0                           call rax
    # nextln: 0005b2: 33 c9                           xor ecx, ecx
    # nextln: 0005b4: 85 c0                           test eax, eax
    # nextln: 0005b6: 0f 94 c1                        sete cl
    # nextln: 0005b9: 44 23 e9                        and r13d, ecx
    # nextln: 0005bc: 8b bc 24 98 00 00 00            mov edi, dword ptr [rsp + 0x98]
    # nextln: 0005c3: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 0005cd: 48 89 de                        mov rsi, rbx
    # nextln: 0005d0: ff d0                           call rax
    # nextln: 0005d2: 33 c9                           xor ecx, ecx
    # nextln: 0005d4: 41 3b c4                        cmp eax, r12d
    # nextln: 0005d7: 0f 94 c1                        sete cl
    # nextln: 0005da: 44 23 e9                        and r13d, ecx
    # nextln: 0005dd: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 0005e7: 48 89 de                        mov rsi, rbx
    # nextln: 0005ea: 4c 89 ff                        mov rdi, r15
    # nextln: 0005ed: ff d0                           call rax
    # nextln: 0005ef: 44 23 e8                        and r13d, eax
    # nextln: 0005f2: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 0005fc: 4c 89 ff                        mov rdi, r15
    # nextln: 0005ff: 4c 89 f6                        mov rsi, r14
    # nextln: 000602: ff d0                           call rax
    # nextln: 000604: 48 8b 7c 24 40                  mov rdi, qword ptr [rsp + 0x40]
    # nextln: 000609: 4c 8b 7c 24 28                  mov r15, qword ptr [rsp + 0x28]
    # nextln: 00060e: 44 23 e8                        and r13d, eax
    # nextln: 000611: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00061b: 4c 8b 64 24 30                  mov r12, qword ptr [rsp + 0x30]
    # nextln: 000620: 48 89 de                        mov rsi, rbx
    # nextln: 000623: ff d0                           call rax
    # nextln: 000625: 33 c9                           xor ecx, ecx
    # nextln: 000627: 85 c0                           test eax, eax
    # nextln: 000629: 0f 94 c1                        sete cl
    # nextln: 00062c: 44 23 e9                        and r13d, ecx
    # nextln: 00062f: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 000634: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 00063e: 48 89 de                        mov rsi, rbx
    # nextln: 000641: ff d0                           call rax
    # nextln: 000643: 44 23 e8                        and r13d, eax
    # nextln: 000646: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 00064b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 000655: 4c 89 f6                        mov rsi, r14
    # nextln: 000658: ff d0                           call rax
    # nextln: 00065a: 33 c9                           xor ecx, ecx
    # nextln: 00065c: 85 c0                           test eax, eax
    # nextln: 00065e: 0f 94 c1                        sete cl
    # nextln: 000661: 44 23 e9                        and r13d, ecx
    # nextln: 000664: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 000669: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 000673: 4c 89 e6                        mov rsi, r12
    # nextln: 000676: ff d0                           call rax
    # nextln: 000678: 44 23 e8                        and r13d, eax
    # nextln: 00067b: 48 8b 3c 24                     mov rdi, qword ptr [rsp]
    # nextln: 00067f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 000689: 48 89 de                        mov rsi, rbx
    # nextln: 00068c: ff d0                           call rax
    # nextln: 00068e: 33 c9                           xor ecx, ecx
    # nextln: 000690: 85 c0                           test eax, eax
    # nextln: 000692: 0f 94 c1                        sete cl
    # nextln: 000695: 44 23 e9                        and r13d, ecx
    # nextln: 000698: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 0006a2: 48 89 de                        mov rsi, rbx
    # nextln: 0006a5: 4c 89 ff                        mov rdi, r15
    # nextln: 0006a8: ff d0                           call rax
    # nextln: 0006aa: 44 23 e8                        and r13d, eax
    # nextln: 0006ad: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 0006b7: 4c 89 ff                        mov rdi, r15
    # nextln: 0006ba: 4c 89 f6                        mov rsi, r14
    # nextln: 0006bd: ff d0                           call rax
    # nextln: 0006bf: 4c 8b 74 24 20                  mov r14, qword ptr [rsp + 0x20]
    # nextln: 0006c4: 4c 89 e6                        mov rsi, r12
    # nextln: 0006c7: 49 89 c4                        mov r12, rax
    # nextln: 0006ca: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 0006d4: 4c 89 ff                        mov rdi, r15
    # nextln: 0006d7: ff d0                           call rax
    # nextln: 0006d9: 4c 8b 7c 24 18                  mov r15, qword ptr [rsp + 0x18]
    # nextln: 0006de: 33 c9                           xor ecx, ecx
    # nextln: 0006e0: 45 85 e4                        test r12d, r12d
    # nextln: 0006e3: 0f 94 c1                        sete cl
    # nextln: 0006e6: 44 23 e9                        and r13d, ecx
    # nextln: 0006e9: 44 23 e8                        and r13d, eax
    # nextln: 0006ec: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 0006f6: 4c 89 f7                        mov rdi, r14
    # nextln: 0006f9: 48 89 de                        mov rsi, rbx
    # nextln: 0006fc: ff d0                           call rax
    # nextln: 0006fe: 33 c9                           xor ecx, ecx
    # nextln: 000700: 85 c0                           test eax, eax
    # nextln: 000702: 0f 94 c1                        sete cl
    # nextln: 000705: 44 23 e9                        and r13d, ecx
    # nextln: 000708: 45 85 ed                        test r13d, r13d
    # nextln: 00070b: 0f 84 15 00 00 00               je 0x726
    # nextln: 000711: 4c 89 f8                        mov rax, r15
    # nextln: 000714: 48 81 c4 b8 00 00 00            add rsp, 0xb8
    # nextln: 00071b: 5b                              pop rbx
    # nextln: 00071c: 41 5c                           pop r12
    # nextln: 00071e: 41 5d                           pop r13
    # nextln: 000720: 41 5e                           pop r14
    # nextln: 000722: 41 5f                           pop r15
    # nextln: 000724: 5d                              pop rbp
    # nextln: 000725: c3                              ret
    # nextln: 000726: 48 89 d8                        mov rax, rbx
    # nextln: 000729: 48 81 c4 b8 00 00 00            add rsp, 0xb8
    # nextln: 000730: 5b                              pop rbx
    # nextln: 000731: 41 5c                           pop r12
    # nextln: 000733: 41 5d                           pop r13
    # nextln: 000735: 41 5e                           pop r14
    # nextln: 000737: 41 5f                           pop r15
    # nextln: 000739: 5d                              pop rbp
    # nextln: 00073a: c3                              ret

    %0:ctrl = entry
    %1:ctrl, %2:phisel = region %0
    %3:i32 = iconst 0
    %4:i32 = iconst 1
    %5:i64 = iext %4
    %6:i64 = sfill 32 %5
    %7:i32 = iconst 3
    %8:ptr = stackslot 8:8
    %9:i32 = iconst 64
    %10:ptr = stackslot 8:8
    %11:i32 = iconst 32
    %12:ptr = stackslot 4:4
    %13:ptr = stackslot 4:4
    %14:ptr = stackslot 2:2
    %15:ptr = stackslot 2:2
    %16:i32 = iconst 16
    %17:ptr = stackslot 2:2
    %18:i32 = iconst 15
    %19:ptr = stackslot 1:1
    %20:ptr = stackslot 1:1
    %21:i32 = iconst 8
    %22:ptr = stackslot 1:1
    %23:ctrl = store.1 %1, %3, %22
    %24:ctrl = store.1 %23, %3, %20
    %25:ctrl = store.1 %24, %3, %19
    %26:ctrl = store.2 %25, %3, %17
    %27:ctrl = store.2 %26, %3, %15
    %28:ctrl = store.2 %27, %3, %14
    %29:ctrl = store.4 %28, %3, %13
    %30:ctrl = store.4 %29, %3, %12
    %31:i32 = iconst 7
    %32:i32 = iconst 2
    %33:i64 = iext %32
    %34:i64 = sfill 32 %33
    %35:i32 = iconst 4294934528
    %36:i32 = iconst 4294967168
    %37:i64 = iconst 0
    %38:ctrl = store.8 %30, %37, %10
    %39:ctrl = store.8 %38, %37, %8
    %40:ctrl, %41:phisel = region %39
    %42:ctrl = store.1 %40, %36, %22
    %43:ctrl = store.1 %42, %4, %20
    %44:ctrl = store.1 %43, %32, %19
    %45:ctrl = store.2 %44, %35, %17
    %46:ctrl = store.2 %45, %4, %15
    %47:ctrl = store.2 %46, %32, %14
    %48:ctrl = store.4 %47, %4, %13
    %49:ctrl = store.4 %48, %32, %12
    %50:ctrl = store.8 %49, %6, %10
    %51:ctrl = store.8 %50, %34, %8
    %52:ctrl, %53:i32 = load.1 %51, %22
    %54:i32 = sfill 8 %53
    %55:ctrl, %56:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %52, %54, %31
    %57:ctrl, %58:i32 = load.1 %55, %22
    %59:i32 = sfill 8 %58
    %60:ctrl, %61:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %57, %59, %21
    %62:ctrl, %63:i32 = load.1 %60, %20
    %64:i32 = sfill 8 %63
    %65:ctrl, %66:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %62, %64, %3
    %67:ctrl, %68:i32 = load.1 %65, %20
    %69:i32 = sfill 8 %68
    %70:ctrl, %71:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %67, %69, %21
    %72:ctrl, %73:i32 = load.1 %70, %20
    %74:i32 = sfill 8 %73
    %75:ctrl, %76:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %72, %74, %11
    %77:ctrl, %78:i32 = load.1 %75, %19
    %79:i32 = sfill 8 %78
    %80:ctrl, %81:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %77, %79, %3
    %82:ctrl, %83:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %80, %22, %31
    %84:ctrl, %85:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %82, %22, %21
    %86:ctrl, %87:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %84, %20, %3
    %88:ctrl, %89:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %86, %20, %21
    %90:ctrl, %91:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %88, %20, %11
    %92:ctrl, %93:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %90, %19, %3
    %94:ctrl, %95:i32 = load.2 %92, %17
    %96:i32 = sfill 16 %95
    %97:ctrl, %98:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %94, %96, %18
    %99:ctrl, %100:i32 = load.2 %97, %17
    %101:i32 = sfill 16 %100
    %102:ctrl, %103:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %99, %101, %16
    %104:ctrl, %105:i32 = load.2 %102, %15
    %106:i32 = sfill 16 %105
    %107:ctrl, %108:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %104, %106, %3
    %109:ctrl, %110:i32 = load.2 %107, %15
    %111:i32 = sfill 16 %110
    %112:ctrl, %113:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %109, %111, %16
    %114:ctrl, %115:i32 = load.2 %112, %15
    %116:i32 = sfill 16 %115
    %117:ctrl, %118:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %114, %116, %11
    %119:ctrl, %120:i32 = load.2 %117, %14
    %121:i32 = sfill 16 %120
    %122:ctrl, %123:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %119, %121, %3
    %124:ctrl, %125:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %122, %17, %18
    %126:ctrl, %127:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %124, %17, %16
    %128:ctrl, %129:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %126, %15, %3
    %130:ctrl, %131:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %128, %15, %16
    %132:ctrl, %133:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %130, %15, %11
    %134:ctrl, %135:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %132, %14, %3
    %136:ctrl, %137:i32 = load.4 %134, %13
    %138:ctrl, %139:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %136, %137, %3
    %140:ctrl, %141:i32 = load.4 %138, %13
    %142:ctrl, %143:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %140, %141, %11
    %144:ctrl, %145:i32 = load.4 %142, %12
    %146:ctrl, %147:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %144, %145, %3
    %148:ctrl, %149:i32 = load.4 %146, %13
    %150:ctrl, %151:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %148, %149, %3
    %152:ctrl, %153:i32 = load.4 %150, %13
    %154:ctrl, %155:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %152, %153, %11
    %156:ctrl, %157:i32 = load.4 %154, %12
    %158:ctrl, %159:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %156, %157, %3
    %160:ctrl, %161:i32 = load.4 %158, %13
    %162:ctrl, %163:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %160, %161, %3
    %164:ctrl, %165:i32 = load.4 %162, %13
    %166:ctrl, %167:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %164, %165, %11
    %168:ctrl, %169:i32 = load.4 %166, %12
    %170:ctrl, %171:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %168, %169, %3
    %172:ctrl, %173:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %170, %13, %3
    %174:ctrl, %175:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %172, %13, %11
    %176:ctrl, %177:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %174, %12, %3
    %178:ctrl, %179:i64 = load.8 %176, %10
    %180:ctrl, %181:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %178, %179, %3
    %182:ctrl, %183:i64 = load.8 %180, %10
    %184:ctrl, %185:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %182, %183, %11
    %186:ctrl, %187:i64 = load.8 %184, %10
    %188:ctrl, %189:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %186, %187, %9
    %190:ctrl, %191:i64 = load.8 %188, %8
    %192:ctrl, %193:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %190, %191, %3
    %194:ctrl, %195:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %192, %10, %3
    %196:ctrl, %197:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %194, %10, %11
    %198:ctrl, %199:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %196, %10, %9
    %200:ctrl, %201:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %198, %8, %3
    %202:i32 = icmp eq %201, %3
    %203:i32 = icmp eq %197, %3
    %204:i32 = icmp eq %193, %3
    %205:i32 = icmp eq %185, %3
    %206:i32 = icmp eq %177, %3
    %207:i32 = icmp eq %171, %7
    %208:i32 = icmp eq %167, %3
    %209:i32 = icmp eq %163, %3
    %210:i32 = icmp eq %155, %3
    %211:i32 = icmp eq %151, %3
    %212:i32 = icmp eq %147, %3
    %213:i32 = icmp eq %135, %3
    %214:i32 = icmp eq %131, %3
    %215:i32 = icmp eq %123, %3
    %216:i32 = icmp eq %113, %3
    %217:i32 = icmp eq %93, %3
    %218:i32 = icmp eq %89, %3
    %219:i32 = icmp eq %81, %3
    %220:i32 = icmp eq %71, %3
    %221:i32 = and %4, %56
    %222:i32 = and %221, %61
    %223:i32 = and %222, %66
    %224:i32 = and %223, %220
    %225:i32 = and %224, %76
    %226:i32 = and %225, %219
    %227:i32 = and %226, %83
    %228:i32 = and %227, %85
    %229:i32 = and %228, %87
    %230:i32 = and %229, %218
    %231:i32 = and %230, %91
    %232:i32 = and %231, %217
    %233:i32 = and %232, %98
    %234:i32 = and %233, %103
    %235:i32 = and %234, %108
    %236:i32 = and %235, %216
    %237:i32 = and %236, %118
    %238:i32 = and %237, %215
    %239:i32 = and %238, %125
    %240:i32 = and %239, %127
    %241:i32 = and %240, %129
    %242:i32 = and %241, %214
    %243:i32 = and %242, %133
    %244:i32 = and %243, %213
    %245:i32 = and %244, %139
    %246:i32 = and %245, %143
    %247:i32 = and %246, %212
    %248:i32 = and %247, %211
    %249:i32 = and %248, %210
    %250:i32 = and %249, %159
    %251:i32 = and %250, %209
    %252:i32 = and %251, %208
    %253:i32 = and %252, %207
    %254:i32 = and %253, %173
    %255:i32 = and %254, %175
    %256:i32 = and %255, %206
    %257:i32 = and %256, %181
    %258:i32 = and %257, %205
    %259:i32 = and %258, %189
    %260:i32 = and %259, %204
    %261:i32 = and %260, %195
    %262:i32 = and %261, %203
    %263:i32 = and %262, %199
    %264:i32 = and %263, %202
    %265:ctrl, %266:ctrl = brcond %200, %264
    %267:ctrl, %268:phisel = region %265
    return %267, %4
    %269:ctrl, %270:phisel = region %266
    return %269, %3
}
