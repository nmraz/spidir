# run: loop-forest

func @"System.Int32 System.Test::Loop2(System.Int32, System.Int32, System.Int32)":i32(ptr, i32, i32, i32) {
    # check: function `System.Int32 System.Test::Loop2(System.Int32, System.Int32, System.Int32)`:
    # nextln: %0:ctrl, %1:ptr, %2:i32, %3:i32, %4:i32 = entry         # x
    # nextln: %5:ctrl, %6:phisel = region %0          # x
    # nextln: %7:ptr = stackslot 4:4                  # x
    # nextln: %8:ptr = stackslot 4:4                  # x
    # nextln: %9:i32 = iconst 1                       # x
    # nextln: %10:ptr = stackslot 4:4                 # x
    # nextln: %11:ptr = stackslot 4:4                 # x
    # nextln: %12:i32 = iconst 0                      # x
    # nextln: %13:ctrl = store.4 %5, %12, %7          # x
    # nextln: %14:ctrl = store.4 %13, %12, %8         # x
    # nextln: %15:ctrl = store.4 %14, %12, %10        # x
    # nextln: %16:ctrl = store.4 %15, %12, %11        # x
    # nextln: %17:ctrl, %18:phisel = region %16       # x
    # nextln: %19:ctrl = store.4 %17, %12, %7         # x
    # nextln: %20:ctrl = store.4 %19, %12, %8         # x
    # nextln: %74:ctrl, %75:phisel = region %20, %73  # loop 2; header; depth 1; root 2; x
    # nextln: %76:ctrl, %77:i32 = load.4 %74, %8      # loop 2; x
    # nextln: %78:i32 = icmp slt %77, %2              # x
    # nextln: %79:ctrl, %80:ctrl = brcond %76, %78    # loop 2; x
    # nextln: %81:ctrl, %82:phisel = region %79       # loop 2; x
    # nextln: %83:ctrl = store.4 %81, %12, %10        # loop 2; x
    # nextln: %53:ctrl, %54:phisel = region %83, %52  # loop 1; header; depth 2; root 2; parent 2; x
    # nextln: %55:ctrl, %56:i32 = load.4 %53, %10     # loop 1; x
    # nextln: %57:i32 = icmp slt %56, %3              # x
    # nextln: %58:ctrl, %59:ctrl = brcond %55, %57    # loop 1; x
    # nextln: %60:ctrl, %61:phisel = region %58       # loop 1; x
    # nextln: %21:ctrl = store.4 %60, %12, %11        # loop 1; x
    # nextln: %22:ctrl, %23:phisel = region %21, %40  # loop 0; header; depth 3; root 2; parent 1; x
    # nextln: %24:ctrl, %25:i32 = load.4 %22, %11     # loop 0; x
    # nextln: %26:i32 = icmp slt %25, %4              # x
    # nextln: %27:ctrl, %28:ctrl = brcond %24, %26    # loop 0; x
    # nextln: %29:ctrl, %30:phisel = region %27       # loop 0; x
    # nextln: %31:ctrl, %32:i32 = load.4 %29, %7      # loop 0; x
    # nextln: %33:ctrl, %34:i32 = load.4 %31, %11     # loop 0; x
    # nextln: %35:i32 = iadd %32, %34                 # x
    # nextln: %36:ctrl = store.4 %33, %35, %7         # loop 0; x
    # nextln: %37:ctrl, %38:i32 = load.4 %36, %11     # loop 0; x
    # nextln: %39:i32 = iadd %38, %9                  # x
    # nextln: %40:ctrl = store.4 %37, %39, %11        # loop 0; latch 0; x
    # nextln: %41:ctrl, %42:phisel = region %28       # loop 1; x
    # nextln: %43:ctrl, %44:i32 = load.4 %41, %7      # loop 1; x
    # nextln: %45:ctrl, %46:i32 = load.4 %43, %10     # loop 1; x
    # nextln: %47:i32 = iadd %44, %46                 # x
    # nextln: %48:ctrl = store.4 %45, %47, %7         # loop 1; x
    # nextln: %49:ctrl, %50:i32 = load.4 %48, %10     # loop 1; x
    # nextln: %51:i32 = iadd %50, %9                  # x
    # nextln: %52:ctrl = store.4 %49, %51, %10        # loop 1; latch 1; x
    # nextln: %62:ctrl, %63:phisel = region %59       # loop 2; x
    # nextln: %64:ctrl, %65:i32 = load.4 %62, %7      # loop 2; x
    # nextln: %66:ctrl, %67:i32 = load.4 %64, %8      # loop 2; x
    # nextln: %68:i32 = iadd %65, %67                 # x
    # nextln: %69:ctrl = store.4 %66, %68, %7         # loop 2; x
    # nextln: %70:ctrl, %71:i32 = load.4 %69, %8      # loop 2; x
    # nextln: %72:i32 = iadd %71, %9                  # x
    # nextln: %73:ctrl = store.4 %70, %72, %8         # loop 2; latch 2; x
    # nextln: %84:ctrl, %85:phisel = region %80       # x
    # nextln: %86:ctrl, %87:i32 = load.4 %84, %7      # x
    # nextln: return %86, %87                         # x

    %0:ctrl, %1:ptr, %2:i32, %3:i32, %4:i32 = entry
    %5:ctrl, %6:phisel = region %0
    %7:ptr = stackslot 4:4
    %10:ptr = stackslot 4:4
    %48:i32 = iconst 1
    %12:ptr = stackslot 4:4
    %14:ptr = stackslot 4:4
    %8:i32 = iconst 0
    %9:ctrl = store.4 %5, %8, %7
    %11:ctrl = store.4 %9, %8, %10
    %13:ctrl = store.4 %11, %8, %12
    %15:ctrl = store.4 %13, %8, %14
    %34:ctrl, %35:phisel = region %15
    %36:ctrl = store.4 %34, %8, %7
    %37:ctrl = store.4 %36, %8, %10
    %39:ctrl = store.4 %18, %8, %14
    %22:ctrl, %23:phisel = region %39, %50
    %51:ctrl, %52:i32 = load.4 %22, %14
    %53:i32 = icmp slt %52, %4
    %54:ctrl, %55:ctrl = brcond %51, %53
    %20:ctrl, %21:phisel = region %54
    %40:ctrl, %41:i32 = load.4 %20, %7
    %42:ctrl, %43:i32 = load.4 %40, %14
    %44:i32 = iadd %41, %43
    %45:ctrl = store.4 %42, %44, %7
    %46:ctrl, %47:i32 = load.4 %45, %14
    %49:i32 = iadd %47, %48
    %50:ctrl = store.4 %46, %49, %14
    %24:ctrl, %25:phisel = region %55
    %56:ctrl, %57:i32 = load.4 %24, %7
    %58:ctrl, %59:i32 = load.4 %56, %12
    %60:i32 = iadd %57, %59
    %61:ctrl = store.4 %58, %60, %7
    %62:ctrl, %63:i32 = load.4 %61, %12
    %64:i32 = iadd %63, %48
    %65:ctrl = store.4 %62, %64, %12
    %26:ctrl, %27:phisel = region %38, %65
    %66:ctrl, %67:i32 = load.4 %26, %12
    %68:i32 = icmp slt %67, %3
    %69:ctrl, %70:ctrl = brcond %66, %68
    %18:ctrl, %19:phisel = region %69
    %28:ctrl, %29:phisel = region %70
    %71:ctrl, %72:i32 = load.4 %28, %7
    %73:ctrl, %74:i32 = load.4 %71, %10
    %75:i32 = iadd %72, %74
    %76:ctrl = store.4 %73, %75, %7
    %77:ctrl, %78:i32 = load.4 %76, %10
    %79:i32 = iadd %78, %48
    %80:ctrl = store.4 %77, %79, %10
    %30:ctrl, %31:phisel = region %37, %80
    %81:ctrl, %82:i32 = load.4 %30, %10
    %83:i32 = icmp slt %82, %2
    %84:ctrl, %85:ctrl = brcond %81, %83
    %16:ctrl, %17:phisel = region %84
    %38:ctrl = store.4 %16, %8, %12
    %32:ctrl, %33:phisel = region %85
    %86:ctrl, %87:i32 = load.4 %32, %7
    return %86, %87
}
