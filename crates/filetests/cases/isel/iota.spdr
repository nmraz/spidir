# run: isel

func @iota(ptr, i64) {
    # check: function `iota`:
    # nextln:       block0[%5:gpr($$rdi), %2:gpr($$rsi)]:
    # nextln: 0000:      %8:gpr(reg)[late] = MovRZ
    # nextln: 0001:      AluRRm(S64, Test) %2(reg)[early], %2(any)[early]
    # nextln: 0002:      Jumpcc(E, block1, block3)
    # nextln:       => block1, block3
    # nextln:       block1:
    # nextln: 0003:      Jump(block2)
    # nextln:       => block2
    # nextln:       block3:
    # nextln: 0004:      %7:gpr(reg)[late] = MovRmS32(3)
    # nextln: 0005:      %4:gpr(reg)[late] = MovRmS32(1)
    # nextln: 0006:      Jump(block4)
    # nextln:       => block4[%8:gpr]
    # nextln:       block4[%0:gpr]:
    # nextln: 0007:      %6:gpr(any)[late] = ShiftRmR(S64, Shl) %0(tied:0)[early], %7($$rcx)[early]
    # nextln: 0008:      %3:gpr(reg)[late] = AluRRm(S64, Add) %5(tied:0)[early], %6(any)[early]
    # nextln: 0009:      %1:gpr(reg)[late] = AluRRm(S64, Add) %0(tied:0)[early], %4(any)[early]
    # nextln: 0010:      MovMR(S64) %3(reg)[early], %0(reg)[early]
    # nextln: 0011:      AluRRm(S64, Cmp) %1(reg)[early], %2(any)[early]
    # nextln: 0012:      Jumpcc(E, block5, block6)
    # nextln:       => block5, block6
    # nextln:       block6:
    # nextln: 0013:      Jump(block4)
    # nextln:       => block4[%1:gpr]
    # nextln:       block5:
    # nextln: 0014:      Jump(block2)
    # nextln:       => block2
    # nextln:       block2:
    # nextln: 0015:      Ret

    %entry_ctrl:ctrl, %arr:ptr, %n:i64 = entry
    %zero:i64 = iconst 0
    %zerocmp:i32 = icmp eq %n, %zero
    %iszero:ctrl, %isnonzero:ctrl = brcond %entry_ctrl, %zerocmp
    %loopbody:ctrl, %loopphi:phisel = region %isnonzero, %looplatch
    %i:i64 = phi %loopphi, %zero, %inext
    %three:i64 = iconst 3
    %off:i64 = shl %i, %three
    %ptr:ptr = ptroff %arr, %off
    %poststore:ctrl = store.8 %loopbody, %i, %ptr
    %one:i64 = iconst 1
    %inext:i64 = iadd %i, %one
    %donecmp:i32 = icmp eq %inext, %n
    %loopdone:ctrl, %looplatch:ctrl = brcond %poststore, %donecmp
    %exit:ctrl, %exitphi:phisel = region %iszero, %loopdone
    return %exit
}
