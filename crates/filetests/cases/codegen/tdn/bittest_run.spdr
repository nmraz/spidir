# run: codegen

extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)":i32(ptr, i32)
extfunc @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)":i32(i32, i32)
extfunc @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)":i32(ptr, i32)
extfunc @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)":i32(i64, i32)

func @"System.Boolean Tests.BitTest::Run()":i32() {
    # check: function `System.Boolean Tests.BitTest::Run()`:
    # nextln: 000000: 55                              push rbp
    # nextln: 000001: 48 89 e5                        mov rbp, rsp
    # nextln: 000004: 41 57                           push r15
    # nextln: 000006: 41 56                           push r14
    # nextln: 000008: 41 55                           push r13
    # nextln: 00000a: 41 54                           push r12
    # nextln: 00000c: 53                              push rbx
    # nextln: 00000d: 48 81 ec b8 00 00 00            sub rsp, 0xb8
    # nextln: 000014: 33 c0                           xor eax, eax
    # nextln: 000016: 48 8d 8c 24 9e 00 00 00         lea rcx, [rsp + 0x9e]
    # nextln: 00001e: 48 8d 94 24 98 00 00 00         lea rdx, [rsp + 0x98]
    # nextln: 000026: 48 89 54 24 50                  mov qword ptr [rsp + 0x50], rdx
    # nextln: 00002b: 33 db                           xor ebx, ebx
    # nextln: 00002d: 48 89 e2                        mov rdx, rsp
    # nextln: 000030: 48 89 54 24 18                  mov qword ptr [rsp + 0x18], rdx
    # nextln: 000035: 48 8d 54 24 08                  lea rdx, [rsp + 8]
    # nextln: 00003a: 48 89 54 24 20                  mov qword ptr [rsp + 0x20], rdx
    # nextln: 00003f: 48 8d 94 24 90 00 00 00         lea rdx, [rsp + 0x90]
    # nextln: 000047: 48 89 54 24 38                  mov qword ptr [rsp + 0x38], rdx
    # nextln: 00004c: 48 8d 94 24 9a 00 00 00         lea rdx, [rsp + 0x9a]
    # nextln: 000054: 48 89 54 24 58                  mov qword ptr [rsp + 0x58], rdx
    # nextln: 000059: 48 8d 94 24 94 00 00 00         lea rdx, [rsp + 0x94]
    # nextln: 000061: 48 89 54 24 40                  mov qword ptr [rsp + 0x40], rdx
    # nextln: 000066: 48 8d 94 24 9c 00 00 00         lea rdx, [rsp + 0x9c]
    # nextln: 00006e: 48 89 54 24 68                  mov qword ptr [rsp + 0x68], rdx
    # nextln: 000073: 48 8d 94 24 9f 00 00 00         lea rdx, [rsp + 0x9f]
    # nextln: 00007b: 48 89 94 24 80 00 00 00         mov qword ptr [rsp + 0x80], rdx
    # nextln: 000083: 88 9c 24 9f 00 00 00            mov byte ptr [rsp + 0x9f], bl
    # nextln: 00008a: 88 9c 24 9e 00 00 00            mov byte ptr [rsp + 0x9e], bl
    # nextln: 000091: 48 8d 94 24 a0 00 00 00         lea rdx, [rsp + 0xa0]
    # nextln: 000099: 48 89 54 24 78                  mov qword ptr [rsp + 0x78], rdx
    # nextln: 00009e: 88 9c 24 a0 00 00 00            mov byte ptr [rsp + 0xa0], bl
    # nextln: 0000a5: 66 89 9c 24 9c 00 00 00         mov word ptr [rsp + 0x9c], bx
    # nextln: 0000ad: 66 89 9c 24 9a 00 00 00         mov word ptr [rsp + 0x9a], bx
    # nextln: 0000b5: 66 89 9c 24 98 00 00 00         mov word ptr [rsp + 0x98], bx
    # nextln: 0000bd: 89 9c 24 94 00 00 00            mov dword ptr [rsp + 0x94], ebx
    # nextln: 0000c4: 89 9c 24 90 00 00 00            mov dword ptr [rsp + 0x90], ebx
    # nextln: 0000cb: 48 89 44 24 08                  mov qword ptr [rsp + 8], rax
    # nextln: 0000d0: 48 89 04 24                     mov qword ptr [rsp], rax
    # nextln: 0000d4: 41 bd 07 00 00 00               mov r13d, 7
    # nextln: 0000da: 49 89 cc                        mov r12, rcx
    # nextln: 0000dd: 41 be 08 00 00 00               mov r14d, 8
    # nextln: 0000e3: b9 01 00 00 00                  mov ecx, 1
    # nextln: 0000e8: b8 20 00 00 00                  mov eax, 0x20
    # nextln: 0000ed: 48 89 44 24 30                  mov qword ptr [rsp + 0x30], rax
    # nextln: 0000f2: b8 0f 00 00 00                  mov eax, 0xf
    # nextln: 0000f7: 48 89 44 24 70                  mov qword ptr [rsp + 0x70], rax
    # nextln: 0000fc: b8 10 00 00 00                  mov eax, 0x10
    # nextln: 000101: 48 89 44 24 60                  mov qword ptr [rsp + 0x60], rax
    # nextln: 000106: b8 03 00 00 00                  mov eax, 3
    # nextln: 00010b: 48 89 44 24 48                  mov qword ptr [rsp + 0x48], rax
    # nextln: 000110: b8 40 00 00 00                  mov eax, 0x40
    # nextln: 000115: 48 89 44 24 28                  mov qword ptr [rsp + 0x28], rax
    # nextln: 00011a: be 02 00 00 00                  mov esi, 2
    # nextln: 00011f: 48 63 d1                        movsxd rdx, ecx
    # nextln: 000122: 48 63 fe                        movsxd rdi, esi
    # nextln: 000125: 41 b8 80 ff ff ff               mov r8d, 0xffffff80
    # nextln: 00012b: 44 88 84 24 9f 00 00 00         mov byte ptr [rsp + 0x9f], r8b
    # nextln: 000133: 41 b8 00 80 ff ff               mov r8d, 0xffff8000
    # nextln: 000139: 88 8c 24 9e 00 00 00            mov byte ptr [rsp + 0x9e], cl
    # nextln: 000140: 40 88 b4 24 a0 00 00 00         mov byte ptr [rsp + 0xa0], sil
    # nextln: 000148: 66 44 89 84 24 9c 00 00 00      mov word ptr [rsp + 0x9c], r8w
    # nextln: 000151: 66 89 8c 24 9a 00 00 00         mov word ptr [rsp + 0x9a], cx
    # nextln: 000159: 66 89 b4 24 98 00 00 00         mov word ptr [rsp + 0x98], si
    # nextln: 000161: 89 8c 24 94 00 00 00            mov dword ptr [rsp + 0x94], ecx
    # nextln: 000168: 89 b4 24 90 00 00 00            mov dword ptr [rsp + 0x90], esi
    # nextln: 00016f: 48 89 54 24 08                  mov qword ptr [rsp + 8], rdx
    # nextln: 000174: 48 89 3c 24                     mov qword ptr [rsp], rdi
    # nextln: 000178: 0f b6 94 24 9f 00 00 00         movzx edx, byte ptr [rsp + 0x9f]
    # nextln: 000180: 0f be fa                        movsx edi, dl
    # nextln: 000183: 48 ba 00 00 00 00 00 00 00 00   movabs rdx, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 00018d: 49 89 cf                        mov r15, rcx
    # nextln: 000190: 4c 89 ee                        mov rsi, r13
    # nextln: 000193: ff d2                           call rdx
    # nextln: 000195: 4c 89 ac 24 88 00 00 00         mov qword ptr [rsp + 0x88], r13
    # nextln: 00019d: 4c 89 f9                        mov rcx, r15
    # nextln: 0001a0: 44 23 f8                        and r15d, eax
    # nextln: 0001a3: 48 89 4c 24 10                  mov qword ptr [rsp + 0x10], rcx
    # nextln: 0001a8: 0f b6 84 24 9f 00 00 00         movzx eax, byte ptr [rsp + 0x9f]
    # nextln: 0001b0: 0f be f8                        movsx edi, al
    # nextln: 0001b3: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001bd: 4c 8b ac 24 80 00 00 00         mov r13, qword ptr [rsp + 0x80]
    # nextln: 0001c5: 4c 89 f6                        mov rsi, r14
    # nextln: 0001c8: ff d0                           call rax
    # nextln: 0001ca: 44 23 f8                        and r15d, eax
    # nextln: 0001cd: 0f b6 84 24 9e 00 00 00         movzx eax, byte ptr [rsp + 0x9e]
    # nextln: 0001d5: 0f be f8                        movsx edi, al
    # nextln: 0001d8: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001e2: 48 89 de                        mov rsi, rbx
    # nextln: 0001e5: ff d0                           call rax
    # nextln: 0001e7: 44 23 f8                        and r15d, eax
    # nextln: 0001ea: 0f b6 84 24 9e 00 00 00         movzx eax, byte ptr [rsp + 0x9e]
    # nextln: 0001f2: 0f be f8                        movsx edi, al
    # nextln: 0001f5: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 0001ff: 4c 89 f6                        mov rsi, r14
    # nextln: 000202: ff d0                           call rax
    # nextln: 000204: 33 c9                           xor ecx, ecx
    # nextln: 000206: 85 c0                           test eax, eax
    # nextln: 000208: 0f 94 c1                        sete cl
    # nextln: 00020b: 44 23 f9                        and r15d, ecx
    # nextln: 00020e: 0f b6 84 24 9e 00 00 00         movzx eax, byte ptr [rsp + 0x9e]
    # nextln: 000216: 0f be f8                        movsx edi, al
    # nextln: 000219: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000223: 48 8b 74 24 30                  mov rsi, qword ptr [rsp + 0x30]
    # nextln: 000228: ff d0                           call rax
    # nextln: 00022a: 44 23 f8                        and r15d, eax
    # nextln: 00022d: 0f b6 84 24 a0 00 00 00         movzx eax, byte ptr [rsp + 0xa0]
    # nextln: 000235: 0f be f8                        movsx edi, al
    # nextln: 000238: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" + 0
    # nextln: 000242: 48 89 de                        mov rsi, rbx
    # nextln: 000245: ff d0                           call rax
    # nextln: 000247: 33 c9                           xor ecx, ecx
    # nextln: 000249: 85 c0                           test eax, eax
    # nextln: 00024b: 0f 94 c1                        sete cl
    # nextln: 00024e: 44 23 f9                        and r15d, ecx
    # nextln: 000251: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00025b: 48 8b b4 24 88 00 00 00         mov rsi, qword ptr [rsp + 0x88]
    # nextln: 000263: 4c 89 ef                        mov rdi, r13
    # nextln: 000266: ff d0                           call rax
    # nextln: 000268: 44 23 f8                        and r15d, eax
    # nextln: 00026b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 000275: 4c 89 f6                        mov rsi, r14
    # nextln: 000278: 4c 89 ef                        mov rdi, r13
    # nextln: 00027b: ff d0                           call rax
    # nextln: 00027d: 44 23 f8                        and r15d, eax
    # nextln: 000280: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00028a: 4c 89 e7                        mov rdi, r12
    # nextln: 00028d: 48 89 de                        mov rsi, rbx
    # nextln: 000290: ff d0                           call rax
    # nextln: 000292: 44 23 f8                        and r15d, eax
    # nextln: 000295: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 00029f: 4c 89 f6                        mov rsi, r14
    # nextln: 0002a2: 4c 89 e7                        mov rdi, r12
    # nextln: 0002a5: ff d0                           call rax
    # nextln: 0002a7: 33 c9                           xor ecx, ecx
    # nextln: 0002a9: 85 c0                           test eax, eax
    # nextln: 0002ab: 0f 94 c1                        sete cl
    # nextln: 0002ae: 44 23 f9                        and r15d, ecx
    # nextln: 0002b1: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002bb: 4c 8b 6c 24 30                  mov r13, qword ptr [rsp + 0x30]
    # nextln: 0002c0: 4c 89 e7                        mov rdi, r12
    # nextln: 0002c3: 4c 89 ee                        mov rsi, r13
    # nextln: 0002c6: ff d0                           call rax
    # nextln: 0002c8: 44 23 f8                        and r15d, eax
    # nextln: 0002cb: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" + 0
    # nextln: 0002d5: 48 8b 7c 24 78                  mov rdi, qword ptr [rsp + 0x78]
    # nextln: 0002da: 48 89 de                        mov rsi, rbx
    # nextln: 0002dd: ff d0                           call rax
    # nextln: 0002df: 33 c9                           xor ecx, ecx
    # nextln: 0002e1: 85 c0                           test eax, eax
    # nextln: 0002e3: 0f 94 c1                        sete cl
    # nextln: 0002e6: 44 23 f9                        and r15d, ecx
    # nextln: 0002e9: 0f b7 84 24 9c 00 00 00         movzx eax, word ptr [rsp + 0x9c]
    # nextln: 0002f1: 0f bf f8                        movsx edi, ax
    # nextln: 0002f4: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0002fe: 4c 8b 74 24 70                  mov r14, qword ptr [rsp + 0x70]
    # nextln: 000303: 4c 89 f6                        mov rsi, r14
    # nextln: 000306: ff d0                           call rax
    # nextln: 000308: 44 23 f8                        and r15d, eax
    # nextln: 00030b: 0f b7 84 24 9c 00 00 00         movzx eax, word ptr [rsp + 0x9c]
    # nextln: 000313: 0f bf f8                        movsx edi, ax
    # nextln: 000316: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000320: 4c 8b 64 24 60                  mov r12, qword ptr [rsp + 0x60]
    # nextln: 000325: 4c 89 e6                        mov rsi, r12
    # nextln: 000328: ff d0                           call rax
    # nextln: 00032a: 44 23 f8                        and r15d, eax
    # nextln: 00032d: 0f b7 84 24 9a 00 00 00         movzx eax, word ptr [rsp + 0x9a]
    # nextln: 000335: 0f bf f8                        movsx edi, ax
    # nextln: 000338: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000342: 48 89 de                        mov rsi, rbx
    # nextln: 000345: ff d0                           call rax
    # nextln: 000347: 44 23 f8                        and r15d, eax
    # nextln: 00034a: 0f b7 84 24 9a 00 00 00         movzx eax, word ptr [rsp + 0x9a]
    # nextln: 000352: 0f bf f8                        movsx edi, ax
    # nextln: 000355: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 00035f: 4c 89 e6                        mov rsi, r12
    # nextln: 000362: ff d0                           call rax
    # nextln: 000364: 33 c9                           xor ecx, ecx
    # nextln: 000366: 85 c0                           test eax, eax
    # nextln: 000368: 0f 94 c1                        sete cl
    # nextln: 00036b: 44 23 f9                        and r15d, ecx
    # nextln: 00036e: 0f b7 84 24 9a 00 00 00         movzx eax, word ptr [rsp + 0x9a]
    # nextln: 000376: 0f bf f8                        movsx edi, ax
    # nextln: 000379: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 000383: 4c 89 ee                        mov rsi, r13
    # nextln: 000386: ff d0                           call rax
    # nextln: 000388: 44 23 f8                        and r15d, eax
    # nextln: 00038b: 0f b7 84 24 98 00 00 00         movzx eax, word ptr [rsp + 0x98]
    # nextln: 000393: 0f bf f8                        movsx edi, ax
    # nextln: 000396: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" + 0
    # nextln: 0003a0: 48 89 de                        mov rsi, rbx
    # nextln: 0003a3: ff d0                           call rax
    # nextln: 0003a5: 33 c9                           xor ecx, ecx
    # nextln: 0003a7: 85 c0                           test eax, eax
    # nextln: 0003a9: 0f 94 c1                        sete cl
    # nextln: 0003ac: 44 23 f9                        and r15d, ecx
    # nextln: 0003af: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003b9: 4c 89 f6                        mov rsi, r14
    # nextln: 0003bc: 48 8b 7c 24 68                  mov rdi, qword ptr [rsp + 0x68]
    # nextln: 0003c1: ff d0                           call rax
    # nextln: 0003c3: 44 23 f8                        and r15d, eax
    # nextln: 0003c6: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003d0: 4c 89 e6                        mov rsi, r12
    # nextln: 0003d3: 48 8b 7c 24 68                  mov rdi, qword ptr [rsp + 0x68]
    # nextln: 0003d8: ff d0                           call rax
    # nextln: 0003da: 44 23 f8                        and r15d, eax
    # nextln: 0003dd: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 0003e7: 4c 8b 74 24 58                  mov r14, qword ptr [rsp + 0x58]
    # nextln: 0003ec: 4c 89 f7                        mov rdi, r14
    # nextln: 0003ef: 48 89 de                        mov rsi, rbx
    # nextln: 0003f2: ff d0                           call rax
    # nextln: 0003f4: 44 23 f8                        and r15d, eax
    # nextln: 0003f7: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000401: 4c 89 f7                        mov rdi, r14
    # nextln: 000404: 4c 89 e6                        mov rsi, r12
    # nextln: 000407: ff d0                           call rax
    # nextln: 000409: 33 c9                           xor ecx, ecx
    # nextln: 00040b: 85 c0                           test eax, eax
    # nextln: 00040d: 0f 94 c1                        sete cl
    # nextln: 000410: 44 23 f9                        and r15d, ecx
    # nextln: 000413: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 00041d: 4c 89 f7                        mov rdi, r14
    # nextln: 000420: 4c 89 ee                        mov rsi, r13
    # nextln: 000423: ff d0                           call rax
    # nextln: 000425: 44 23 f8                        and r15d, eax
    # nextln: 000428: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" + 0
    # nextln: 000432: 48 8b 7c 24 50                  mov rdi, qword ptr [rsp + 0x50]
    # nextln: 000437: 48 89 de                        mov rsi, rbx
    # nextln: 00043a: ff d0                           call rax
    # nextln: 00043c: 33 c9                           xor ecx, ecx
    # nextln: 00043e: 85 c0                           test eax, eax
    # nextln: 000440: 0f 94 c1                        sete cl
    # nextln: 000443: 44 23 f9                        and r15d, ecx
    # nextln: 000446: 8b bc 24 94 00 00 00            mov edi, dword ptr [rsp + 0x94]
    # nextln: 00044d: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000457: 48 89 de                        mov rsi, rbx
    # nextln: 00045a: ff d0                           call rax
    # nextln: 00045c: 44 23 f8                        and r15d, eax
    # nextln: 00045f: 8b bc 24 94 00 00 00            mov edi, dword ptr [rsp + 0x94]
    # nextln: 000466: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000470: 4c 89 ee                        mov rsi, r13
    # nextln: 000473: ff d0                           call rax
    # nextln: 000475: 44 23 f8                        and r15d, eax
    # nextln: 000478: 8b bc 24 90 00 00 00            mov edi, dword ptr [rsp + 0x90]
    # nextln: 00047f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" + 0
    # nextln: 000489: 48 89 de                        mov rsi, rbx
    # nextln: 00048c: ff d0                           call rax
    # nextln: 00048e: 33 c9                           xor ecx, ecx
    # nextln: 000490: 85 c0                           test eax, eax
    # nextln: 000492: 0f 94 c1                        sete cl
    # nextln: 000495: 44 23 f9                        and r15d, ecx
    # nextln: 000498: 8b bc 24 94 00 00 00            mov edi, dword ptr [rsp + 0x94]
    # nextln: 00049f: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004a9: 48 89 de                        mov rsi, rbx
    # nextln: 0004ac: ff d0                           call rax
    # nextln: 0004ae: 33 c9                           xor ecx, ecx
    # nextln: 0004b0: 85 c0                           test eax, eax
    # nextln: 0004b2: 0f 94 c1                        sete cl
    # nextln: 0004b5: 44 23 f9                        and r15d, ecx
    # nextln: 0004b8: 8b bc 24 94 00 00 00            mov edi, dword ptr [rsp + 0x94]
    # nextln: 0004bf: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004c9: 4c 89 ee                        mov rsi, r13
    # nextln: 0004cc: ff d0                           call rax
    # nextln: 0004ce: 33 c9                           xor ecx, ecx
    # nextln: 0004d0: 85 c0                           test eax, eax
    # nextln: 0004d2: 0f 94 c1                        sete cl
    # nextln: 0004d5: 44 23 f9                        and r15d, ecx
    # nextln: 0004d8: 8b bc 24 90 00 00 00            mov edi, dword ptr [rsp + 0x90]
    # nextln: 0004df: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" + 0
    # nextln: 0004e9: 48 89 de                        mov rsi, rbx
    # nextln: 0004ec: ff d0                           call rax
    # nextln: 0004ee: 44 23 f8                        and r15d, eax
    # nextln: 0004f1: 8b bc 24 94 00 00 00            mov edi, dword ptr [rsp + 0x94]
    # nextln: 0004f8: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000502: 48 89 de                        mov rsi, rbx
    # nextln: 000505: ff d0                           call rax
    # nextln: 000507: 33 c9                           xor ecx, ecx
    # nextln: 000509: 85 c0                           test eax, eax
    # nextln: 00050b: 0f 94 c1                        sete cl
    # nextln: 00050e: 44 23 f9                        and r15d, ecx
    # nextln: 000511: 8b bc 24 94 00 00 00            mov edi, dword ptr [rsp + 0x94]
    # nextln: 000518: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000522: 4c 89 ee                        mov rsi, r13
    # nextln: 000525: ff d0                           call rax
    # nextln: 000527: 33 c9                           xor ecx, ecx
    # nextln: 000529: 85 c0                           test eax, eax
    # nextln: 00052b: 0f 94 c1                        sete cl
    # nextln: 00052e: 44 23 f9                        and r15d, ecx
    # nextln: 000531: 8b bc 24 90 00 00 00            mov edi, dword ptr [rsp + 0x90]
    # nextln: 000538: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" + 0
    # nextln: 000542: 48 89 de                        mov rsi, rbx
    # nextln: 000545: ff d0                           call rax
    # nextln: 000547: 33 c9                           xor ecx, ecx
    # nextln: 000549: 48 8b 54 24 48                  mov rdx, qword ptr [rsp + 0x48]
    # nextln: 00054e: 3b c2                           cmp eax, edx
    # nextln: 000550: 0f 94 c1                        sete cl
    # nextln: 000553: 44 23 f9                        and r15d, ecx
    # nextln: 000556: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 000560: 4c 8b 64 24 40                  mov r12, qword ptr [rsp + 0x40]
    # nextln: 000565: 4c 89 e7                        mov rdi, r12
    # nextln: 000568: 48 89 de                        mov rsi, rbx
    # nextln: 00056b: ff d0                           call rax
    # nextln: 00056d: 44 23 f8                        and r15d, eax
    # nextln: 000570: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00057a: 4c 89 ee                        mov rsi, r13
    # nextln: 00057d: 4c 89 e7                        mov rdi, r12
    # nextln: 000580: ff d0                           call rax
    # nextln: 000582: 44 23 f8                        and r15d, eax
    # nextln: 000585: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" + 0
    # nextln: 00058f: 48 8b 7c 24 38                  mov rdi, qword ptr [rsp + 0x38]
    # nextln: 000594: 48 89 de                        mov rsi, rbx
    # nextln: 000597: ff d0                           call rax
    # nextln: 000599: 33 c9                           xor ecx, ecx
    # nextln: 00059b: 85 c0                           test eax, eax
    # nextln: 00059d: 0f 94 c1                        sete cl
    # nextln: 0005a0: 44 23 f9                        and r15d, ecx
    # nextln: 0005a3: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0005a8: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005b2: 48 89 de                        mov rsi, rbx
    # nextln: 0005b5: ff d0                           call rax
    # nextln: 0005b7: 44 23 f8                        and r15d, eax
    # nextln: 0005ba: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0005bf: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005c9: 4c 89 ee                        mov rsi, r13
    # nextln: 0005cc: ff d0                           call rax
    # nextln: 0005ce: 33 c9                           xor ecx, ecx
    # nextln: 0005d0: 85 c0                           test eax, eax
    # nextln: 0005d2: 0f 94 c1                        sete cl
    # nextln: 0005d5: 44 23 f9                        and r15d, ecx
    # nextln: 0005d8: 48 8b 7c 24 08                  mov rdi, qword ptr [rsp + 8]
    # nextln: 0005dd: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 0005e7: 4c 8b 64 24 28                  mov r12, qword ptr [rsp + 0x28]
    # nextln: 0005ec: 4c 89 e6                        mov rsi, r12
    # nextln: 0005ef: ff d0                           call rax
    # nextln: 0005f1: 44 23 f8                        and r15d, eax
    # nextln: 0005f4: 48 8b 3c 24                     mov rdi, qword ptr [rsp]
    # nextln: 0005f8: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" + 0
    # nextln: 000602: 48 89 de                        mov rsi, rbx
    # nextln: 000605: ff d0                           call rax
    # nextln: 000607: 33 c9                           xor ecx, ecx
    # nextln: 000609: 85 c0                           test eax, eax
    # nextln: 00060b: 0f 94 c1                        sete cl
    # nextln: 00060e: 44 23 f9                        and r15d, ecx
    # nextln: 000611: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00061b: 4c 8b 74 24 20                  mov r14, qword ptr [rsp + 0x20]
    # nextln: 000620: 4c 89 f7                        mov rdi, r14
    # nextln: 000623: 48 89 de                        mov rsi, rbx
    # nextln: 000626: ff d0                           call rax
    # nextln: 000628: 44 23 f8                        and r15d, eax
    # nextln: 00062b: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 000635: 4c 89 ee                        mov rsi, r13
    # nextln: 000638: 4c 89 f7                        mov rdi, r14
    # nextln: 00063b: ff d0                           call rax
    # nextln: 00063d: 49 89 c5                        mov r13, rax
    # nextln: 000640: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00064a: 4c 89 e6                        mov rsi, r12
    # nextln: 00064d: 4c 89 f7                        mov rdi, r14
    # nextln: 000650: ff d0                           call rax
    # nextln: 000652: 33 c9                           xor ecx, ecx
    # nextln: 000654: 45 85 ed                        test r13d, r13d
    # nextln: 000657: 0f 94 c1                        sete cl
    # nextln: 00065a: 44 23 f9                        and r15d, ecx
    # nextln: 00065d: 44 23 f8                        and r15d, eax
    # nextln: 000660: 48 b8 00 00 00 00 00 00 00 00   movabs rax, 0  # RELOC_ABS64 -> @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" + 0
    # nextln: 00066a: 48 8b 7c 24 18                  mov rdi, qword ptr [rsp + 0x18]
    # nextln: 00066f: 48 89 de                        mov rsi, rbx
    # nextln: 000672: ff d0                           call rax
    # nextln: 000674: 33 c9                           xor ecx, ecx
    # nextln: 000676: 85 c0                           test eax, eax
    # nextln: 000678: 0f 94 c1                        sete cl
    # nextln: 00067b: 44 23 f9                        and r15d, ecx
    # nextln: 00067e: 45 85 ff                        test r15d, r15d
    # nextln: 000681: 0f 84 17 00 00 00               je 0x69e
    # nextln: 000687: 48 8b 44 24 10                  mov rax, qword ptr [rsp + 0x10]
    # nextln: 00068c: 48 81 c4 b8 00 00 00            add rsp, 0xb8
    # nextln: 000693: 5b                              pop rbx
    # nextln: 000694: 41 5c                           pop r12
    # nextln: 000696: 41 5d                           pop r13
    # nextln: 000698: 41 5e                           pop r14
    # nextln: 00069a: 41 5f                           pop r15
    # nextln: 00069c: 5d                              pop rbp
    # nextln: 00069d: c3                              ret
    # nextln: 00069e: 48 89 d8                        mov rax, rbx
    # nextln: 0006a1: 48 81 c4 b8 00 00 00            add rsp, 0xb8
    # nextln: 0006a8: 5b                              pop rbx
    # nextln: 0006a9: 41 5c                           pop r12
    # nextln: 0006ab: 41 5d                           pop r13
    # nextln: 0006ad: 41 5e                           pop r14
    # nextln: 0006af: 41 5f                           pop r15
    # nextln: 0006b1: 5d                              pop rbp
    # nextln: 0006b2: c3                              ret

    %0:ctrl = entry
    %1:ctrl, %2:phisel = region %0
    %3:i32 = iconst 0
    %4:i32 = iconst 1
    %5:i64 = iext %4
    %6:i64 = sfill 32 %5
    %7:i32 = iconst 3
    %8:ptr = stackslot 8:8
    %9:i32 = iconst 64
    %10:ptr = stackslot 8:8
    %11:i32 = iconst 32
    %12:ptr = stackslot 4:4
    %13:ptr = stackslot 4:4
    %14:ptr = stackslot 2:2
    %15:ptr = stackslot 2:2
    %16:i32 = iconst 16
    %17:ptr = stackslot 2:2
    %18:i32 = iconst 15
    %19:ptr = stackslot 1:1
    %20:ptr = stackslot 1:1
    %21:i32 = iconst 8
    %22:ptr = stackslot 1:1
    %23:ctrl = store.1 %1, %3, %22
    %24:ctrl = store.1 %23, %3, %20
    %25:ctrl = store.1 %24, %3, %19
    %26:ctrl = store.2 %25, %3, %17
    %27:ctrl = store.2 %26, %3, %15
    %28:ctrl = store.2 %27, %3, %14
    %29:ctrl = store.4 %28, %3, %13
    %30:ctrl = store.4 %29, %3, %12
    %31:i32 = iconst 7
    %32:i32 = iconst 2
    %33:i64 = iext %32
    %34:i64 = sfill 32 %33
    %35:i32 = iconst 4294934528
    %36:i32 = iconst 4294967168
    %37:i64 = iconst 0
    %38:ctrl = store.8 %30, %37, %10
    %39:ctrl = store.8 %38, %37, %8
    %40:ctrl, %41:phisel = region %39
    %42:ctrl = store.1 %40, %36, %22
    %43:ctrl = store.1 %42, %4, %20
    %44:ctrl = store.1 %43, %32, %19
    %45:ctrl = store.2 %44, %35, %17
    %46:ctrl = store.2 %45, %4, %15
    %47:ctrl = store.2 %46, %32, %14
    %48:ctrl = store.4 %47, %4, %13
    %49:ctrl = store.4 %48, %32, %12
    %50:ctrl = store.8 %49, %6, %10
    %51:ctrl = store.8 %50, %34, %8
    %52:ctrl, %53:i32 = load.1 %51, %22
    %54:i32 = sfill 8 %53
    %55:ctrl, %56:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %52, %54, %31
    %57:ctrl, %58:i32 = load.1 %55, %22
    %59:i32 = sfill 8 %58
    %60:ctrl, %61:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %57, %59, %21
    %62:ctrl, %63:i32 = load.1 %60, %20
    %64:i32 = sfill 8 %63
    %65:ctrl, %66:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %62, %64, %3
    %67:ctrl, %68:i32 = load.1 %65, %20
    %69:i32 = sfill 8 %68
    %70:ctrl, %71:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %67, %69, %21
    %72:ctrl, %73:i32 = load.1 %70, %20
    %74:i32 = sfill 8 %73
    %75:ctrl, %76:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %72, %74, %11
    %77:ctrl, %78:i32 = load.1 %75, %19
    %79:i32 = sfill 8 %78
    %80:ctrl, %81:i32 = call @"System.Boolean Tests.BitTest::I1_BT_reg_reg(System.SByte, System.Int32)" %77, %79, %3
    %82:ctrl, %83:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %80, %22, %31
    %84:ctrl, %85:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %82, %22, %21
    %86:ctrl, %87:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %84, %20, %3
    %88:ctrl, %89:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %86, %20, %21
    %90:ctrl, %91:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %88, %20, %11
    %92:ctrl, %93:i32 = call @"System.Boolean Tests.BitTest::I1_BT_mem_reg(System.SByte&, System.Int32)" %90, %19, %3
    %94:ctrl, %95:i32 = load.2 %92, %17
    %96:i32 = sfill 16 %95
    %97:ctrl, %98:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %94, %96, %18
    %99:ctrl, %100:i32 = load.2 %97, %17
    %101:i32 = sfill 16 %100
    %102:ctrl, %103:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %99, %101, %16
    %104:ctrl, %105:i32 = load.2 %102, %15
    %106:i32 = sfill 16 %105
    %107:ctrl, %108:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %104, %106, %3
    %109:ctrl, %110:i32 = load.2 %107, %15
    %111:i32 = sfill 16 %110
    %112:ctrl, %113:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %109, %111, %16
    %114:ctrl, %115:i32 = load.2 %112, %15
    %116:i32 = sfill 16 %115
    %117:ctrl, %118:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %114, %116, %11
    %119:ctrl, %120:i32 = load.2 %117, %14
    %121:i32 = sfill 16 %120
    %122:ctrl, %123:i32 = call @"System.Boolean Tests.BitTest::I2_BT_reg_reg(System.Int16, System.Int32)" %119, %121, %3
    %124:ctrl, %125:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %122, %17, %18
    %126:ctrl, %127:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %124, %17, %16
    %128:ctrl, %129:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %126, %15, %3
    %130:ctrl, %131:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %128, %15, %16
    %132:ctrl, %133:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %130, %15, %11
    %134:ctrl, %135:i32 = call @"System.Boolean Tests.BitTest::I2_BT_mem_reg(System.Int16&, System.Int32)" %132, %14, %3
    %136:ctrl, %137:i32 = load.4 %134, %13
    %138:ctrl, %139:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %136, %137, %3
    %140:ctrl, %141:i32 = load.4 %138, %13
    %142:ctrl, %143:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %140, %141, %11
    %144:ctrl, %145:i32 = load.4 %142, %12
    %146:ctrl, %147:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg(System.Int32, System.Int32)" %144, %145, %3
    %148:ctrl, %149:i32 = load.4 %146, %13
    %150:ctrl, %151:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %148, %149, %3
    %152:ctrl, %153:i32 = load.4 %150, %13
    %154:ctrl, %155:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %152, %153, %11
    %156:ctrl, %157:i32 = load.4 %154, %12
    %158:ctrl, %159:i32 = call @"System.Boolean Tests.BitTest::I4_BT_reg_reg_EQ(System.Int32, System.Int32)" %156, %157, %3
    %160:ctrl, %161:i32 = load.4 %158, %13
    %162:ctrl, %163:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %160, %161, %3
    %164:ctrl, %165:i32 = load.4 %162, %13
    %166:ctrl, %167:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %164, %165, %11
    %168:ctrl, %169:i32 = load.4 %166, %12
    %170:ctrl, %171:i32 = call @"System.Int32 Tests.BitTest::I4_BT_reg_reg_JCC(System.Int32, System.Int32)" %168, %169, %3
    %172:ctrl, %173:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %170, %13, %3
    %174:ctrl, %175:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %172, %13, %11
    %176:ctrl, %177:i32 = call @"System.Boolean Tests.BitTest::I4_BT_mem_reg(System.Int32&, System.Int32)" %174, %12, %3
    %178:ctrl, %179:i64 = load.8 %176, %10
    %180:ctrl, %181:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %178, %179, %3
    %182:ctrl, %183:i64 = load.8 %180, %10
    %184:ctrl, %185:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %182, %183, %11
    %186:ctrl, %187:i64 = load.8 %184, %10
    %188:ctrl, %189:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %186, %187, %9
    %190:ctrl, %191:i64 = load.8 %188, %8
    %192:ctrl, %193:i32 = call @"System.Boolean Tests.BitTest::I8_BT_reg_reg(System.Int64, System.Int32)" %190, %191, %3
    %194:ctrl, %195:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %192, %10, %3
    %196:ctrl, %197:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %194, %10, %11
    %198:ctrl, %199:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %196, %10, %9
    %200:ctrl, %201:i32 = call @"System.Boolean Tests.BitTest::I8_BT_mem_reg(System.Int64&, System.Int32)" %198, %8, %3
    %202:i32 = icmp eq %201, %3
    %203:i32 = icmp eq %197, %3
    %204:i32 = icmp eq %193, %3
    %205:i32 = icmp eq %185, %3
    %206:i32 = icmp eq %177, %3
    %207:i32 = icmp eq %171, %7
    %208:i32 = icmp eq %167, %3
    %209:i32 = icmp eq %163, %3
    %210:i32 = icmp eq %155, %3
    %211:i32 = icmp eq %151, %3
    %212:i32 = icmp eq %147, %3
    %213:i32 = icmp eq %135, %3
    %214:i32 = icmp eq %131, %3
    %215:i32 = icmp eq %123, %3
    %216:i32 = icmp eq %113, %3
    %217:i32 = icmp eq %93, %3
    %218:i32 = icmp eq %89, %3
    %219:i32 = icmp eq %81, %3
    %220:i32 = icmp eq %71, %3
    %221:i32 = and %4, %56
    %222:i32 = and %221, %61
    %223:i32 = and %222, %66
    %224:i32 = and %223, %220
    %225:i32 = and %224, %76
    %226:i32 = and %225, %219
    %227:i32 = and %226, %83
    %228:i32 = and %227, %85
    %229:i32 = and %228, %87
    %230:i32 = and %229, %218
    %231:i32 = and %230, %91
    %232:i32 = and %231, %217
    %233:i32 = and %232, %98
    %234:i32 = and %233, %103
    %235:i32 = and %234, %108
    %236:i32 = and %235, %216
    %237:i32 = and %236, %118
    %238:i32 = and %237, %215
    %239:i32 = and %238, %125
    %240:i32 = and %239, %127
    %241:i32 = and %240, %129
    %242:i32 = and %241, %214
    %243:i32 = and %242, %133
    %244:i32 = and %243, %213
    %245:i32 = and %244, %139
    %246:i32 = and %245, %143
    %247:i32 = and %246, %212
    %248:i32 = and %247, %211
    %249:i32 = and %248, %210
    %250:i32 = and %249, %159
    %251:i32 = and %250, %209
    %252:i32 = and %251, %208
    %253:i32 = and %252, %207
    %254:i32 = and %253, %173
    %255:i32 = and %254, %175
    %256:i32 = and %255, %206
    %257:i32 = and %256, %181
    %258:i32 = and %257, %205
    %259:i32 = and %258, %189
    %260:i32 = and %259, %204
    %261:i32 = and %260, %195
    %262:i32 = and %261, %203
    %263:i32 = and %262, %199
    %264:i32 = and %263, %202
    %265:ctrl, %266:ctrl = brcond %200, %264
    %267:ctrl, %268:phisel = region %265
    return %267, %4
    %269:ctrl, %270:phisel = region %266
    return %269, %3
}
