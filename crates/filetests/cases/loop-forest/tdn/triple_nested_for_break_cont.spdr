# run: loop-forest

func @"System.Int32 System.Test::Loop2(System.Int32, System.Int32, System.Int32)":i32(ptr, i32, i32, i32) {
    # check: function `System.Int32 System.Test::Loop2(System.Int32, System.Int32, System.Int32)`:
    # nextln: %0:ctrl, %1:ptr, %2:i32, %3:i32, %4:i32 = entry         # x
    # nextln: %5:ctrl, %6:phisel = region %0          # x
    # nextln: %7:ptr = stackslot 4:4                  # x
    # nextln: %8:ptr = stackslot 4:4                  # x
    # nextln: %9:i32 = iconst 1                       # x
    # nextln: %10:ptr = stackslot 4:4                 # x
    # nextln: %11:i32 = iconst 0                      # x
    # nextln: %12:ctrl = store.4 %5, %11, %7          # x
    # nextln: %13:ctrl = store.4 %12, %11, %8         # x
    # nextln: %14:ctrl = store.4 %13, %11, %10        # x
    # nextln: %15:ptr = stackslot 4:4                 # x
    # nextln: %16:ctrl = store.4 %14, %11, %15        # x
    # nextln: %17:ctrl, %18:phisel = region %16       # x
    # nextln: %19:ctrl = store.4 %17, %11, %7         # x
    # nextln: %20:ctrl = store.4 %19, %11, %8         # x
    # nextln: %21:i32 = iconst 4                      # x
    # nextln: %22:i32 = iconst 3                      # x
    # nextln: %23:i32 = iconst 2                      # x
    # nextln: %24:i32 = and %111, %23                 # x
    # nextln: %25:ctrl, %26:ctrl = brcond %110, %24   # containing loop: 2; x
    # nextln: %27:ctrl, %28:phisel = region %25       # x
    # nextln: %29:ctrl = store.4 %27, %11, %10        # x
    # nextln: %30:ctrl, %31:phisel = region %29, %86  # loop header: 1; root: 2; parent: 2; x
    # nextln: %32:ctrl, %33:i32 = load.4 %30, %10     # containing loop: 2; x
    # nextln: %34:i32 = icmp slt %33, %3              # x
    # nextln: %35:ctrl, %36:ctrl = brcond %32, %34    # containing loop: 2; x
    # nextln: %37:ctrl, %38:phisel = region %35       # containing loop: 2; x
    # nextln: %39:ctrl, %40:i32 = load.4 %37, %8      # containing loop: 2; x
    # nextln: %41:i32 = and %40, %22                  # x
    # nextln: %42:ctrl, %43:ctrl = brcond %39, %41    # containing loop: 2; x
    # nextln: %44:ctrl, %45:phisel = region %42       # x
    # nextln: %46:ctrl = store.4 %44, %11, %15        # x
    # nextln: %47:ctrl, %48:phisel = region %46, %74  # loop header: 0; root: 2; parent: 1; x
    # nextln: %49:ctrl, %50:i32 = load.4 %47, %15     # containing loop: 0; x
    # nextln: %51:i32 = icmp slt %50, %4              # x
    # nextln: %52:ctrl, %53:ctrl = brcond %49, %51    # containing loop: 0; x
    # nextln: %54:ctrl, %55:phisel = region %52       # containing loop: 0; x
    # nextln: %56:ctrl, %57:i32 = load.4 %54, %8      # containing loop: 0; x
    # nextln: %58:i32 = and %57, %21                  # x
    # nextln: %59:ctrl, %60:ctrl = brcond %56, %58    # containing loop: 0; x
    # nextln: %61:ctrl, %62:phisel = region %59       # containing loop: 0; x
    # nextln: %63:ctrl, %64:i32 = load.4 %61, %7      # containing loop: 0; x
    # nextln: %65:ctrl, %66:i32 = load.4 %63, %15     # containing loop: 0; x
    # nextln: %67:i32 = iadd %64, %66                 # x
    # nextln: %68:ctrl = store.4 %65, %67, %7         # containing loop: 0; x
    # nextln: %69:ctrl, %70:phisel = region %60, %68  # containing loop: 0; x
    # nextln: %71:ctrl, %72:i32 = load.4 %69, %15     # containing loop: 0; x
    # nextln: %73:i32 = iadd %72, %9                  # x
    # nextln: %74:ctrl = store.4 %71, %73, %15        # containing loop: 0; x
    # nextln: %75:ctrl, %76:phisel = region %53       # containing loop: 1; x
    # nextln: %77:ctrl, %78:i32 = load.4 %75, %7      # containing loop: 1; x
    # nextln: %79:ctrl, %80:i32 = load.4 %77, %10     # containing loop: 1; x
    # nextln: %81:i32 = iadd %78, %80                 # x
    # nextln: %82:ctrl = store.4 %79, %81, %7         # containing loop: 1; x
    # nextln: %83:ctrl, %84:i32 = load.4 %82, %10     # containing loop: 1; x
    # nextln: %85:i32 = iadd %84, %9                  # x
    # nextln: %86:ctrl = store.4 %83, %85, %10        # containing loop: 1; x
    # nextln: %87:ctrl, %88:phisel = region %43, %36  # containing loop: 2; x
    # nextln: %89:ctrl, %90:i32 = load.4 %87, %7      # containing loop: 2; x
    # nextln: %91:ctrl, %92:i32 = load.4 %89, %8      # containing loop: 2; x
    # nextln: %93:i32 = iadd %90, %92                 # x
    # nextln: %94:ctrl = store.4 %91, %93, %7         # containing loop: 2; x
    # nextln: %95:ctrl, %96:phisel = region %26, %94  # containing loop: 2; x
    # nextln: %97:ctrl, %98:i32 = load.4 %95, %8      # containing loop: 2; x
    # nextln: %99:i32 = iadd %98, %9                  # x
    # nextln: %100:ctrl = store.4 %97, %99, %8        # containing loop: 2; x
    # nextln: %101:ctrl, %102:phisel = region %20, %100       # loop header: 2; root: 2; x
    # nextln: %103:ctrl, %104:i32 = load.4 %101, %8   # containing loop: 2; x
    # nextln: %105:i32 = icmp slt %104, %2            # x
    # nextln: %106:ctrl, %107:ctrl = brcond %103, %105        # containing loop: 2; x
    # nextln: %108:ctrl, %109:phisel = region %106    # containing loop: 2; x
    # nextln: %110:ctrl, %111:i32 = load.4 %108, %8   # containing loop: 2; x
    # nextln: %112:ctrl, %113:phisel = region %107    # x
    # nextln: %114:ctrl, %115:i32 = load.4 %112, %7   # x
    # nextln: return %114, %115                       # x

    %0:ctrl, %1:ptr, %2:i32, %3:i32, %4:i32 = entry
    %5:ctrl, %6:phisel = region %0
    %7:ptr = stackslot 4:4
    %10:ptr = stackslot 4:4
    %76:i32 = iconst 1
    %12:ptr = stackslot 4:4
    %8:i32 = iconst 0
    %9:ctrl = store.4 %5, %8, %7
    %11:ctrl = store.4 %9, %8, %10
    %13:ctrl = store.4 %11, %8, %12
    %14:ptr = stackslot 4:4
    %15:ctrl = store.4 %13, %8, %14
    %44:ctrl, %45:phisel = region %15
    %46:ctrl = store.4 %44, %8, %7
    %47:ctrl = store.4 %46, %8, %10
    %64:i32 = iconst 4
    %57:i32 = iconst 3
    %50:i32 = iconst 2
    %51:i32 = and %49, %50
    %52:ctrl, %53:ctrl = brcond %48, %51
    %18:ctrl, %19:phisel = region %52
    %54:ctrl = store.4 %18, %8, %12
    %34:ctrl, %35:phisel = region %54, %93
    %94:ctrl, %95:i32 = load.4 %34, %12
    %96:i32 = icmp slt %95, %3
    %97:ctrl, %98:ctrl = brcond %94, %96
    %20:ctrl, %21:phisel = region %97
    %55:ctrl, %56:i32 = load.4 %20, %10
    %58:i32 = and %56, %57
    %59:ctrl, %60:ctrl = brcond %55, %58
    %22:ctrl, %23:phisel = region %59
    %61:ctrl = store.4 %22, %8, %14
    %30:ctrl, %31:phisel = region %61, %78
    %79:ctrl, %80:i32 = load.4 %30, %14
    %81:i32 = icmp slt %80, %4
    %82:ctrl, %83:ctrl = brcond %79, %81
    %24:ctrl, %25:phisel = region %82
    %62:ctrl, %63:i32 = load.4 %24, %10
    %65:i32 = and %63, %64
    %66:ctrl, %67:ctrl = brcond %62, %65
    %26:ctrl, %27:phisel = region %66
    %68:ctrl, %69:i32 = load.4 %26, %7
    %70:ctrl, %71:i32 = load.4 %68, %14
    %72:i32 = iadd %69, %71
    %73:ctrl = store.4 %70, %72, %7
    %28:ctrl, %29:phisel = region %67, %73
    %74:ctrl, %75:i32 = load.4 %28, %14
    %77:i32 = iadd %75, %76
    %78:ctrl = store.4 %74, %77, %14
    %32:ctrl, %33:phisel = region %83
    %84:ctrl, %85:i32 = load.4 %32, %7
    %86:ctrl, %87:i32 = load.4 %84, %12
    %88:i32 = iadd %85, %87
    %89:ctrl = store.4 %86, %88, %7
    %90:ctrl, %91:i32 = load.4 %89, %12
    %92:i32 = iadd %91, %76
    %93:ctrl = store.4 %90, %92, %12
    %36:ctrl, %37:phisel = region %60, %98
    %99:ctrl, %100:i32 = load.4 %36, %7
    %101:ctrl, %102:i32 = load.4 %99, %10
    %103:i32 = iadd %100, %102
    %104:ctrl = store.4 %101, %103, %7
    %38:ctrl, %39:phisel = region %53, %104
    %105:ctrl, %106:i32 = load.4 %38, %10
    %107:i32 = iadd %106, %76
    %108:ctrl = store.4 %105, %107, %10
    %40:ctrl, %41:phisel = region %47, %108
    %109:ctrl, %110:i32 = load.4 %40, %10
    %111:i32 = icmp slt %110, %2
    %112:ctrl, %113:ctrl = brcond %109, %111
    %16:ctrl, %17:phisel = region %112
    %48:ctrl, %49:i32 = load.4 %16, %10
    %42:ctrl, %43:phisel = region %113
    %114:ctrl, %115:i32 = load.4 %42, %7
    return %114, %115
}
