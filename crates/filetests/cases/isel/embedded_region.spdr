# run: isel

func @embedded_region:i32(i32) {
    # check: function `embedded_region`:
    # nextln:       block0[%0:gpr32($$rdi)]:
    # nextln: 0000:      Jump(block1)
    # nextln:       => block1
    # nextln:       block1:
    # nextln: 0001:      Jump(block2)
    # nextln:       => block2
    # nextln:       block2:
    # nextln: 0002:      Jump(block3)
    # nextln:       => block3
    # nextln:       block3:
    # nextln: 0003:      Ret %0($$rax)[early]

    %ent:ctrl, %p1:i32 = entry
    %c1:ctrl, %ph1:phisel = region %ent
    %c2:ctrl, %ph2:phisel = region %c1
    %c3:ctrl, %ph3:phisel = region %c2
    return %c3, %p1
}

func @embedded_region_phi:i32(i32) {
    # check: function `embedded_region_phi`:
    # nextln:       block0[%1:gpr32($$rdi)]:
    # nextln: 0000:      Jump(block1)
    # nextln:       => block1
    # nextln:       block1:
    # nextln: 0001:      Jump(block2)
    # nextln:       => block2
    # nextln:       block2:
    # nextln: 0002:      Jump(block3)
    # nextln:       => block3
    # nextln:       block3:
    # nextln: 0003:      Ret %1($$rax)[early]

    %ent:ctrl, %p1:i32 = entry
    %c1:ctrl, %ph1:phisel = region %ent
    %c2:ctrl, %ph2:phisel = region %c1
    %p1c2:i32 = phi %ph2, %p1
    %c3:ctrl, %ph3:phisel = region %c2
    return %c3, %p1c2
}

func @embedded_region_phi_multi_succ:i32(i32, i32) {
    # check: function `embedded_region_phi_multi_succ`:
    # nextln:       block0[%3:gpr32($$rdi), %2:gpr32($$rsi)]:
    # nextln: 0000:      AluRRm(S32, Test) %2(reg)[early], %2(any)[early]
    # nextln: 0001:      Jumpcc(Ne, block1, block2)
    # nextln:       => block1, block2
    # nextln:       block1:
    # nextln: 0002:      Jump(block3)
    # nextln:       => block3
    # nextln:       block3:
    # nextln: 0003:      Ret %3($$rax)[early]
    # nextln:       block2:
    # nextln: 0004:      Ret %2($$rax)[early]

    %ent:ctrl, %p1:i32, %p2:i32 = entry
    %c1:ctrl, %c2:ctrl = brcond %ent, %p2
    %c3:ctrl, %ph3:phisel = region %c1
    %p1c3:i32 = phi %ph3, %p1
    %c4:ctrl, %ph4:phisel = region %c3
    return %c4, %p1c3
    %c5:ctrl, %ph5:phisel = region %c2
    %p2c5:i32 = phi %ph5, %p2
    return %c5, %p2c5
}
