# run: verify-err

func @brcond_bad_input_count(i32) {
    # check: function `brcond_bad_input_count`:
    # unordered: `$val:ctrl, $val:ctrl = brcond $val, $val, $val`: bad input count, expected 2

    %0:ctrl, %1:i32 = entry
    %2:ctrl, %3:ctrl = brcond %0, %1, %1
    %4:ctrl, %5:phisel = region %2, %3
    return %4
}

func @brcond_bad_output_count(i32) {
    # check: function `brcond_bad_output_count`:
    # unordered: `$val:ctrl = brcond $val, $val`: bad output count, expected 2
    # unordered: `$val:ctrl, $val:ctrl, $val:ctrl = brcond $val, $val`: bad output count, expected 2

    %0:ctrl, %1:i32 = entry
    %2:ctrl = brcond %0, %1
    %3:ctrl, %4:ctrl, %5:ctrl = brcond %2, %1
    %6:ctrl, %7:phisel = region %3, %4, %5
    return %6
}

func @brcond_bad_output_kind(i32) {
    # check: function `brcond_bad_output_kind`:
    # unordered: `$val:ctrl, $val:i32 = brcond $val, $val`: bad value kind for output 1, expected one of `ctrl`, got `i32`

    %0:ctrl, %1:i32 = entry
    %2:ctrl, %3:i32 = brcond %0, %1
    return %2
}

func @brcond_bad_input_kinds(i32) {
    # check: function `brcond_bad_input_kinds`:
    # unordered: `$val:ctrl, $val:ctrl = brcond $val, $val`: bad value kind for input 0, expected one of `ctrl`, got `i32`
    # unordered: `$val:ctrl, $val:ctrl = brcond $val, $val`: bad value kind for input 1, expected one of `i32`, `i64`, got `ctrl`

    %0:ctrl, %1:i32 = entry
    %2:ctrl, %3:ctrl = brcond %1, %0
    %4:ctrl, %5:phisel = region %2, %3
    return %4
}
