# run: verify-err

func @fdiv_bad_input_count:f64() {
    # check: function `fdiv_bad_input_count`:
    # unordered: `$val:f64 = fdiv $val, $val, $val`: bad input count, expected 2
    # unordered: `$val:f64 = fdiv`: bad input count, expected 2

    %0:ctrl = entry
    %1:f64 = fdiv
    %2:f64 = fdiv %1, %1, %1
    return %0, %2
}

func @fdiv_bad_output_count:f64(f64) {
    # check: function `fdiv_bad_output_count`:
    # unordered: `$val:f64, $val:f64 = fdiv $val, $val`: bad output count, expected 1

    %0:ctrl, %1:f64 = entry
    %2:f64, %3:f64 = fdiv %1, %1
    return %0, %2
}

func @fdiv_bad_output_kind(i32) {
    # check: function `fdiv_bad_output_kind`:
    # unordered: `$val:ctrl = fdiv $val, $val`: bad value kind for output 0, expected one of `f32`, `f64`, got `ctrl`

    %0:ctrl, %1:i32 = entry
    %2:ctrl = fdiv %1, %1
    %3:ctrl, %4:phisel = region %0, %2
    return %3
}

func @fdiv_bad_input_kind:f64(i64) {
    # check: function `fdiv_bad_input_kind`:
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 1, expected one of `f64`, got `i64`
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 0, expected one of `f64`, got `i64`
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 0, expected one of `f64`, got `i64`
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 1, expected one of `f64`, got `i64`

    %0:ctrl, %1:i64 = entry
    %3:f64 = fdiv %1, %1
    %4:f64 = fdiv %1, %3
    %5:f64 = fdiv %4, %1
    return %0, %5
}

func @fdiv_bad_input_kind_mix_f32:f32(f64) {
    # check: function `fdiv_bad_input_kind_mix_f32`:
    # unordered: `$val:f32 = fdiv $val, $val`: bad value kind for input 1, expected one of `f32`, got `f64`
    # unordered: `$val:f32 = fdiv $val, $val`: bad value kind for input 0, expected one of `f32`, got `f64`
    # unordered: `$val:f32 = fdiv $val, $val`: bad value kind for input 0, expected one of `f32`, got `f64`
    # unordered: `$val:f32 = fdiv $val, $val`: bad value kind for input 1, expected one of `f32`, got `f64`

    %0:ctrl, %1:f64 = entry
    %3:f32 = fdiv %1, %1
    %4:f32 = fdiv %1, %3
    %5:f32 = fdiv %4, %1
    return %0, %5
}

func @fdiv_bad_input_kind_mix_f64:f64(f32) {
    # check: function `fdiv_bad_input_kind_mix_f64`:
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 1, expected one of `f64`, got `f32`
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 0, expected one of `f64`, got `f32`
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 0, expected one of `f64`, got `f32`
    # unordered: `$val:f64 = fdiv $val, $val`: bad value kind for input 1, expected one of `f64`, got `f32`

    %0:ctrl, %1:f32 = entry
    %3:f64 = fdiv %1, %1
    %4:f64 = fdiv %1, %3
    %5:f64 = fdiv %4, %1
    return %0, %5
}
