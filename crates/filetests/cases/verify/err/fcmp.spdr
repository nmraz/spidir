# run: verify-err

func @fcmp_bad_input_count:i32(f64) {
    # check: function `fcmp_bad_input_count`:
    # unordered: `$val:i32 = fcmp oeq $val, $val, $val`: bad input count, expected 2
    # unordered: `$val:i32 = fcmp oeq`: bad input count, expected 2

    %0:ctrl, %1:f64 = entry
    %2:i32 = fcmp oeq
    %3:i32 = fcmp oeq %1, %1, %1
    %4:i32 = or %2, %3
    return %0, %4
}

func @fcmp_bad_output_count:i32(f64) {
    # check: function `fcmp_bad_output_count`:
    # unordered: `$val:i32, $val:i32 = fcmp oeq $val, $val`: bad output count, expected 1

    %0:ctrl, %1:f64 = entry
    %2:i32, %3:i32 = fcmp oeq %1, %1
    return %0, %2
}

func @fcmp_bad_output_kind(f64) {
    # check: function `fcmp_bad_output_kind`:
    # unordered: `$val:ctrl = fcmp oeq $val, $val`: bad value kind for output 0, expected one of `i32`, `i64`, got `ctrl`

    %0:ctrl, %1:f64 = entry
    %2:ctrl = fcmp oeq %1, %1
    %3:ctrl, %4:phisel = region %0, %2
    return %3
}

func @fcmp_bad_input_kind_i64_i32:i32(f64, i64) {
    # check: function `fcmp_bad_input_kind_i64_i32`:
    # unordered: `$val:i32 = fcmp oeq $val, $val`: bad value kind for input 1, expected one of `f64`, got `i64`

    %0:ctrl, %1:f64, %2:i64 = entry
    %3:i32 = fcmp oeq %1, %2
    return %0, %3
}
