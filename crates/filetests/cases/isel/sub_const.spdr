# run: isel

func @sub_pos64:i64(i64) {
    # check: function `sub_pos64`:
    # nextln:       block0[%1:gpr64($$rdi)]:
    # nextln: 0000:      %0:gpr64(any)[late] = AluRmI(S64, Sub, 5) %1(tied:0)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 5
    %val:i64 = isub %a, %b
    return %c, %val
}

func @sub_neg64:i64(i64) {
    # check: function `sub_neg64`:
    # nextln:       block0[%1:gpr64($$rdi)]:
    # nextln: 0000:      %0:gpr64(any)[late] = AluRmI(S64, Sub, -5) %1(tied:0)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 18446744073709551611
    %val:i64 = isub %a, %b
    return %c, %val
}

func @sub_pos_large64:i64(i64) {
    # check: function `sub_pos_large64`:
    # nextln:       block0[%1:gpr64($$rdi)]:
    # nextln: 0000:      %2:gpr64(reg)[late] = MovRU32(4294967295)
    # nextln: 0001:      %0:gpr64(reg)[late] = AluRRm(S64, Sub) %1(tied:0)[early], %2(any)[early]
    # nextln: 0002:      Ret %0($$rax)[early]

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 4294967295
    %val:i64 = isub %a, %b
    return %c, %val
}

func @sub_neg_large64:i64(i64) {
    # check: function `sub_neg_large64`:
    # nextln:       block0[%1:gpr64($$rdi)]:
    # nextln: 0000:      %2:gpr64(reg)[late] = MovRI64(18446744069414584321)
    # nextln: 0001:      %0:gpr64(reg)[late] = AluRRm(S64, Sub) %1(tied:0)[early], %2(any)[early]
    # nextln: 0002:      Ret %0($$rax)[early]

    %c:ctrl, %a:i64 = entry
    %b:i64 = iconst 18446744069414584321
    %val:i64 = isub %a, %b
    return %c, %val
}

func @sub_pos32:i32(i32) {
    # check: function `sub_pos32`:
    # nextln:       block0[%1:gpr64($$rdi)]:
    # nextln: 0000:      %0:gpr64(any)[late] = AluRmI(S32, Sub, 5) %1(tied:0)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 5
    %val:i32 = isub %a, %b
    return %c, %val
}

func @sub_neg32:i32(i32) {
    # check: function `sub_neg32`:
    # nextln:       block0[%1:gpr64($$rdi)]:
    # nextln: 0000:      %0:gpr64(any)[late] = AluRmI(S32, Sub, -5) %1(tied:0)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 4294967291
    %val:i32 = isub %a, %b
    return %c, %val
}

func @sub_max32:i32(i32) {
    # check: function `sub_max32`:
    # nextln:       block0[%1:gpr64($$rdi)]:
    # nextln: 0000:      %0:gpr64(any)[late] = AluRmI(S32, Sub, 2147483647) %1(tied:0)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %c:ctrl, %a:i32 = entry
    %b:i32 = iconst 2147483647
    %val:i32 = isub %a, %b
    return %c, %val
}
