# run: isel

func @float64tosint32:i32(f64) {
    # check: function `float64tosint32`:
    # nextln:       block0[%1:xmm64($$xmm0)]:
    # nextln: 0000:      %0:gpr32(reg)[late] = Cvts2si(S32, Double) %1(any)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %0:ctrl, %1:f64 = entry
    %2:i32 = floattosint %1
    return %0, %2
}

func @float64tosint64:i64(f64) {
    # check: function `float64tosint64`:
    # nextln:       block0[%1:xmm64($$xmm0)]:
    # nextln: 0000:      %0:gpr64(reg)[late] = Cvts2si(S64, Double) %1(any)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %0:ctrl, %1:f64 = entry
    %2:i64 = floattosint %1
    return %0, %2
}

func @float32tosint32:i32(f32) {
    # check: function `float32tosint32`:
    # nextln:       block0[%1:xmm32($$xmm0)]:
    # nextln: 0000:      %0:gpr32(reg)[late] = Cvts2si(S32, Single) %1(any)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %0:ctrl, %1:f32 = entry
    %2:i32 = floattosint %1
    return %0, %2
}

func @float32tosint64:i64(f32) {
    # check: function `float32tosint64`:
    # nextln:       block0[%1:xmm32($$xmm0)]:
    # nextln: 0000:      %0:gpr64(reg)[late] = Cvts2si(S64, Single) %1(any)[early]
    # nextln: 0001:      Ret %0($$rax)[early]

    %0:ctrl, %1:f32 = entry
    %2:i64 = floattosint %1
    return %0, %2
}
