# run: verify-err

func @srem_bad_input_count:i32() {
    # check: function `srem_bad_input_count`:
    # unordered: `$val:ctrl, $val:i32 = srem`: bad input count, expected 3
    # unordered: `$val:ctrl, $val:i32 = srem $val, $val, $val, $val`: bad input count, expected 3

    %0:ctrl = entry
    %1:ctrl, %2:i32 = srem
    %3:ctrl, %4:i32 = srem %1, %2, %2, %2
    %5:ctrl, %6:phisel = region %0, %3
    return %5, %2
}

func @srem_bad_output_count:i32(i32) {
    # check: function `srem_bad_output_count`:
    # unordered: `$val:ctrl, $val:i32, $val:i32 = srem $val, $val, $val`: bad output count, expected 2

    %0:ctrl, %1:i32 = entry
    %2:ctrl, %3:i32, %4:i32 = srem %0, %1, %1
    return %2, %3
}

func @srem_bad_output_kind(i32) {
    # check: function `srem_bad_output_kind`:
    # unordered: `$val:ctrl, $val:ctrl = srem $val, $val, $val`: bad value kind for output 1, expected one of `i32`, `i64`, got `ctrl`
    # unordered: `$val:ctrl, $val:ctrl = srem $val, $val, $val`: control output 1 unused

    %0:ctrl, %1:i32 = entry
    %2:ctrl, %3:ctrl = srem %0, %1, %1
    return %2
}

func @srem_bad_input_kind_i32:i32(i64) {
    # check: function `srem_bad_input_kind_i32`:
    # unordered: `$val:ctrl, $val:i32 = srem $val, $val, $val`: bad value kind for input 1, expected one of `i32`, got `i64`
    # unordered: `$val:ctrl, $val:i32 = srem $val, $val, $val`: bad value kind for input 2, expected one of `i32`, got `i64`
    # unordered: `$val:ctrl, $val:i32 = srem $val, $val, $val`: bad value kind for input 1, expected one of `i32`, got `i64`
    # unordered: `$val:ctrl, $val:i32 = srem $val, $val, $val`: bad value kind for input 2, expected one of `i32`, got `i64`

    %0:ctrl, %1:i64 = entry
    %3:ctrl, %4:i32 = srem %0, %1, %1
    %5:ctrl, %6:i32 = srem %3, %1, %4
    %7:ctrl, %8:i32 = srem %5, %6, %1
    return %7, %8
}

func @srem_bad_input_kind_i64:i64(i32) {
    # check: function `srem_bad_input_kind_i64`:
    # unordered: `$val:ctrl, $val:i64 = srem $val, $val, $val`: bad value kind for input 1, expected one of `i64`, got `i32`
    # unordered: `$val:ctrl, $val:i64 = srem $val, $val, $val`: bad value kind for input 2, expected one of `i64`, got `i32`
    # unordered: `$val:ctrl, $val:i64 = srem $val, $val, $val`: bad value kind for input 1, expected one of `i64`, got `i32`
    # unordered: `$val:ctrl, $val:i64 = srem $val, $val, $val`: bad value kind for input 2, expected one of `i64`, got `i32`

    %0:ctrl, %1:i32 = entry
    %3:ctrl, %4:i64 = srem %0, %1, %1
    %5:ctrl, %6:i64 = srem %3, %1, %4
    %7:ctrl, %8:i64 = srem %5, %6, %1
    return %7, %8
}
